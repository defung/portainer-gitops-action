---
openapi: 3.0.1
info:
  title: PortainerCE API
  description: |
    Portainer API is an HTTP API served by Portainer. It is used by the Portainer UI and everything you can do with the UI can be done using the HTTP API.
    Examples are available at https://documentation.portainer.io/api/api-examples/
    You can find out more about Portainer at [http://portainer.io](http://portainer.io) and get some support on [Slack](http://portainer.io/slack/).

    # Authentication

    Most of the API environments(endpoints) require to be authenticated as well as some level of authorization to be used.
    Portainer API uses JSON Web Token to manage authentication and thus requires you to provide a token in the **Authorization** header of each request
    with the **Bearer** authentication mechanism.

    Example:

    ```
    Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJhZG1pbiIsInJvbGUiOjEsImV4cCI6MTQ5OTM3NjE1NH0.NJ6vE8FY1WG6jsRQzfMqeatJ4vh2TWAeeYfDhP71YEE
    ```

    # Security

    Each API environment(endpoint) has an associated access policy, it is documented in the description of each environment(endpoint).

    Different access policies are available:

    - Public access
    - Authenticated access
    - Restricted access
    - Administrator access

    ### Public access

    No authentication is required to access the environments(endpoints) with this access policy.

    ### Authenticated access

    Authentication is required to access the environments(endpoints) with this access policy.

    ### Restricted access

    Authentication is required to access the environments(endpoints) with this access policy.
    Extra-checks might be added to ensure access to the resource is granted. Returned data might also be filtered.

    ### Administrator access

    Authentication as well as an administrator role are required to access the environments(endpoints) with this access policy.

    # Execute Docker requests

    Portainer **DO NOT** expose specific environments(endpoints) to manage your Docker resources (create a container, remove a volume, etc...).

    Instead, it acts as a reverse-proxy to the Docker HTTP API. This means that you can execute Docker requests **via** the Portainer HTTP API.

    To do so, you can use the `/endpoints/{id}/docker` Portainer API environment(endpoint) (which is not documented below due to Swagger limitations). This environment(endpoint) has a restricted access policy so you still need to be authenticated to be able to query this environment(endpoint). Any query on this environment(endpoint) will be proxied to the Docker API of the associated environment(endpoint) (requests and responses objects are the same as documented in the Docker API).

    # Private Registry

    Using private registry, you will need to pass a based64 encoded JSON string ‘{"registryId":\<registryID value\>}’ inside the Request Header. The parameter name is "X-Registry-Auth".
    \<registryID value\> - The registry ID where the repository was created.

    Example:

    ```
    eyJyZWdpc3RyeUlkIjoxfQ==
    ```

    **NOTE**: You can find more information on how to query the Docker API in the [Docker official documentation](https://docs.docker.com/engine/api/v1.30/) as well as in [this Portainer example](https://documentation.portainer.io/api/api-examples/).
  contact:
    email: info@portainer.io
  license:
    name: zlib
    url: https://github.com/portainer/portainer/blob/develop/LICENSE
  version: 2.20.3
servers:
  - url: "/api"
tags:
  - name: auth
    description: Authenticate against Portainer HTTP API
  - name: backup
    description: Manage backups
  - name: custom_templates
    description: Manage Custom Templates
  - name: docker
    description: Manage Docker resources
  - name: edge
    description: Manage Edge related environment(endpoint) settings
  - name: edge_groups
    description: Manage Edge Groups
  - name: edge_jobs
    description: Manage Edge Jobs
  - name: edge_stacks
    description: Manage Edge Stacks
  - name: edge_templates
    description: Manage Edge Templates
  - name: endpoint_groups
    description: Manage environment(endpoint) groups
  - name: endpoints
    description: Manage Docker environments(endpoints)
  - name: gitops
    description: Operate git repository
  - name: helm
    description: Manage Helm charts
  - name: intel
    description: Manage Intel AMT settings
  - name: kubernetes
    description: Manage Kubernetes cluster
  - name: ldap
    description: Manage LDAP settings
  - name: motd
    description: Fetch the message of the day
  - name: registries
    description: Manage Docker registries
  - name: resource_controls
    description: Manage access control on Docker resources
  - name: roles
    description: Manage roles
  - name: settings
    description: Manage Portainer settings
  - name: ssl
    description: Manage ssl settings
  - name: stacks
    description: Manage stacks
  - name: status
    description: Information about the Portainer instance
  - name: system
    description: Manage Portainer system
  - name: tags
    description: Manage tags
  - name: team_memberships
    description: Manage team memberships
  - name: teams
    description: Manage teams
  - name: templates
    description: Manage App Templates
  - name: upload
    description: Upload files
  - name: users
    description: Manage users
  - name: webhooks
    description: Manage webhooks
  - name: websocket
    description: Create exec sessions using websockets
paths:
  "/auth":
    post:
      tags:
        - auth
      summary: Authenticate
      description: |-
        **Access policy**: public
        Use this environment(endpoint) to authenticate against Portainer using a username and password.
      operationId: AuthenticateUser
      requestBody:
        description: Credentials used for authentication
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/auth.authenticatePayload"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/auth.authenticateResponse"
        '400':
          description: Invalid request
          content: {}
        '422':
          description: Invalid Credentials
          content: {}
        '500':
          description: Server error
          content: {}
      x-codegen-request-body-name: body
  "/auth/logout":
    post:
      tags:
        - auth
      summary: Logout
      description: "**Access policy**: public"
      operationId: Logout
      responses:
        '204':
          description: Success
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/auth/oauth/validate":
    post:
      tags:
        - auth
      summary: Authenticate with OAuth
      description: "**Access policy**: public"
      operationId: ValidateOAuth
      requestBody:
        description: OAuth Credentials used for authentication
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/auth.oauthPayload"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/auth.authenticateResponse"
        '400':
          description: Invalid request
          content: {}
        '422':
          description: Invalid Credentials
          content: {}
        '500':
          description: Server error
          content: {}
      x-codegen-request-body-name: body
  "/backup":
    post:
      tags:
        - backup
      summary: Creates an archive with a system data snapshot that could be used to
        restore the system.
      description: |-
        Creates an archive with a system data snapshot that could be used to restore the system.
        **Access policy**: admin
      operationId: Backup
      requestBody:
        description: An object contains the password to encrypt the backup with
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/backup.backupPayload"
        required: false
      responses:
        '200':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/custom_templates":
    get:
      tags:
        - custom_templates
      summary: List available custom templates
      description: |-
        List available custom templates.
        **Access policy**: authenticated
      operationId: CustomTemplateList
      parameters:
        - name: type
          in: query
          description: Template types
          required: true
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: edge
          in: query
          description: Filter by edge templates
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/portainer.CustomTemplate"
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    post:
      tags:
        - custom_templates
      summary: Create a custom template
      description: |-
        Create a custom template.
        **Access policy**: authenticated
      operationId: CustomTemplateCreate
      parameters:
        - name: method
          in: query
          description: method for creating template
          required: true
          schema:
            type: string
            enum:
              - string
              - file
              - repository
      requestBody:
        description: for body documentation see the relevant /custom_templates/{method}
          endpoint
        content:
          application/json:
            schema:
              type: object
          multipart/form-data:
            schema:
              type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.CustomTemplate"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      deprecated: true
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/custom_templates/{id}":
    get:
      tags:
        - custom_templates
      summary: Inspect a custom template
      description: |-
        Retrieve details about a template.
        **Access policy**: authenticated
      operationId: CustomTemplateInspect
      parameters:
        - name: id
          in: path
          description: Template identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.CustomTemplate"
        '400':
          description: Invalid request
          content: {}
        '404':
          description: Template not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    put:
      tags:
        - custom_templates
      summary: Update a template
      description: |-
        Update a template.
        **Access policy**: authenticated
      operationId: CustomTemplateUpdate
      parameters:
        - name: id
          in: path
          description: Template identifier
          required: true
          schema:
            type: integer
      requestBody:
        description: Template details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/customtemplates.customTemplateUpdatePayload"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.CustomTemplate"
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied to access template
          content: {}
        '404':
          description: Template not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
    delete:
      tags:
        - custom_templates
      summary: Remove a template
      description: |-
        Remove a template.
        **Access policy**: authenticated
      operationId: CustomTemplateDelete
      parameters:
        - name: id
          in: path
          description: Template identifier
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Access denied to resource
          content: {}
        '404':
          description: Template not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/custom_templates/{id}/file":
    get:
      tags:
        - custom_templates
      summary: Get Template stack file content.
      description: |-
        Retrieve the content of the Stack file for the specified custom template
        **Access policy**: authenticated
      operationId: CustomTemplateFile
      parameters:
        - name: id
          in: path
          description: Template identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/customtemplates.fileResponse"
        '400':
          description: Invalid request
          content: {}
        '404':
          description: Custom template not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/custom_templates/{id}/git_fetch":
    put:
      tags:
        - custom_templates
      summary: Fetch the latest config file content based on custom template's git
        repository configuration
      description: |-
        Retrieve details about a template created from git repository method.
        **Access policy**: authenticated
      operationId: CustomTemplateGitFetch
      parameters:
        - name: id
          in: path
          description: Template identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/customtemplates.fileResponse"
        '400':
          description: Invalid request
          content: {}
        '404':
          description: Custom template not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/custom_templates/create/file":
    post:
      tags:
        - custom_templates
      summary: Create a custom template
      description: |-
        Create a custom template.
        **Access policy**: authenticated
      operationId: CustomTemplateCreateFile
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - Description
                - File
                - Note
                - Platform
                - Title
                - Type
              type: object
              properties:
                Title:
                  type: string
                  description: Title of the template
                Description:
                  type: string
                  description: Description of the template
                Note:
                  type: string
                  description: A note that will be displayed in the UI. Supports HTML
                    content
                Platform:
                  type: integer
                  description: Platform associated to the template (1 - 'linux', 2
                    - 'windows')
                  format: int32
                  enum:
                    - '1'
                    - '2'
                Type:
                  type: integer
                  description: Type of created stack (1 - swarm, 2 - compose, 3 -
                    kubernetes)
                  format: int32
                  enum:
                    - '1'
                    - '2'
                    - '3'
                File:
                  type: string
                  description: File
                  format: binary
                Logo:
                  type: string
                  description: URL of the template's logo
                Variables:
                  type: string
                  description: A json array of variables definitions
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.CustomTemplate"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/custom_templates/create/repository":
    post:
      tags:
        - custom_templates
      summary: Create a custom template
      description: |-
        Create a custom template.
        **Access policy**: authenticated
      operationId: CustomTemplateCreateRepository
      requestBody:
        description: Required when using method=repository
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/customtemplates.customTemplateFromGitRepositoryPayload"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.CustomTemplate"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/custom_templates/create/string":
    post:
      tags:
        - custom_templates
      summary: Create a custom template
      description: |-
        Create a custom template.
        **Access policy**: authenticated
      operationId: CustomTemplateCreateString
      requestBody:
        description: body
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/customtemplates.customTemplateFromFileContentPayload"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.CustomTemplate"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/docker/{environmentId}/containers/{containerId}/gpus":
    get:
      tags:
        - docker
      summary: Fetch container gpus data
      description: "**Access policy**:"
      operationId: dockerContainerGpusInspect
      parameters:
        - name: environmentId
          in: path
          description: Environment identifier
          required: true
          schema:
            type: integer
        - name: containerId
          in: path
          description: Container identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/containers.containerGpusResponse"
        '400':
          description: Bad request
          content: {}
        '404':
          description: Environment or container not found
          content: {}
        '500':
          description: Internal server error
          content: {}
      security:
        - jwt: []
  "/docker/{environmentId}/images":
    get:
      tags:
        - docker
      summary: Fetch images
      description: "**Access policy**:"
      operationId: dockerImagesList
      parameters:
        - name: environmentId
          in: path
          description: Environment identifier
          required: true
          schema:
            type: integer
        - name: withUsage
          in: query
          description: Include image usage information
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/images.ImageResponse"
        '400':
          description: Bad request
          content: {}
        '500':
          description: Internal server error
          content: {}
      security:
        - jwt: []
  "/edge_groups":
    get:
      tags:
        - edge_groups
      summary: list EdgeGroups
      description: "**Access policy**: administrator"
      operationId: EdgeGroupList
      responses:
        '200':
          description: EdgeGroups
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/edgegroups.decoratedEdgeGroup"
        '500':
          description: Internal Server Error
          content: {}
        '503':
          description: Edge compute features are disabled
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    post:
      tags:
        - edge_groups
      summary: Create an EdgeGroup
      description: "**Access policy**: administrator"
      operationId: EdgeGroupCreate
      requestBody:
        description: EdgeGroup data
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/edgegroups.edgeGroupCreatePayload"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.EdgeGroup"
        '500':
          description: Internal Server Error
          content: {}
        '503':
          description: Edge compute features are disabled
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/edge_groups/{id}":
    get:
      tags:
        - edge_groups
      summary: Inspects an EdgeGroup
      description: "**Access policy**: administrator"
      operationId: EdgeGroupInspect
      parameters:
        - name: id
          in: path
          description: EdgeGroup Id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.EdgeGroup"
        '500':
          description: Internal Server Error
          content: {}
        '503':
          description: Edge compute features are disabled
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    put:
      tags:
        - edge_groups
      summary: Updates an EdgeGroup
      description: "**Access policy**: administrator"
      operationId: EgeGroupUpdate
      parameters:
        - name: id
          in: path
          description: EdgeGroup Id
          required: true
          schema:
            type: integer
      requestBody:
        description: EdgeGroup data
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/edgegroups.edgeGroupUpdatePayload"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.EdgeGroup"
        '500':
          description: Internal Server Error
          content: {}
        '503':
          description: Edge compute features are disabled
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
    delete:
      tags:
        - edge_groups
      summary: Deletes an EdgeGroup
      description: "**Access policy**: administrator"
      operationId: EdgeGroupDelete
      parameters:
        - name: id
          in: path
          description: EdgeGroup Id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content
          content: {}
        '500':
          description: Internal Server Error
          content: {}
        '503':
          description: Edge compute features are disabled
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/edge_jobs":
    get:
      tags:
        - edge_jobs
      summary: Fetch EdgeJobs list
      description: "**Access policy**: administrator"
      operationId: EdgeJobList
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/portainer.EdgeJob"
        '400':
          description: Bad Request
          content: {}
        '500':
          description: Internal Server Error
          content: {}
        '503':
          description: Edge compute features are disabled
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    post:
      tags:
        - edge_jobs
      summary: Create an EdgeJob
      description: "**Access policy**: administrator"
      operationId: EdgeJobCreate
      parameters:
        - name: method
          in: query
          description: Creation Method
          required: true
          schema:
            type: string
            enum:
              - file
              - string
      requestBody:
        description: for body documentation see the relevant /edge_jobs/create/{method}
          endpoint
        content:
          "*/*":
            schema:
              type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.EdgeGroup"
        '500':
          description: Internal Server Error
          content: {}
        '503':
          description: Edge compute features are disabled
          content: {}
      deprecated: true
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/edge_jobs/{id}":
    get:
      tags:
        - edge_jobs
      summary: Inspect an EdgeJob
      description: "**Access policy**: administrator"
      operationId: EdgeJobInspect
      parameters:
        - name: id
          in: path
          description: EdgeJob Id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.EdgeJob"
        '400':
          description: Bad Request
          content: {}
        '500':
          description: Internal Server Error
          content: {}
        '503':
          description: Edge compute features are disabled
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    post:
      tags:
        - edge_jobs
      summary: Update an EdgeJob
      description: "**Access policy**: administrator"
      operationId: EdgeJobUpdate
      parameters:
        - name: id
          in: path
          description: EdgeJob Id
          required: true
          schema:
            type: integer
      requestBody:
        description: EdgeGroup data
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/edgejobs.edgeJobUpdatePayload"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.EdgeJob"
        '400':
          description: Bad Request
          content: {}
        '500':
          description: Internal Server Error
          content: {}
        '503':
          description: Edge compute features are disabled
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
    delete:
      tags:
        - edge_jobs
      summary: Delete an EdgeJob
      description: "**Access policy**: administrator"
      operationId: EdgeJobDelete
      parameters:
        - name: id
          in: path
          description: EdgeJob Id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content
          content: {}
        '400':
          description: Bad Request
          content: {}
        '500':
          description: Internal Server Error
          content: {}
        '503':
          description: Edge compute features are disabled
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/edge_jobs/{id}/file":
    get:
      tags:
        - edge_jobs
      summary: Fetch a file of an EdgeJob
      description: "**Access policy**: administrator"
      operationId: EdgeJobFile
      parameters:
        - name: id
          in: path
          description: EdgeJob Id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/edgejobs.edgeJobFileResponse"
        '400':
          description: Bad Request
          content: {}
        '500':
          description: Internal Server Error
          content: {}
        '503':
          description: Edge compute features are disabled
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/edge_jobs/{id}/tasks":
    get:
      tags:
        - edge_jobs
      summary: Fetch the list of tasks on an EdgeJob
      description: "**Access policy**: administrator"
      operationId: EdgeJobTasksList
      parameters:
        - name: id
          in: path
          description: EdgeJob Id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/edgejobs.taskContainer"
        '400':
          description: Bad Request
          content: {}
        '500':
          description: Internal Server Error
          content: {}
        '503':
          description: Edge compute features are disabled
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/edge_jobs/{id}/tasks/{taskID}/logs":
    get:
      tags:
        - edge_jobs
      summary: Fetch the log for a specifc task on an EdgeJob
      description: "**Access policy**: administrator"
      operationId: EdgeJobTaskLogsInspect
      parameters:
        - name: id
          in: path
          description: EdgeJob Id
          required: true
          schema:
            type: integer
        - name: taskID
          in: path
          description: Task Id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/edgejobs.fileResponse"
        '400':
          description: Bad Request
          content: {}
        '500':
          description: Internal Server Error
          content: {}
        '503':
          description: Edge compute features are disabled
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    post:
      tags:
        - edge_jobs
      summary: Collect the log for a specifc task on an EdgeJob
      description: "**Access policy**: administrator"
      operationId: EdgeJobTasksCollect
      parameters:
        - name: id
          in: path
          description: EdgeJob Id
          required: true
          schema:
            type: integer
        - name: taskID
          in: path
          description: Task Id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content
          content: {}
        '400':
          description: Bad Request
          content: {}
        '500':
          description: Internal Server Error
          content: {}
        '503':
          description: Edge compute features are disabled
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    delete:
      tags:
        - edge_jobs
      summary: Clear the log for a specifc task on an EdgeJob
      description: "**Access policy**: administrator"
      operationId: EdgeJobTasksClear
      parameters:
        - name: id
          in: path
          description: EdgeJob Id
          required: true
          schema:
            type: integer
        - name: taskID
          in: path
          description: Task Id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content
          content: {}
        '400':
          description: Bad Request
          content: {}
        '500':
          description: Internal Server Error
          content: {}
        '503':
          description: Edge compute features are disabled
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/edge_jobs/create/file":
    post:
      tags:
        - edge_jobs
      summary: Create an EdgeJob from a file
      description: "**Access policy**: administrator"
      operationId: EdgeJobCreateFile
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - CronExpression
                - EdgeGroups
                - Endpoints
                - Name
                - file
              type: object
              properties:
                file:
                  type: string
                  description: Content of the Stack file
                  format: binary
                Name:
                  type: string
                  description: Name of the stack
                CronExpression:
                  type: string
                  description: A cron expression to schedule this job
                EdgeGroups:
                  type: string
                  description: JSON stringified array of Edge Groups ids
                Endpoints:
                  type: string
                  description: JSON stringified array of Environment ids
                Recurring:
                  type: boolean
                  description: If recurring
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.EdgeGroup"
        '500':
          description: Internal Server Error
          content: {}
        '503':
          description: Edge compute features are disabled
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/edge_jobs/create/string":
    post:
      tags:
        - edge_jobs
      summary: Create an EdgeJob from a text
      description: "**Access policy**: administrator"
      operationId: EdgeJobCreateString
      requestBody:
        description: EdgeGroup data when method is string
        content:
          "*/*":
            schema:
              "$ref": "#/components/schemas/edgejobs.edgeJobCreateFromFileContentPayload"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.EdgeGroup"
        '500':
          description: Internal Server Error
          content: {}
        '503':
          description: Edge compute features are disabled
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/edge_stacks":
    get:
      tags:
        - edge_stacks
      summary: Fetches the list of EdgeStacks
      description: "**Access policy**: administrator"
      operationId: EdgeStackList
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/portainer.EdgeStack"
        '400':
          description: Bad Request
          content: {}
        '500':
          description: Internal Server Error
          content: {}
        '503':
          description: Edge compute features are disabled
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    post:
      tags:
        - edge_stacks
      summary: Create an EdgeStack
      description: "**Access policy**: administrator"
      operationId: EdgeStackCreate
      parameters:
        - name: method
          in: query
          description: Creation Method
          required: true
          schema:
            type: string
            enum:
              - file
              - string
              - repository
      requestBody:
        description: for body documentation see the relevant /edge_stacks/create/{method}
          endpoint
        content:
          "*/*":
            schema:
              type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.EdgeStack"
        '500':
          description: Internal Server Error
          content: {}
        '503':
          description: Edge compute features are disabled
          content: {}
      deprecated: true
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/edge_stacks/{id}":
    get:
      tags:
        - edge_stacks
      summary: Inspect an EdgeStack
      description: "**Access policy**: administrator"
      operationId: EdgeStackInspect
      parameters:
        - name: id
          in: path
          description: EdgeStack Id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.EdgeStack"
        '400':
          description: Bad Request
          content: {}
        '500':
          description: Internal Server Error
          content: {}
        '503':
          description: Edge compute features are disabled
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    put:
      tags:
        - edge_stacks
      summary: Update an EdgeStack
      description: "**Access policy**: administrator"
      operationId: EdgeStackUpdate
      parameters:
        - name: id
          in: path
          description: EdgeStack Id
          required: true
          schema:
            type: integer
      requestBody:
        description: EdgeStack data
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/edgestacks.updateEdgeStackPayload"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.EdgeStack"
        '400':
          description: Bad Request
          content: {}
        '500':
          description: Internal Server Error
          content: {}
        '503':
          description: Edge compute features are disabled
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
    delete:
      tags:
        - edge_stacks
      summary: Delete an EdgeStack
      description: "**Access policy**: administrator"
      operationId: EdgeStackDelete
      parameters:
        - name: id
          in: path
          description: EdgeStack Id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content
          content: {}
        '400':
          description: Bad Request
          content: {}
        '500':
          description: Internal Server Error
          content: {}
        '503':
          description: Edge compute features are disabled
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/edge_stacks/{id}/file":
    get:
      tags:
        - edge_stacks
      summary: Fetches the stack file for an EdgeStack
      description: "**Access policy**: administrator"
      operationId: EdgeStackFile
      parameters:
        - name: id
          in: path
          description: EdgeStack Id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/edgestacks.stackFileResponse"
        '400':
          description: Bad Request
          content: {}
        '500':
          description: Internal Server Error
          content: {}
        '503':
          description: Edge compute features are disabled
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/edge_stacks/{id}/status":
    put:
      tags:
        - edge_stacks
      summary: Update an EdgeStack status
      description: Authorized only if the request is done by an Edge Environment(Endpoint)
      operationId: EdgeStackStatusUpdate
      parameters:
        - name: id
          in: path
          description: EdgeStack Id
          required: true
          schema:
            type: integer
      requestBody:
        description: EdgeStack status payload
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/edgestacks.updateStatusPayload"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.EdgeStack"
        '400':
          description: Bad Request
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
        '500':
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: body
  "/edge_stacks/{id}/status/{environmentId}":
    delete:
      tags:
        - edge_stacks
      summary: Delete an EdgeStack status
      description: Authorized only if the request is done by an Edge Environment(Endpoint)
      operationId: EdgeStackStatusDelete
      parameters:
        - name: id
          in: path
          description: EdgeStack Id
          required: true
          schema:
            type: integer
        - name: environmentId
          in: path
          description: Environment identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.EdgeStack"
        '400':
          description: Bad Request
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
        '500':
          description: Internal Server Error
          content: {}
      deprecated: true
  "/edge_stacks/create/file":
    post:
      tags:
        - edge_stacks
      summary: Create an EdgeStack from file
      description: "**Access policy**: administrator"
      operationId: EdgeStackCreateFile
      parameters:
        - name: dryrun
          in: query
          description: if true, will not create an edge stack, but just will check the
            settings and return a non-persisted edge stack object
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - DeploymentType
                - EdgeGroups
                - Name
                - file
              type: object
              properties:
                Name:
                  type: string
                  description: Name of the stack
                file:
                  type: string
                  description: Content of the Stack file
                  format: binary
                EdgeGroups:
                  type: string
                  description: JSON stringified array of Edge Groups ids
                DeploymentType:
                  type: integer
                  description: deploy type 0 - 'compose', 1 - 'kubernetes', 2 - 'nomad'
                  format: int32
                Registries:
                  type: string
                  description: JSON stringified array of Registry ids to use for this
                    stack
                UseManifestNamespaces:
                  type: boolean
                  description: Uses the manifest's namespaces instead of the default
                    one, relevant only for kube environments
                PrePullImage:
                  type: boolean
                  description: Pre Pull image
                RetryDeploy:
                  type: boolean
                  description: Retry deploy
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.EdgeStack"
        '400':
          description: Bad request
          content: {}
        '500':
          description: Internal server error
          content: {}
        '503':
          description: Edge compute features are disabled
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/edge_stacks/create/repository":
    post:
      tags:
        - edge_stacks
      summary: Create an EdgeStack from a git repository
      description: "**Access policy**: administrator"
      operationId: EdgeStackCreateRepository
      parameters:
        - name: dryrun
          in: query
          description: if true, will not create an edge stack, but just will check the
            settings and return a non-persisted edge stack object
          schema:
            type: string
      requestBody:
        description: stack config
        content:
          "*/*":
            schema:
              "$ref": "#/components/schemas/edgestacks.edgeStackFromGitRepositoryPayload"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.EdgeStack"
        '400':
          description: Bad request
          content: {}
        '500':
          description: Internal server error
          content: {}
        '503':
          description: Edge compute features are disabled
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/edge_stacks/create/string":
    post:
      tags:
        - edge_stacks
      summary: Create an EdgeStack from a text
      description: "**Access policy**: administrator"
      operationId: EdgeStackCreateString
      parameters:
        - name: dryrun
          in: query
          description: if true, will not create an edge stack, but just will check the
            settings and return a non-persisted edge stack object
          schema:
            type: string
      requestBody:
        description: stack config
        content:
          "*/*":
            schema:
              "$ref": "#/components/schemas/edgestacks.edgeStackFromStringPayload"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.EdgeStack"
        '400':
          description: Bad request
          content: {}
        '500':
          description: Internal server error
          content: {}
        '503':
          description: Edge compute features are disabled
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/edge_templates":
    get:
      tags:
        - edge_templates
      summary: Fetches the list of Edge Templates
      description: "**Access policy**: administrator"
      operationId: EdgeTemplateList
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/portainer.Template"
        '500':
          description: Internal Server Error
          content: {}
      deprecated: true
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/endpoint_groups":
    get:
      tags:
        - endpoint_groups
      summary: List Environment(Endpoint) groups
      description: |-
        List all environment(endpoint) groups based on the current user authorizations. Will
        return all environment(endpoint) groups if using an administrator account otherwise it will
        only return authorized environment(endpoint) groups.
        **Access policy**: restricted
      operationId: EndpointGroupList
      responses:
        '200':
          description: Environment(Endpoint) group
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/portainer.EndpointGroup"
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    post:
      tags:
        - endpoint_groups
      summary: Create an Environment(Endpoint) Group
      description: |-
        Create a new environment(endpoint) group.
        **Access policy**: administrator
      requestBody:
        description: Environment(Endpoint) Group details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/endpointgroups.endpointGroupCreatePayload"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.EndpointGroup"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/endpoint_groups/{id}":
    get:
      tags:
        - endpoint_groups
      summary: Inspect an Environment(Endpoint) group
      description: |-
        Retrieve details abont an environment(endpoint) group.
        **Access policy**: administrator
      parameters:
        - name: id
          in: path
          description: Environment(Endpoint) group identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.EndpointGroup"
        '400':
          description: Invalid request
          content: {}
        '404':
          description: EndpointGroup not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    put:
      tags:
        - endpoint_groups
      summary: Update an environment(endpoint) group
      description: |-
        Update an environment(endpoint) group.
        **Access policy**: administrator
      operationId: EndpointGroupUpdate
      parameters:
        - name: id
          in: path
          description: EndpointGroup identifier
          required: true
          schema:
            type: integer
      requestBody:
        description: EndpointGroup details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/endpointgroups.endpointGroupUpdatePayload"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.EndpointGroup"
        '400':
          description: Invalid request
          content: {}
        '404':
          description: EndpointGroup not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
    delete:
      tags:
        - endpoint_groups
      summary: Remove an environment(endpoint) group
      description: |-
        Remove an environment(endpoint) group.
        **Access policy**: administrator
      operationId: EndpointGroupDelete
      parameters:
        - name: id
          in: path
          description: EndpointGroup identifier
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '404':
          description: EndpointGroup not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/endpoint_groups/{id}/endpoints/{endpointId}":
    put:
      tags:
        - endpoint_groups
      summary: Add an environment(endpoint) to an environment(endpoint) group
      description: |-
        Add an environment(endpoint) to an environment(endpoint) group
        **Access policy**: administrator
      operationId: EndpointGroupAddEndpoint
      parameters:
        - name: id
          in: path
          description: EndpointGroup identifier
          required: true
          schema:
            type: integer
        - name: endpointId
          in: path
          description: Environment(Endpoint) identifier
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '404':
          description: EndpointGroup not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    delete:
      tags:
        - endpoint_groups
      summary: Removes environment(endpoint) from an environment(endpoint) group
      description: "**Access policy**: administrator"
      operationId: EndpointGroupDeleteEndpoint
      parameters:
        - name: id
          in: path
          description: EndpointGroup identifier
          required: true
          schema:
            type: integer
        - name: endpointId
          in: path
          description: Environment(Endpoint) identifier
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '404':
          description: EndpointGroup not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/endpoints":
    get:
      tags:
        - endpoints
      summary: List environments(endpoints)
      description: |-
        List all environments(endpoints) based on the current user authorizations. Will
        return all environments(endpoints) if using an administrator or team leader account otherwise it will
        only return authorized environments(endpoints).
        **Access policy**: restricted
      operationId: EndpointList
      parameters:
        - name: start
          in: query
          description: Start searching from
          schema:
            type: integer
        - name: limit
          in: query
          description: Limit results to this value
          schema:
            type: integer
        - name: order
          in: query
          description: Order sorted results by desc/asc
          schema:
            type: integer
        - name: search
          in: query
          description: Search query
          schema:
            type: string
        - name: groupIds
          in: query
          description: List environments(endpoints) of these groups
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: status
          in: query
          description: List environments(endpoints) by this status
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: types
          in: query
          description: List environments(endpoints) of this type
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: tagIds
          in: query
          description: search environments(endpoints) with these tags (depends on tagsPartialMatch)
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: tagsPartialMatch
          in: query
          description: If true, will return environment(endpoint) which has one of tagIds,
            if false (or missing) will return only environments(endpoints) that has
            all the tags
          schema:
            type: boolean
        - name: endpointIds
          in: query
          description: will return only these environments(endpoints)
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: provisioned
          in: query
          description: If true, will return environment(endpoint) that were provisioned
          schema:
            type: boolean
        - name: agentVersions
          in: query
          description: will return only environments with on of these agent versions
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: edgeAsync
          in: query
          description: if exists true show only edge async agents, false show only standard
            edge agents. if missing, will show both types (relevant only for edge agents)
          schema:
            type: boolean
        - name: edgeDeviceUntrusted
          in: query
          description: if true, show only untrusted edge agents, if false show only
            trusted edge agents (relevant only for edge agents)
          schema:
            type: boolean
        - name: edgeCheckInPassedSeconds
          in: query
          description: if bigger then zero, show only edge agents that checked-in in
            the last provided seconds (relevant only for edge agents)
          schema:
            type: number
        - name: excludeSnapshots
          in: query
          description: if true, the snapshot data won't be retrieved
          schema:
            type: boolean
        - name: name
          in: query
          description: will return only environments(endpoints) with this name
          schema:
            type: string
        - name: edgeStackStatus
          in: query
          description: only applied when edgeStackId exists. Filter the returned environments
            based on their deployment status in the stack (not the environment status!)
          schema:
            type: string
      responses:
        '200':
          description: Endpoints
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/portainer.Endpoint"
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    post:
      tags:
        - endpoints
      summary: Create a new environment(endpoint)
      description: |-
        Create a new environment(endpoint) that will be used to manage an environment(endpoint).
        **Access policy**: administrator
      operationId: EndpointCreate
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - EdgeTunnelServerAddress
                - EndpointCreationType
                - Name
              type: object
              properties:
                Name:
                  type: string
                  description: 'Name that will be used to identify this environment(endpoint)
                    (example: my-environment)'
                EndpointCreationType:
                  type: integer
                  description: 'Environment(Endpoint) type. Value must be one of:
                    1 (Local Docker environment), 2 (Agent environment), 3 (Azure
                    environment), 4 (Edge agent environment) or 5 (Local Kubernetes
                    Environment)'
                  format: int32
                URL:
                  type: string
                  description: 'URL or IP address of a Docker host (example: docker.mydomain.tld:2375).
                    Defaults to local if not specified (Linux: /var/run/docker.sock,
                    Windows: //./pipe/docker_engine). Cannot be empty if EndpointCreationType
                    is set to 4 (Edge agent environment)'
                PublicURL:
                  type: string
                  description: 'URL or IP address where exposed containers will be
                    reachable. Defaults to URL if not specified (example: docker.mydomain.tld:2375)'
                GroupID:
                  type: integer
                  description: Environment(Endpoint) group identifier. If not specified
                    will default to 1 (unassigned).
                  format: int32
                TLS:
                  type: boolean
                  description: Require TLS to connect against this environment(endpoint).
                    Must be true if EndpointCreationType is set to 2 (Agent environment)
                TLSSkipVerify:
                  type: boolean
                  description: Skip server verification when using TLS. Must be true
                    if EndpointCreationType is set to 2 (Agent environment)
                TLSSkipClientVerify:
                  type: boolean
                  description: Skip client verification when using TLS. Must be true
                    if EndpointCreationType is set to 2 (Agent environment)
                TLSCACertFile:
                  type: string
                  description: TLS CA certificate file
                  format: binary
                TLSCertFile:
                  type: string
                  description: TLS client certificate file
                  format: binary
                TLSKeyFile:
                  type: string
                  description: TLS client key file
                  format: binary
                AzureApplicationID:
                  type: string
                  description: Azure application ID. Required if environment(endpoint)
                    type is set to 3
                AzureTenantID:
                  type: string
                  description: Azure tenant ID. Required if environment(endpoint)
                    type is set to 3
                AzureAuthenticationKey:
                  type: string
                  description: Azure authentication key. Required if environment(endpoint)
                    type is set to 3
                TagIds:
                  type: array
                  description: List of tag identifiers to which this environment(endpoint)
                    is associated
                  items:
                    type: integer
                EdgeCheckinInterval:
                  type: integer
                  description: The check in interval for edge agent (in seconds)
                  format: int32
                EdgeTunnelServerAddress:
                  type: string
                  description: URL or IP address that will be used to establish a
                    reverse tunnel
                Gpus:
                  type: string
                  description: List of GPUs - json stringified array of {name, value}
                    structs
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.Endpoint"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/endpoints/{id}":
    get:
      tags:
        - endpoints
      summary: Inspect an environment(endpoint)
      description: |-
        Retrieve details about an environment(endpoint).
        **Access policy**: restricted
      operationId: EndpointInspect
      parameters:
        - name: id
          in: path
          description: Environment(Endpoint) identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.Endpoint"
        '400':
          description: Invalid request
          content: {}
        '404':
          description: Environment(Endpoint) not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    put:
      tags:
        - endpoints
      summary: Update an environment(endpoint)
      description: |-
        Update an environment(endpoint).
        **Access policy**: authenticated
      operationId: EndpointUpdate
      parameters:
        - name: id
          in: path
          description: Environment(Endpoint) identifier
          required: true
          schema:
            type: integer
      requestBody:
        description: Environment(Endpoint) details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/endpoints.endpointUpdatePayload"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.Endpoint"
        '400':
          description: Invalid request
          content: {}
        '404':
          description: Environment(Endpoint) not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
    delete:
      tags:
        - endpoints
      summary: Remove an environment(endpoint)
      description: |-
        Remove an environment(endpoint).
        **Access policy**: administrator
      operationId: EndpointDelete
      parameters:
        - name: id
          in: path
          description: Environment(Endpoint) identifier
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: Environment(Endpoint) not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/endpoints/{id}/association":
    put:
      tags:
        - endpoints
      summary: De-association an edge environment(endpoint)
      description: |-
        De-association an edge environment(endpoint).
        **Access policy**: administrator
      operationId: EndpointAssociationDelete
      parameters:
        - name: id
          in: path
          description: Environment(Endpoint) identifier
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '404':
          description: Environment(Endpoint) not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/endpoints/{id}/docker/v2/browse/put":
    post:
      tags:
        - endpoints
      summary: Upload a file under a specific path on the file system of an environment
        (endpoint)
      description: |-
        Use this environment(endpoint) to upload TLS files.
        **Access policy**: administrator
      parameters:
        - name: id
          in: path
          description: Environment(Endpoint) identifier
          required: true
          schema:
            type: integer
        - name: volumeID
          in: query
          description: Optional volume identifier to upload the file
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - Path
                - file
              type: object
              properties:
                Path:
                  type: string
                  description: The destination path to upload the file to
                file:
                  type: string
                  description: The file to upload
                  format: binary
        required: true
      responses:
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/endpoints/{id}/dockerhub/{registryId}":
    get:
      tags:
        - endpoints
      summary: fetch docker pull limits
      description: |-
        get docker pull limits for a docker hub registry in the environment
        **Access policy**:
      operationId: endpointDockerhubStatus
      parameters:
        - name: id
          in: path
          description: endpoint ID
          required: true
          schema:
            type: integer
        - name: registryId
          in: path
          description: registry ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/endpoints.dockerhubStatusResponse"
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: registry or endpoint not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/endpoints/{id}/edge/jobs/{jobID}/logs":
    post:
      tags:
        - edge
        - endpoints
      summary: Inspect an EdgeJob Log
      description: "**Access policy**: public"
      parameters:
        - name: id
          in: path
          description: environment(endpoint) Id
          required: true
          schema:
            type: integer
        - name: jobID
          in: path
          description: Job Id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content: {}
        '400':
          description: Bad Request
          content: {}
        '500':
          description: Internal Server Error
          content: {}
  "/endpoints/{id}/edge/stacks/{stackId}":
    get:
      tags:
        - edge
        - endpoints
        - edge_stacks
      summary: Inspect an Edge Stack for an Environment(Endpoint)
      description: "**Access policy**: public"
      parameters:
        - name: id
          in: path
          description: environment(endpoint) Id
          required: true
          schema:
            type: integer
        - name: stackId
          in: path
          description: EdgeStack Id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/edge.StackPayload"
        '400':
          description: Bad Request
          content: {}
        '404':
          description: Not Found
          content: {}
        '500':
          description: Internal Server Error
          content: {}
  "/endpoints/{id}/edge/status":
    get:
      tags:
        - endpoints
      summary: Get environment(endpoint) status
      description: |-
        environment(endpoint) for edge agent to check status of environment(endpoint)
        **Access policy**: restricted only to Edge environments(endpoints)
      operationId: EndpointEdgeStatusInspect
      parameters:
        - name: id
          in: path
          description: Environment(Endpoint) identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/endpointedge.endpointEdgeStatusInspectResponse"
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied to access environment(endpoint)
          content: {}
        '404':
          description: Environment(Endpoint) not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/endpoints/{id}/forceupdateservice":
    put:
      tags:
        - endpoints
      summary: force update a docker service
      description: |-
        force update a docker service
        **Access policy**: authenticated
      operationId: endpointForceUpdateService
      parameters:
        - name: id
          in: path
          description: endpoint identifier
          required: true
          schema:
            type: integer
      requestBody:
        description: details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/endpoints.forceUpdateServicePayload"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/swarm.ServiceUpdateResponse"
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: endpoint not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/endpoints/{id}/kubernetes/helm":
    get:
      tags:
        - helm
      summary: List Helm Releases
      description: "**Access policy**: authenticated"
      operationId: HelmList
      parameters:
        - name: id
          in: path
          description: Environment(Endpoint) identifier
          required: true
          schema:
            type: integer
        - name: namespace
          in: query
          description: specify an optional namespace
          schema:
            type: string
        - name: filter
          in: query
          description: specify an optional filter
          schema:
            type: string
        - name: selector
          in: query
          description: specify an optional selector
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/release.ReleaseElement"
        '400':
          description: Invalid environment(endpoint) identifier
          content: {}
        '401':
          description: Unauthorized
          content: {}
        '404':
          description: Environment(Endpoint) or ServiceAccount not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    post:
      tags:
        - helm
      summary: Install Helm Chart
      description: "**Access policy**: authenticated"
      operationId: HelmInstall
      parameters:
        - name: id
          in: path
          description: Environment(Endpoint) identifier
          required: true
          schema:
            type: integer
      requestBody:
        description: Chart details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/helm.installChartPayload"
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/release.Release"
        '401':
          description: Unauthorized
          content: {}
        '404':
          description: Environment(Endpoint) or ServiceAccount not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: payload
  "/endpoints/{id}/kubernetes/helm/{release}":
    delete:
      tags:
        - helm
      summary: Delete Helm Release
      description: "**Access policy**: authenticated"
      operationId: HelmDelete
      parameters:
        - name: id
          in: path
          description: Environment(Endpoint) identifier
          required: true
          schema:
            type: integer
        - name: release
          in: path
          description: The name of the release/application to uninstall
          required: true
          schema:
            type: string
        - name: namespace
          in: query
          description: An optional namespace
          schema:
            type: string
      responses:
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid environment(endpoint) id or bad request
          content: {}
        '401':
          description: Unauthorized
          content: {}
        '404':
          description: Environment(Endpoint) or ServiceAccount not found
          content: {}
        '500':
          description: Server error or helm error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/endpoints/{id}/kubernetes/helm/repositories":
    get:
      tags:
        - helm
      summary: List a users helm repositories
      description: |-
        Inspect a user helm repositories.
        **Access policy**: authenticated
      operationId: HelmUserRepositoriesListDeprecated
      parameters:
        - name: id
          in: path
          description: User identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/helm.helmUserRepositoryResponse"
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '500':
          description: Server error
          content: {}
      deprecated: true
      security:
        - ApiKeyAuth: []
        - jwt: []
    post:
      tags:
        - helm
      summary: Create a user helm repository
      description: |-
        Create a user helm repository.
        **Access policy**: authenticated
      operationId: HelmUserRepositoryCreateDeprecated
      parameters:
        - name: id
          in: path
          description: Environment(Endpoint) identifier
          required: true
          schema:
            type: integer
      requestBody:
        description: Helm Repository
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/helm.addHelmRepoUrlPayload"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.HelmUserRepository"
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '500':
          description: Server error
          content: {}
      deprecated: true
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: payload
  "/endpoints/{id}/registries":
    get:
      tags:
        - endpoints
      summary: List Registries on environment
      description: |-
        List all registries based on the current user authorizations in current environment.
        **Access policy**: authenticated
      operationId: endpointRegistriesList
      parameters:
        - name: namespace
          in: query
          description: required if kubernetes environment, will show registries by namespace
          schema:
            type: string
        - name: id
          in: path
          description: Environment(Endpoint) identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/portainer.Registry"
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/endpoints/{id}/registries/{registryId}":
    put:
      tags:
        - endpoints
      summary: update registry access for environment
      description: "**Access policy**: authenticated"
      operationId: endpointRegistryAccess
      parameters:
        - name: id
          in: path
          description: Environment(Endpoint) identifier
          required: true
          schema:
            type: integer
        - name: registryId
          in: path
          description: Registry identifier
          required: true
          schema:
            type: integer
      requestBody:
        description: details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/endpoints.registryAccessPayload"
        required: true
      responses:
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: Endpoint not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/endpoints/{id}/settings":
    put:
      tags:
        - endpoints
      summary: Update settings for an environment(endpoint)
      description: |-
        Update settings for an environment(endpoint).
        **Access policy**: authenticated
      operationId: EndpointSettingsUpdate
      parameters:
        - name: id
          in: path
          description: Environment(Endpoint) identifier
          required: true
          schema:
            type: integer
      requestBody:
        description: Environment(Endpoint) details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/endpoints.endpointSettingsUpdatePayload"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.Endpoint"
        '400':
          description: Invalid request
          content: {}
        '404':
          description: Environment(Endpoint) not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/endpoints/{id}/snapshot":
    post:
      tags:
        - endpoints
      summary: Snapshots an environment(endpoint)
      description: |-
        Snapshots an environment(endpoint)
        **Access policy**: administrator
      operationId: EndpointSnapshot
      parameters:
        - name: id
          in: path
          description: Environment(Endpoint) identifier
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '404':
          description: Environment(Endpoint) not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/endpoints/global-key":
    post:
      tags:
        - endpoints
      summary: Create or retrieve the endpoint for an EdgeID
      operationId: EndpointCreateGlobalKey
      responses:
        '200':
          description: Success
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/endpoints.endpointCreateGlobalKeyResponse"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
  "/endpoints/relations":
    put:
      tags:
        - endpoints
      summary: Update relations for a list of environments
      description: |-
        Update relations for a list of environments
        Edge groups, tags and environment group can be updated.

        **Access policy**: administrator
      operationId: EndpointUpdateRelations
      requestBody:
        description: Environment relations data
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/endpoints.endpointUpdateRelationsPayload"
        required: true
      responses:
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '401':
          description: Unauthorized
          content: {}
        '404':
          description: Not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - jwt: []
      x-codegen-request-body-name: body
  "/endpoints/snapshot":
    post:
      tags:
        - endpoints
      summary: Snapshot all environments(endpoints)
      description: |-
        Snapshot all environments(endpoints)
        **Access policy**: administrator
      operationId: EndpointSnapshots
      responses:
        '204':
          description: Success
          content: {}
        '500':
          description: Server Error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/fdo":
    post:
      tags:
        - intel
      summary: Enable Portainer's FDO capabilities
      description: |-
        Enable Portainer's FDO capabilities
        **Access policy**: administrator
      operationId: fdoConfigure
      requestBody:
        description: FDO Settings
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/fdo.fdoConfigurePayload"
        required: true
      responses:
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied to access settings
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - jwt: []
      x-codegen-request-body-name: body
  "/fdo/configure/{guid}":
    post:
      tags:
        - intel
      summary: configures an FDO device
      description: |-
        configures an FDO device
        **Access policy**: administrator
      operationId: fdoConfigureDevice
      parameters:
        - name: guid
          in: path
          description: Guid
          required: true
          schema:
            type: integer
      requestBody:
        description: Device Configuration
        content:
          "*/*":
            schema:
              "$ref": "#/components/schemas/fdo.deviceConfigurePayload"
        required: true
      responses:
        '200':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied to access settings
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - jwt: []
      x-codegen-request-body-name: body
  "/fdo/list":
    get:
      tags:
        - intel
      summary: List all known FDO vouchers
      description: |-
        List all known FDO vouchers
        **Access policy**: administrator
      operationId: fdoListAll
      responses:
        '200':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied to access settings
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - jwt: []
  "/fdo/profiles":
    get:
      tags:
        - intel
      summary: retrieves all FDO profiles
      description: |-
        retrieves all FDO profiles
        **Access policy**: administrator
      operationId: fdoProfileList
      responses:
        '200':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied to access settings
          content: {}
        '500':
          description: Bad gateway
          content: {}
      security:
        - jwt: []
    post:
      tags:
        - intel
      summary: creates a new FDO Profile
      description: |-
        creates a new FDO Profile
        **Access policy**: administrator
      operationId: createProfile
      responses:
        '200':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '409':
          description: Profile name already exists
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - jwt: []
  "/fdo/profiles/{id}":
    get:
      tags:
        - intel
      summary: retrieves a given FDO profile information and content
      description: |-
        retrieves a given FDO profile information and content
        **Access policy**: administrator
      operationId: fdoProfileInspect
      parameters:
        - name: id
          in: path
          description: FDO Profile identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - jwt: []
    put:
      tags:
        - intel
      summary: updates an existing FDO Profile
      description: |-
        updates an existing FDO Profile
        **Access policy**: administrator
      operationId: updateProfile
      parameters:
        - name: id
          in: path
          description: FDO Profile identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '409':
          description: Profile name already exists
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - jwt: []
    delete:
      tags:
        - intel
      summary: deletes a FDO Profile
      description: |-
        deletes a FDO Profile
        **Access policy**: administrator
      operationId: deleteProfile
      parameters:
        - name: id
          in: path
          description: FDO Profile identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - jwt: []
  "/fdo/profiles/{id}/duplicate":
    post:
      tags:
        - intel
      summary: duplicated an existing FDO Profile
      description: |-
        duplicated an existing FDO Profile
        **Access policy**: administrator
      operationId: duplicate
      parameters:
        - name: id
          in: path
          description: FDO Profile identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - jwt: []
  "/fdo/register":
    post:
      tags:
        - intel
      summary: register an FDO device
      description: |-
        register an FDO device
        **Access policy**: administrator
      operationId: fdoRegisterDevice
      responses:
        '200':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied to access settings
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - jwt: []
  "/gitops/repo/file/preview":
    post:
      tags:
        - gitops
      summary: preview the content of target file in the git repository
      description: |-
        Retrieve the compose file content based on git repository configuration
        **Access policy**: authenticated
      operationId: GitOperationRepoFilePreview
      requestBody:
        description: Template details
        content:
          "*/*":
            schema:
              "$ref": "#/components/schemas/gitops.repositoryFilePreviewPayload"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/gitops.fileResponse"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/kubernetes/{id}/ingresscontrollers":
    get:
      tags:
        - kubernetes
      summary: Get a list of ingress controllers
      description: |-
        Get a list of ingress controllers for the given environment
        **Access policy**: authenticated
      operationId: getKubernetesIngressControllers
      parameters:
        - name: id
          in: path
          description: Environment (Endpoint) identifier
          required: true
          schema:
            type: integer
        - name: allowedOnly
          in: query
          description: Only return allowed ingress controllers
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/kubernetes.K8sIngressController"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    put:
      tags:
        - kubernetes
      summary: Update (block/unblock) ingress controllers
      description: |-
        Update (block/unblock) ingress controllers
        **Access policy**: authenticated
      operationId: updateKubernetesIngressControllers
      parameters:
        - name: id
          in: path
          description: Environment (Endpoint) identifier
          required: true
          schema:
            type: integer
      requestBody:
        description: Ingress controllers
        content:
          application/json:
            schema:
              type: array
              items:
                type: array
                items:
                  "$ref": "#/components/schemas/kubernetes.K8sIngressController"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/kubernetes/{id}/ingresses/delete":
    post:
      tags:
        - kubernetes
      summary: Delete kubernetes ingresses
      description: |-
        Delete kubernetes ingresses for the provided environment
        **Access policy**: authenticated
      operationId: deleteKubernetesIngresses
      parameters:
        - name: id
          in: path
          description: Environment (Endpoint) identifier
          required: true
          schema:
            type: integer
      requestBody:
        description: Ingress details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/kubernetes.K8sIngressDeleteRequests"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/kubernetes/{id}/metrics/nodes":
    get:
      tags:
        - kubernetes
      summary: Get a list of nodes with their live metrics
      description: |-
        Get a list of nodes with their live metrics
        **Access policy**: authenticated
      operationId: getKubernetesMetricsForAllNodes
      parameters:
        - name: id
          in: path
          description: Environment (Endpoint) identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1beta1.NodeMetricsList"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/kubernetes/{id}/metrics/nodes/{name}":
    get:
      tags:
        - kubernetes
      summary: Get live metrics for a node
      description: |-
        Get live metrics for a node
        **Access policy**: authenticated
      operationId: getKubernetesMetricsForNode
      parameters:
        - name: id
          in: path
          description: Environment (Endpoint) identifier
          required: true
          schema:
            type: integer
        - name: name
          in: path
          description: Node identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1beta1.NodeMetrics"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/kubernetes/{id}/metrics/pods/{namespace}":
    get:
      tags:
        - kubernetes
      summary: Get a list of pods with their live metrics
      description: |-
        Get a list of pods with their live metrics
        **Access policy**: authenticated
      operationId: getKubernetesMetricsForAllPods
      parameters:
        - name: id
          in: path
          description: Environment (Endpoint) identifier
          required: true
          schema:
            type: integer
        - name: namespace
          in: path
          description: Namespace
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1beta1.PodMetricsList"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/kubernetes/{id}/metrics/pods/{namespace}/{name}":
    get:
      tags:
        - kubernetes
      summary: Get live metrics for a pod
      description: |-
        Get live metrics for a pod
        **Access policy**: authenticated
      operationId: getKubernetesMetricsForPod
      parameters:
        - name: id
          in: path
          description: Environment (Endpoint) identifier
          required: true
          schema:
            type: integer
        - name: namespace
          in: path
          description: Namespace
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: Pod identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1beta1.PodMetrics"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/kubernetes/{id}/namespaces":
    get:
      tags:
        - kubernetes
      summary: Get a list of kubernetes namespaces
      description: |-
        Get a list of all kubernetes namespaces in the cluster
        **Access policy**: authenticated
      operationId: getKubernetesNamespaces
      parameters:
        - name: id
          in: path
          description: Environment (Endpoint) identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  "$ref": "#/components/schemas/portainer.K8sNamespaceInfo"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    post:
      tags:
        - kubernetes
      summary: Create a kubernetes namespace
      description: |-
        Create a kubernetes namespace within the given environment
        **Access policy**: authenticated
      operationId: createKubernetesNamespace
      parameters:
        - name: id
          in: path
          description: Environment (Endpoint) identifier
          required: true
          schema:
            type: integer
      requestBody:
        description: Namespace configuration details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/kubernetes.K8sNamespaceDetails"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/kubernetes/{id}/namespaces/{namespace}":
    get:
      tags:
        - kubernetes
      summary: Get kubernetes namespace details
      description: |-
        Get kubernetes namespace details for the provided namespace within the given environment
        **Access policy**: authenticated
      operationId: getKubernetesNamespace
      parameters:
        - name: id
          in: path
          description: Environment (Endpoint) identifier
          required: true
          schema:
            type: integer
        - name: namespace
          in: path
          description: Namespace
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.K8sNamespaceInfo"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    put:
      tags:
        - kubernetes
      summary: Updates a kubernetes namespace
      description: |-
        Update a kubernetes namespace within the given environment
        **Access policy**: authenticated
      operationId: updateKubernetesNamespace
      parameters:
        - name: id
          in: path
          description: Environment (Endpoint) identifier
          required: true
          schema:
            type: integer
        - name: namespace
          in: path
          description: Namespace
          required: true
          schema:
            type: string
      requestBody:
        description: Namespace details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/kubernetes.K8sNamespaceDetails"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
    delete:
      tags:
        - kubernetes
      summary: Delete kubernetes namespace
      description: |-
        Delete a kubernetes namespace within the given environment
        **Access policy**: authenticated
      operationId: deleteKubernetesNamespace
      parameters:
        - name: id
          in: path
          description: Environment (Endpoint) identifier
          required: true
          schema:
            type: integer
        - name: namespace
          in: path
          description: Namespace
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/kubernetes/{id}/namespaces/{namespace}/configuration":
    get:
      tags:
        - kubernetes
      summary: Get ConfigMaps and Secrets
      description: |-
        Get all ConfigMaps and Secrets for a given namespace
        **Access policy**: authenticated
      operationId: getKubernetesConfigMapsAndSecrets
      parameters:
        - name: id
          in: path
          description: Environment (Endpoint) identifier
          required: true
          schema:
            type: integer
        - name: namespace
          in: path
          description: Namespace name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: array
                  items:
                    "$ref": "#/components/schemas/kubernetes.K8sConfigMapOrSecret"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      deprecated: true
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/kubernetes/{id}/namespaces/{namespace}/ingresscontrollers":
    get:
      tags:
        - kubernetes
      summary: Get a list ingress controllers by namespace
      description: |-
        Get a list of ingress controllers for the given environment in the provided namespace
        **Access policy**: authenticated
      operationId: getKubernetesIngressControllersByNamespace
      parameters:
        - name: id
          in: path
          description: Environment (Endpoint) identifier
          required: true
          schema:
            type: integer
        - name: namespace
          in: path
          description: Namespace
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/kubernetes.K8sIngressController"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    put:
      tags:
        - kubernetes
      summary: Update (block/unblock) ingress controllers by namespace
      description: |-
        Update (block/unblock) ingress controllers by namespace for the provided environment
        **Access policy**: authenticated
      operationId: updateKubernetesIngressControllersByNamespace
      parameters:
        - name: id
          in: path
          description: Environment (Endpoint) identifier
          required: true
          schema:
            type: integer
        - name: namespace
          in: path
          description: Namespace name
          required: true
          schema:
            type: string
      requestBody:
        description: Ingress controllers
        content:
          application/json:
            schema:
              type: array
              items:
                type: array
                items:
                  "$ref": "#/components/schemas/kubernetes.K8sIngressController"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/kubernetes/{id}/namespaces/{namespace}/ingresses":
    get:
      tags:
        - kubernetes
      summary: Get kubernetes ingresses by namespace
      description: |-
        Get kubernetes ingresses by namespace for the provided environment
        **Access policy**: authenticated
      operationId: getKubernetesIngresses
      parameters:
        - name: id
          in: path
          description: Environment (Endpoint) identifier
          required: true
          schema:
            type: integer
        - name: namespace
          in: path
          description: Namespace name
          required: true
          schema:
            type: string
      requestBody:
        description: Ingress details
        content:
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/kubernetes.K8sIngressInfo"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
    put:
      tags:
        - kubernetes
      summary: Update kubernetes ingress rule
      description: |-
        Update kubernetes ingress rule for the provided environment
        **Access policy**: authenticated
      operationId: updateKubernetesIngress
      parameters:
        - name: id
          in: path
          description: Environment (Endpoint) identifier
          required: true
          schema:
            type: integer
        - name: namespace
          in: path
          description: Namespace name
          required: true
          schema:
            type: string
      requestBody:
        description: Ingress details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/kubernetes.K8sIngressInfo"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
    post:
      tags:
        - kubernetes
      summary: Create a kubernetes ingress by namespace
      description: |-
        Create a kubernetes ingress by namespace for the provided environment
        **Access policy**: authenticated
      operationId: createKubernetesIngress
      parameters:
        - name: id
          in: path
          description: Environment (Endpoint) identifier
          required: true
          schema:
            type: integer
        - name: namespace
          in: path
          description: Namespace name
          required: true
          schema:
            type: string
      requestBody:
        description: Ingress details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/kubernetes.K8sIngressInfo"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/kubernetes/{id}/namespaces/{namespace}/services":
    get:
      tags:
        - kubernetes
      summary: Get a list of kubernetes services for a given namespace
      description: |-
        Get a list of kubernetes services for a given namespace
        **Access policy**: authenticated
      operationId: getKubernetesServices
      parameters:
        - name: id
          in: path
          description: Environment (Endpoint) identifier
          required: true
          schema:
            type: integer
        - name: namespace
          in: path
          description: Namespace name
          required: true
          schema:
            type: string
        - name: lookupapplications
          in: query
          description: Lookup applications associated with each service
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/kubernetes.K8sServiceInfo"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    put:
      tags:
        - kubernetes
      summary: Update a kubernetes service
      description: |-
        Update a kubernetes service within a given namespace
        **Access policy**: authenticated
      operationId: updateKubernetesService
      parameters:
        - name: id
          in: path
          description: Environment (Endpoint) identifier
          required: true
          schema:
            type: integer
        - name: namespace
          in: path
          description: Namespace name
          required: true
          schema:
            type: string
      requestBody:
        description: Service definition
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/kubernetes.K8sServiceInfo"
        required: true
      responses:
        '200':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
    post:
      tags:
        - kubernetes
      summary: Create a kubernetes service
      description: |-
        Create a kubernetes service within a given namespace
        **Access policy**: authenticated
      operationId: createKubernetesService
      parameters:
        - name: id
          in: path
          description: Environment (Endpoint) identifier
          required: true
          schema:
            type: integer
        - name: namespace
          in: path
          description: Namespace name
          required: true
          schema:
            type: string
      requestBody:
        description: Service definition
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/kubernetes.K8sServiceInfo"
        required: true
      responses:
        '200':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/kubernetes/{id}/namespaces/{namespace}/system":
    put:
      tags:
        - kubernetes
      summary: Toggle the system state for a namespace
      description: |-
        Toggle the system state for a namespace
        **Access policy**: administrator or environment(endpoint) admin
      operationId: KubernetesNamespacesToggleSystem
      parameters:
        - name: id
          in: path
          description: Environment(Endpoint) identifier
          required: true
          schema:
            type: integer
        - name: namespace
          in: path
          description: Namespace name
          required: true
          schema:
            type: string
      requestBody:
        description: Update details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/kubernetes.namespacesToggleSystemPayload"
        required: true
      responses:
        '200':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '404':
          description: Environment(Endpoint) not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/kubernetes/{id}/nodes_limits":
    get:
      tags:
        - kubernetes
      summary: Get CPU and memory limits of all nodes within k8s cluster
      description: |-
        Get CPU and memory limits of all nodes within k8s cluster
        **Access policy**: authenticated
      operationId: GetKubernetesNodesLimits
      parameters:
        - name: id
          in: path
          description: Environment(Endpoint) identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.K8sNodesLimits"
        '400':
          description: Invalid request
          content: {}
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: Environment(Endpoint) not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/kubernetes/{id}/rbac_enabled":
    get:
      tags:
        - rbac_enabled
      summary: Check if RBAC is enabled
      description: |-
        Check if RBAC is enabled in the current Kubernetes cluster.
        **Access policy**: administrator
      operationId: IsRBACEnabled
      parameters:
        - name: id
          in: path
          description: Environment(Endpoint) identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/kubernetes/{id}/services/delete":
    post:
      tags:
        - kubernetes
      summary: Delete kubernetes services
      description: |-
        Delete the provided list of kubernetes services
        **Access policy**: authenticated
      operationId: deleteKubernetesServices
      parameters:
        - name: id
          in: path
          description: Environment (Endpoint) identifier
          required: true
          schema:
            type: integer
      requestBody:
        description: A map where the key is the namespace and the value is an array
          of services to delete
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/kubernetes.K8sServiceDeleteRequests"
        required: true
      responses:
        '200':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/kubernetes/config":
    get:
      tags:
        - kubernetes
      summary: Generate a kubeconfig file enabling client communication with k8s api
        server
      description: |-
        Generate a kubeconfig file enabling client communication with k8s api server
        **Access policy**: authenticated
      operationId: GetKubernetesConfig
      parameters:
        - name: ids
          in: query
          description: will include only these environments(endpoints)
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: excludeIds
          in: query
          description: will exclude these environments(endpoints)
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: Environment(Endpoint) or ServiceAccount not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/ldap/check":
    post:
      tags:
        - ldap
      summary: Test LDAP connectivity
      description: |-
        Test LDAP connectivity using LDAP details
        **Access policy**: administrator
      operationId: LDAPCheck
      requestBody:
        description: details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ldap.checkPayload"
        required: true
      responses:
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/motd":
    get:
      tags:
        - motd
      summary: fetches the message of the day
      description: "**Access policy**: restricted"
      operationId: MOTD
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/motd.motdResponse"
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/open_amt":
    post:
      tags:
        - intel
      summary: Enable Portainer's OpenAMT capabilities
      description: |-
        Enable Portainer's OpenAMT capabilities
        **Access policy**: administrator
      operationId: OpenAMTConfigure
      requestBody:
        description: OpenAMT Settings
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/openamt.openAMTConfigurePayload"
        required: true
      responses:
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied to access settings
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - jwt: []
      x-codegen-request-body-name: body
  "/open_amt/{id}/activate":
    post:
      tags:
        - intel
      summary: Activate OpenAMT device and associate to agent endpoint
      description: |-
        Activate OpenAMT device and associate to agent endpoint
        **Access policy**: administrator
      operationId: openAMTActivate
      parameters:
        - name: id
          in: path
          description: Environment identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied to access settings
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - jwt: []
  "/open_amt/{id}/devices":
    get:
      tags:
        - intel
      summary: Fetch OpenAMT managed devices information for endpoint
      description: |-
        Fetch OpenAMT managed devices information for endpoint
        **Access policy**: administrator
      operationId: OpenAMTDevices
      parameters:
        - name: id
          in: path
          description: Environment(Endpoint) identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied to access settings
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - jwt: []
  "/open_amt/{id}/devices/{deviceId}/action":
    post:
      tags:
        - intel
      summary: Execute out of band action on an AMT managed device
      description: |-
        Execute out of band action on an AMT managed device
        **Access policy**: administrator
      operationId: DeviceAction
      parameters:
        - name: id
          in: path
          description: Environment identifier
          required: true
          schema:
            type: integer
        - name: deviceId
          in: path
          description: Device identifier
          required: true
          schema:
            type: integer
      requestBody:
        description: Device Action
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/openamt.deviceActionPayload"
        required: true
      responses:
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied to access settings
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - jwt: []
      x-codegen-request-body-name: body
  "/open_amt/{id}/devices_features/{deviceId}":
    post:
      tags:
        - intel
      summary: Enable features on an AMT managed device
      description: |-
        Enable features on an AMT managed device
        **Access policy**: administrator
      operationId: DeviceFeatures
      parameters:
        - name: id
          in: path
          description: Environment identifier
          required: true
          schema:
            type: integer
        - name: deviceId
          in: path
          description: Device identifier
          required: true
          schema:
            type: integer
      requestBody:
        description: Device Features
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/openamt.deviceFeaturesPayload"
        required: true
      responses:
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied to access settings
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - jwt: []
      x-codegen-request-body-name: body
  "/open_amt/{id}/info":
    get:
      tags:
        - intel
      summary: Request OpenAMT info from a node
      description: |-
        Request OpenAMT info from a node
        **Access policy**: administrator
      operationId: OpenAMTHostInfo
      parameters:
        - name: id
          in: path
          description: Environment identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied to access settings
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - jwt: []
  "/registries":
    get:
      tags:
        - registries
      summary: List Registries
      description: |-
        List all registries based on the current user authorizations.
        Will return all registries if using an administrator account otherwise it
        will only return authorized registries.
        **Access policy**: restricted
      operationId: RegistryList
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/portainer.Registry"
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    post:
      tags:
        - registries
      summary: Create a new registry
      description: |-
        Create a new registry.
        **Access policy**: restricted
      operationId: RegistryCreate
      requestBody:
        description: Registry details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/registries.registryCreatePayload"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.Registry"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/registries/{id}":
    get:
      tags:
        - registries
      summary: Inspect a registry
      description: |-
        Retrieve details about a registry.
        **Access policy**: restricted
      operationId: RegistryInspect
      parameters:
        - name: id
          in: path
          description: Registry identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.Registry"
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied to access registry
          content: {}
        '404':
          description: Registry not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    put:
      tags:
        - registries
      summary: Update a registry
      description: |-
        Update a registry
        **Access policy**: restricted
      operationId: RegistryUpdate
      parameters:
        - name: id
          in: path
          description: Registry identifier
          required: true
          schema:
            type: integer
      requestBody:
        description: Registry details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/registries.registryUpdatePayload"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.Registry"
        '400':
          description: Invalid request
          content: {}
        '404':
          description: Registry not found
          content: {}
        '409':
          description: Another registry with the same URL already exists
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
    delete:
      tags:
        - registries
      summary: Remove a registry
      description: |-
        Remove a registry
        **Access policy**: restricted
      operationId: RegistryDelete
      parameters:
        - name: id
          in: path
          description: Registry identifier
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '404':
          description: Registry not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/registries/{id}/configure":
    post:
      tags:
        - registries
      summary: Configures a registry
      description: |-
        Configures a registry.
        **Access policy**: restricted
      operationId: RegistryConfigure
      parameters:
        - name: id
          in: path
          description: Registry identifier
          required: true
          schema:
            type: integer
      requestBody:
        description: Registry configuration
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/registries.registryConfigurePayload"
        required: true
      responses:
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: Registry not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/resource_controls":
    post:
      tags:
        - resource_controls
      summary: Create a new resource control
      description: |-
        Create a new resource control to restrict access to a Docker resource.
        **Access policy**: administrator
      operationId: ResourceControlCreate
      requestBody:
        description: Resource control details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/resourcecontrols.resourceControlCreatePayload"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.ResourceControl"
        '400':
          description: Invalid request
          content: {}
        '409':
          description: Resource control already exists
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/resource_controls/{id}":
    put:
      tags:
        - resource_controls
      summary: Update a resource control
      description: |-
        Update a resource control
        **Access policy**: authenticated
      operationId: ResourceControlUpdate
      parameters:
        - name: id
          in: path
          description: Resource control identifier
          required: true
          schema:
            type: integer
      requestBody:
        description: Resource control details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/resourcecontrols.resourceControlUpdatePayload"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.ResourceControl"
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Unauthorized
          content: {}
        '404':
          description: Resource control not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
    delete:
      tags:
        - resource_controls
      summary: Remove a resource control
      description: |-
        Remove a resource control.
        **Access policy**: administrator
      operationId: ResourceControlDelete
      parameters:
        - name: id
          in: path
          description: Resource control identifier
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '404':
          description: Resource control not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/restore":
    post:
      tags:
        - backup
      summary: Triggers a system restore using provided backup file
      description: |-
        Triggers a system restore using provided backup file
        **Access policy**: public
      operationId: Restore
      requestBody:
        description: Restore request payload
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/backup.restorePayload"
        required: true
      responses:
        '200':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      x-codegen-request-body-name: restorePayload
  "/roles":
    get:
      tags:
        - roles
      summary: List roles
      description: |-
        List all roles available for use
        **Access policy**: administrator
      operationId: RoleList
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/portainer.Role"
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/settings":
    get:
      tags:
        - settings
      summary: Retrieve Portainer settings
      description: |-
        Retrieve Portainer settings.
        **Access policy**: administrator
      operationId: SettingsInspect
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.Settings"
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    put:
      tags:
        - settings
      summary: Update Portainer settings
      description: |-
        Update Portainer settings.
        **Access policy**: administrator
      operationId: SettingsUpdate
      requestBody:
        description: New settings
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/settings.settingsUpdatePayload"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.Settings"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/settings/public":
    get:
      tags:
        - settings
      summary: Retrieve Portainer public settings
      description: |-
        Retrieve public settings. Returns a small set of settings that are not reserved to administrators only.
        **Access policy**: public
      operationId: SettingsPublic
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/settings.publicSettingsResponse"
        '500':
          description: Server error
          content: {}
  "/ssl":
    get:
      tags:
        - ssl
      summary: Inspect the ssl settings
      description: |-
        Retrieve the ssl settings.
        **Access policy**: administrator
      operationId: SSLInspect
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.SSLSettings"
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied to access settings
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    put:
      tags:
        - ssl
      summary: Update the ssl settings
      description: |-
        Update the ssl settings.
        **Access policy**: administrator
      operationId: SSLUpdate
      requestBody:
        description: SSL Settings
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ssl.sslUpdatePayload"
        required: true
      responses:
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied to access settings
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/stacks":
    get:
      tags:
        - stacks
      summary: List stacks
      description: |-
        List all stacks based on the current user authorizations.
        Will return all stacks if using an administrator account otherwise it
        will only return the list of stacks the user have access to.
        Limited stacks will not be returned by this endpoint.
        **Access policy**: authenticated
      operationId: StackList
      parameters:
        - name: filters
          in: query
          description: 'Filters to process on the stack list. Encoded as JSON (a map[string]string).
          For example, {''SwarmID'': ''jpofkc0i9uo9wtx1zesuk649w''} will only return
          stacks that are part of the specified Swarm cluster. Available filters:
          EndpointID, SwarmID.'
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/portainer.Stack"
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    post:
      tags:
        - stacks
      summary: Deploy a new stack
      description: |-
        Deploy a new stack into a Docker environment(endpoint) specified via the environment(endpoint) identifier.
        **Access policy**: authenticated
      operationId: StackCreate
      parameters:
        - name: type
          in: query
          description: 'Stack deployment type. Possible values: 1 (Swarm stack), 2 (Compose
          stack) or 3 (Kubernetes stack).'
          required: true
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
        - name: method
          in: query
          description: 'Stack deployment method. Possible values: file, string, repository
          or url.'
          required: true
          schema:
            type: string
            enum:
              - string
              - file
              - repository
              - url
        - name: endpointId
          in: query
          description: Identifier of the environment(endpoint) that will be used to
            deploy the stack
          required: true
          schema:
            type: integer
      requestBody:
        description: for body documentation see the relevant /stacks/create/{type}/{method}
          endpoint
        content:
          application/json:
            schema:
              type: object
          multipart/form-data:
            schema:
              type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.Stack"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      deprecated: true
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/stacks/{id}":
    get:
      tags:
        - stacks
      summary: Inspect a stack
      description: |-
        Retrieve details about a stack.
        **Access policy**: restricted
      operationId: StackInspect
      parameters:
        - name: id
          in: path
          description: Stack identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.Stack"
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: Stack not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    put:
      tags:
        - stacks
      summary: Update a stack
      description: |-
        Update a stack, only for file based stacks.
        **Access policy**: authenticated
      operationId: StackUpdate
      parameters:
        - name: id
          in: path
          description: Stack identifier
          required: true
          schema:
            type: integer
        - name: endpointId
          in: query
          description: Environment identifier
          required: true
          schema:
            type: integer
      requestBody:
        description: Stack details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/stacks.updateSwarmStackPayload"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.Stack"
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: Not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
    delete:
      tags:
        - stacks
      summary: Remove a stack
      description: |-
        Remove a stack.
        **Access policy**: restricted
      operationId: StackDelete
      parameters:
        - name: id
          in: path
          description: Stack identifier
          required: true
          schema:
            type: integer
        - name: external
          in: query
          description: Set to true to delete an external stack. Only external Swarm
            stacks are supported
          schema:
            type: boolean
        - name: endpointId
          in: query
          description: Environment identifier
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: Not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/stacks/{id}/associate":
    put:
      tags:
        - stacks
      summary: Associate an orphaned stack to a new environment(endpoint)
      description: "**Access policy**: administrator"
      operationId: StackAssociate
      parameters:
        - name: id
          in: path
          description: Stack identifier
          required: true
          schema:
            type: integer
        - name: endpointId
          in: query
          description: Environment identifier
          required: true
          schema:
            type: integer
        - name: swarmId
          in: query
          description: Swarm identifier
          required: true
          schema:
            type: integer
        - name: orphanedRunning
          in: query
          description: Indicates whether the stack is orphaned
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.Stack"
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: Stack not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/stacks/{id}/file":
    get:
      tags:
        - stacks
      summary: Retrieve the content of the Stack file for the specified stack
      description: |-
        Get Stack file content.
        **Access policy**: restricted
      operationId: StackFileInspect
      parameters:
        - name: id
          in: path
          description: Stack identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/stacks.stackFileResponse"
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: Stack not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/stacks/{id}/git":
    post:
      tags:
        - stacks
      summary: Update a stack's Git configs
      description: |-
        Update the Git settings in a stack, e.g., RepositoryReferenceName and AutoUpdate
        **Access policy**: authenticated
      operationId: StackUpdateGit
      parameters:
        - name: id
          in: path
          description: Stack identifier
          required: true
          schema:
            type: integer
        - name: endpointId
          in: query
          description: Stacks created before version 1.18.0 might not have an associated
            environment(endpoint) identifier. Use this optional parameter to set the
            environment(endpoint) identifier used by the stack.
          schema:
            type: integer
      requestBody:
        description: Git configs for pull and redeploy a stack
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/stacks.stackGitUpdatePayload"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.Stack"
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: Not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/stacks/{id}/git/redeploy":
    put:
      tags:
        - stacks
      summary: Redeploy a stack
      description: |-
        Pull and redeploy a stack via Git
        **Access policy**: authenticated
      operationId: StackGitRedeploy
      parameters:
        - name: id
          in: path
          description: Stack identifier
          required: true
          schema:
            type: integer
        - name: endpointId
          in: query
          description: Stacks created before version 1.18.0 might not have an associated
            environment(endpoint) identifier. Use this optional parameter to set the
            environment(endpoint) identifier used by the stack.
          schema:
            type: integer
      requestBody:
        description: Git configs for pull and redeploy of a stack. **StackName** may
          only be populated for Kuberenetes stacks, and if specified with a blank
          string, it will be set to blank
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/stacks.stackGitRedployPayload"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.Stack"
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: Not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/stacks/{id}/migrate":
    post:
      tags:
        - stacks
      summary: Migrate a stack to another environment(endpoint)
      description: |-
        Migrate a stack from an environment(endpoint) to another environment(endpoint). It will re-create the stack inside the target environment(endpoint) before removing the original stack.
        **Access policy**: authenticated
      operationId: StackMigrate
      parameters:
        - name: id
          in: path
          description: Stack identifier
          required: true
          schema:
            type: integer
        - name: endpointId
          in: query
          description: Stacks created before version 1.18.0 might not have an associated
            environment(endpoint) identifier. Use this optional parameter to set the
            environment(endpoint) identifier used by the stack.
          schema:
            type: integer
      requestBody:
        description: Stack migration details
        content:
          "*/*":
            schema:
              "$ref": "#/components/schemas/stacks.stackMigratePayload"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.Stack"
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: Stack not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/stacks/{id}/start":
    post:
      tags:
        - stacks
      summary: Starts a stopped Stack
      description: |-
        Starts a stopped Stack.
        **Access policy**: authenticated
      operationId: StackStart
      parameters:
        - name: id
          in: path
          description: Stack identifier
          required: true
          schema:
            type: integer
        - name: endpointId
          in: query
          description: Environment identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/portainer.Stack"
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: Not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/stacks/{id}/stop":
    post:
      tags:
        - stacks
      summary: Stops a stopped Stack
      description: |-
        Stops a stopped Stack.
        **Access policy**: authenticated
      operationId: StackStop
      parameters:
        - name: id
          in: path
          description: Stack identifier
          required: true
          schema:
            type: integer
        - name: endpointId
          in: query
          description: Environment identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/portainer.Stack"
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: Not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/stacks/create/kubernetes/repository":
    post:
      tags:
        - stacks
      summary: Deploy a new kubernetes stack from a git repository
      description: |-
        Deploy a new stack into a Docker environment specified via the environment identifier.
        **Access policy**: authenticated
      operationId: StackCreateKubernetesGit
      parameters:
        - name: endpointId
          in: query
          description: Identifier of the environment that will be used to deploy the
            stack
          required: true
          schema:
            type: integer
      requestBody:
        description: stack config
        content:
          "*/*":
            schema:
              "$ref": "#/components/schemas/stacks.kubernetesGitDeploymentPayload"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.Stack"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/stacks/create/kubernetes/string":
    post:
      tags:
        - stacks
      summary: Deploy a new kubernetes stack from a file
      description: |-
        Deploy a new stack into a Docker environment specified via the environment identifier.
        **Access policy**: authenticated
      operationId: StackCreateKubernetesFile
      parameters:
        - name: endpointId
          in: query
          description: Identifier of the environment that will be used to deploy the
            stack
          required: true
          schema:
            type: integer
      requestBody:
        description: stack config
        content:
          "*/*":
            schema:
              "$ref": "#/components/schemas/stacks.kubernetesStringDeploymentPayload"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.Stack"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/stacks/create/kubernetes/url":
    post:
      tags:
        - stacks
      summary: Deploy a new kubernetes stack from a url
      description: |-
        Deploy a new stack into a Docker environment specified via the environment identifier.
        **Access policy**: authenticated
      operationId: StackCreateKubernetesUrl
      parameters:
        - name: endpointId
          in: query
          description: Identifier of the environment that will be used to deploy the
            stack
          required: true
          schema:
            type: integer
      requestBody:
        description: stack config
        content:
          "*/*":
            schema:
              "$ref": "#/components/schemas/stacks.kubernetesManifestURLDeploymentPayload"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.Stack"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/stacks/create/standalone/file":
    post:
      tags:
        - stacks
      summary: Deploy a new compose stack from a file
      description: |-
        Deploy a new stack into a Docker environment specified via the environment identifier.
        **Access policy**: authenticated
      operationId: StackCreateDockerStandaloneFile
      parameters:
        - name: endpointId
          in: query
          description: Identifier of the environment that will be used to deploy the
            stack
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - Name
              type: object
              properties:
                Name:
                  type: string
                  description: Name of the stack
                Env:
                  type: string
                  description: 'Environment variables passed during deployment, represented
                    as a JSON array [{''name'': ''name'', ''value'': ''value''}].'
                file:
                  type: string
                  description: Stack file
                  format: binary
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.Stack"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/stacks/create/standalone/repository":
    post:
      tags:
        - stacks
      summary: Deploy a new compose stack from repository
      description: |-
        Deploy a new stack into a Docker environment specified via the environment identifier.
        **Access policy**: authenticated
      operationId: StackCreateDockerStandaloneRepository
      parameters:
        - name: endpointId
          in: query
          description: Identifier of the environment that will be used to deploy the
            stack
          required: true
          schema:
            type: integer
      requestBody:
        description: stack config
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/stacks.composeStackFromGitRepositoryPayload"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.Stack"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/stacks/create/standalone/string":
    post:
      tags:
        - stacks
      summary: Deploy a new compose stack from a text
      description: |-
        Deploy a new stack into a Docker environment specified via the environment identifier.
        **Access policy**: authenticated
      operationId: StackCreateDockerStandaloneString
      parameters:
        - name: endpointId
          in: query
          description: Identifier of the environment that will be used to deploy the
            stack
          required: true
          schema:
            type: integer
      requestBody:
        description: stack config
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/stacks.composeStackFromFileContentPayload"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.Stack"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/stacks/create/swarm/file":
    post:
      tags:
        - stacks
      summary: Deploy a new swarm stack from a file
      description: |-
        Deploy a new stack into a Docker environment specified via the environment identifier.
        **Access policy**: authenticated
      operationId: StackCreateDockerSwarmFile
      parameters:
        - name: endpointId
          in: query
          description: Identifier of the environment that will be used to deploy the
            stack
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                Name:
                  type: string
                  description: Name of the stack
                SwarmID:
                  type: string
                  description: Swarm cluster identifier.
                Env:
                  type: string
                  description: 'Environment variables passed during deployment, represented
                    as a JSON array [{''name'': ''name'', ''value'': ''value''}].
                    Optional'
                file:
                  type: string
                  description: Stack file
                  format: binary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.Stack"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/stacks/create/swarm/repository":
    post:
      tags:
        - stacks
      summary: Deploy a new swarm stack from a git repository
      description: |-
        Deploy a new stack into a Docker environment specified via the environment identifier.
        **Access policy**: authenticated
      operationId: StackCreateDockerSwarmRepository
      parameters:
        - name: endpointId
          in: query
          description: Identifier of the environment that will be used to deploy the
            stack
          required: true
          schema:
            type: integer
      requestBody:
        description: stack config
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/stacks.swarmStackFromGitRepositoryPayload"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.Stack"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/stacks/create/swarm/string":
    post:
      tags:
        - stacks
      summary: Deploy a new swarm stack from a text
      description: |-
        Deploy a new stack into a Docker environment specified via the environment identifier.
        **Access policy**: authenticated
      operationId: StackCreateDockerSwarmString
      parameters:
        - name: endpointId
          in: query
          description: Identifier of the environment that will be used to deploy the
            stack
          required: true
          schema:
            type: integer
      requestBody:
        description: stack config
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/stacks.swarmStackFromFileContentPayload"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.Stack"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/stacks/name/{name}":
    delete:
      tags:
        - stacks
      summary: Remove Kubernetes stacks by name
      description: |-
        Remove a stack.
        **Access policy**: restricted
      operationId: StackDeleteKubernetesByName
      parameters:
        - name: name
          in: path
          description: Stack name
          required: true
          schema:
            type: string
        - name: external
          in: query
          description: Set to true to delete an external stack. Only external Swarm
            stacks are supported
          schema:
            type: boolean
        - name: endpointId
          in: query
          description: Environment identifier
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: Not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/stacks/webhooks/{webhookID}":
    post:
      tags:
        - stacks
      summary: Webhook for triggering stack updates from git
      description: "**Access policy**: public"
      operationId: WebhookInvoke
      parameters:
        - name: webhookID
          in: path
          description: Stack identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '409':
          description: Conflict
          content: {}
        '500':
          description: Server error
          content: {}
  "/status":
    get:
      tags:
        - status
      summary: Check Portainer status
      description: |-
        Deprecated: use the `/system/status` endpoint instead.
        Retrieve Portainer status
        **Access policy**: public
      operationId: StatusInspect
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/system.status"
      deprecated: true
  "/status/nodes":
    get:
      tags:
        - status
      summary: Retrieve the count of nodes
      description: |-
        Deprecated: use the `/system/nodes` endpoint instead.
        **Access policy**: authenticated
      operationId: statusNodesCount
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/system.nodesCountResponse"
        '500':
          description: Server error
          content: {}
      deprecated: true
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/status/version":
    get:
      tags:
        - status
      summary: Check for portainer updates
      description: |-
        Deprecated: use the `/system/version` endpoint instead.
        Check if portainer has an update available
        **Access policy**: authenticated
      operationId: Version
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/system.versionResponse"
      deprecated: true
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/system/info":
    get:
      tags:
        - system
      summary: Retrieve system info
      description: "**Access policy**: authenticated"
      operationId: systemInfo
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/system.systemInfoResponse"
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/system/nodes":
    get:
      tags:
        - system
      summary: Retrieve the count of nodes
      description: "**Access policy**: authenticated"
      operationId: systemNodesCount
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/system.nodesCountResponse"
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/system/status":
    get:
      tags:
        - system
      summary: Check Portainer status
      description: |-
        Retrieve Portainer status
        **Access policy**: public
      operationId: systemStatus
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/system.status"
  "/system/upgrade":
    post:
      tags:
        - system
      summary: Upgrade Portainer to BE
      description: |-
        Upgrade Portainer to BE
        **Access policy**: administrator
      operationId: systemUpgrade
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/system.status"
  "/system/version":
    get:
      tags:
        - system
      summary: Check for portainer updates
      description: |-
        Check if portainer has an update available
        **Access policy**: authenticated
      operationId: systemVersion
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/system.versionResponse"
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/tags":
    get:
      tags:
        - tags
      summary: List tags
      description: |-
        List tags.
        **Access policy**: authenticated
      operationId: TagList
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/portainer.Tag"
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    post:
      tags:
        - tags
      summary: Create a new tag
      description: |-
        Create a new tag.
        **Access policy**: administrator
      operationId: TagCreate
      requestBody:
        description: Tag details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/tags.tagCreatePayload"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.Tag"
        '409':
          description: Tag name exists
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/tags/{id}":
    delete:
      tags:
        - tags
      summary: Remove a tag
      description: |-
        Remove a tag.
        **Access policy**: administrator
      operationId: TagDelete
      parameters:
        - name: id
          in: path
          description: Tag identifier
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: Tag not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/team_memberships":
    get:
      tags:
        - team_memberships
      summary: List team memberships
      description: |-
        List team memberships. Access is only available to administrators and team leaders.
        **Access policy**: administrator
      operationId: TeamMembershipList
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/portainer.TeamMembership"
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    post:
      tags:
        - team_memberships
      summary: Create a new team membership
      description: |-
        Create a new team memberships. Access is only available to administrators leaders of the associated team.
        **Access policy**: administrator
      operationId: TeamMembershipCreate
      requestBody:
        description: Team membership details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/teammemberships.teamMembershipCreatePayload"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.TeamMembership"
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied to manage memberships
          content: {}
        '409':
          description: Team membership already registered
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/team_memberships/{id}":
    put:
      tags:
        - team_memberships
      summary: Update a team membership
      description: |-
        Update a team membership. Access is only available to administrators or leaders of the associated team.
        **Access policy**: administrator or leaders of the associated team
      operationId: TeamMembershipUpdate
      parameters:
        - name: id
          in: path
          description: Team membership identifier
          required: true
          schema:
            type: integer
      requestBody:
        description: Team membership details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/teammemberships.teamMembershipUpdatePayload"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.TeamMembership"
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: TeamMembership not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
    delete:
      tags:
        - team_memberships
      summary: Remove a team membership
      description: |-
        Remove a team membership. Access is only available to administrators leaders of the associated team.
        **Access policy**: administrator
      operationId: TeamMembershipDelete
      parameters:
        - name: id
          in: path
          description: TeamMembership identifier
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: TeamMembership not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/teams":
    get:
      tags:
        - teams
      summary: List teams
      description: |-
        List teams. For non-administrator users, will only list the teams they are member of.
        **Access policy**: restricted
      operationId: TeamList
      parameters:
        - name: onlyLedTeams
          in: query
          description: Only list teams that the user is leader of
          schema:
            type: boolean
        - name: environmentId
          in: query
          description: Identifier of the environment(endpoint) that will be used to
            filter the authorized teams
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/portainer.Team"
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    post:
      tags:
        - teams
      summary: Create a new team
      description: |-
        Create a new team.
        **Access policy**: administrator
      operationId: TeamCreate
      requestBody:
        description: details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/teams.teamCreatePayload"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.Team"
        '400':
          description: Invalid request
          content: {}
        '409':
          description: Team already exists
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/teams/{id}":
    get:
      tags:
        - teams
      summary: Inspect a team
      description: |-
        Retrieve details about a team. Access is only available for administrator and leaders of that team.
        **Access policy**: administrator
      operationId: TeamInspect
      parameters:
        - name: id
          in: path
          description: Team identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.Team"
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: Team not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    put:
      tags:
        - teams
      summary: Update a team
      description: |-
        Update a team.
        **Access policy**: administrator
      operationId: TeamUpdate
      parameters:
        - name: id
          in: path
          description: Team identifier
          required: true
          schema:
            type: integer
      requestBody:
        description: Team details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/teams.teamUpdatePayload"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.Team"
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: Team not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
    delete:
      tags:
        - teams
      summary: Remove a team
      description: |-
        Remove a team.
        **Access policy**: administrator
      operationId: TeamDelete
      parameters:
        - name: id
          in: path
          description: Team Id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: Team not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/teams/{id}/memberships":
    get:
      tags:
        - team_memberships
      summary: List team memberships
      description: |-
        List team memberships. Access is only available to administrators and team leaders.
        **Access policy**: restricted
      operationId: TeamMemberships
      parameters:
        - name: id
          in: path
          description: Team Id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/portainer.TeamMembership"
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/templates":
    get:
      tags:
        - templates
      summary: List available templates
      description: |-
        List available templates.
        **Access policy**: authenticated
      operationId: TemplateList
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/templates.listResponse"
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/templates/{id}/file":
    post:
      tags:
        - templates
      summary: Get a template's file
      description: |-
        Get a template's file
        **Access policy**: authenticated
      operationId: TemplateFile
      parameters:
        - name: id
          in: path
          description: Template identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/templates.fileResponse"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/templates/file":
    post:
      tags:
        - templates
      summary: Get a template's file
      description: |-
        Get a template's file
        **Access policy**: authenticated
      operationId: TemplateFileOld
      requestBody:
        description: File details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/templates.filePayload"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/templates.fileResponse"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      deprecated: true
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/templates/helm":
    get:
      tags:
        - helm
      summary: Search Helm Charts
      description: "**Access policy**: authenticated"
      operationId: HelmRepoSearch
      parameters:
        - name: repo
          in: query
          description: Helm repository URL
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad request
          content: {}
        '401':
          description: Unauthorized
          content: {}
        '404':
          description: Not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/templates/helm/{command}":
    get:
      tags:
        - helm
      summary: Show Helm Chart Information
      description: "**Access policy**: authenticated"
      operationId: HelmShow
      parameters:
        - name: repo
          in: query
          description: Helm repository URL
          required: true
          schema:
            type: string
        - name: chart
          in: query
          description: Chart name
          required: true
          schema:
            type: string
        - name: command
          in: path
          description: chart/values/readme
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: Unauthorized
          content: {}
        '404':
          description: Environment(Endpoint) or ServiceAccount not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/upload/tls/{certificate}":
    post:
      tags:
        - upload
      summary: Upload TLS files
      description: |-
        Use this environment(endpoint) to upload TLS files.
        **Access policy**: administrator
      operationId: UploadTLS
      parameters:
        - name: certificate
          in: path
          description: TLS file type. Valid values are 'ca', 'cert' or 'key'.
          required: true
          schema:
            type: string
            enum:
              - ca
              - cert
              - key
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - file
                - folder
              type: object
              properties:
                folder:
                  type: string
                  description: Folder where the TLS file will be stored. Will be created
                    if not existing
                file:
                  type: string
                  description: The file to upload
                  format: binary
        required: true
      responses:
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/users":
    get:
      tags:
        - users
      summary: List users
      description: |-
        List Portainer users.
        Non-administrator users will only be able to list other non-administrator user accounts.
        User passwords are filtered out, and should never be accessible.
        **Access policy**: restricted
      operationId: UserList
      parameters:
        - name: environmentId
          in: query
          description: Identifier of the environment(endpoint) that will be used to
            filter the authorized users
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/portainer.User"
        '400':
          description: Invalid request
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    post:
      tags:
        - users
      summary: Create a new user
      description: |-
        Create a new Portainer user.
        Only administrators can create users.
        **Access policy**: restricted
      operationId: UserCreate
      requestBody:
        description: User details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/users.userCreatePayload"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.User"
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '409':
          description: User already exists
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/users/{id}":
    get:
      tags:
        - users
      summary: Inspect a user
      description: |-
        Retrieve details about a user.
        User passwords are filtered out, and should never be accessible.
        **Access policy**: authenticated
      operationId: UserInspect
      parameters:
        - name: id
          in: path
          description: User identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.User"
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: User not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    put:
      tags:
        - users
      summary: Update a user
      description: |-
        Update user details. A regular user account can only update his details.
        A regular user account cannot change their username or role.
        **Access policy**: authenticated
      operationId: UserUpdate
      parameters:
        - name: id
          in: path
          description: User identifier
          required: true
          schema:
            type: integer
      requestBody:
        description: User details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/users.userUpdatePayload"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.User"
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: User not found
          content: {}
        '409':
          description: Username already exist
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
    delete:
      tags:
        - users
      summary: Remove a user
      description: |-
        Remove a user.
        **Access policy**: administrator
      operationId: UserDelete
      parameters:
        - name: id
          in: path
          description: User identifier
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: User not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/users/{id}/helm/repositories":
    get:
      tags:
        - helm
      summary: List a users helm repositories
      description: |-
        Inspect a user helm repositories.
        **Access policy**: authenticated
      operationId: HelmUserRepositoriesList
      parameters:
        - name: id
          in: path
          description: User identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/users.helmUserRepositoryResponse"
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    post:
      tags:
        - helm
      summary: Create a user helm repository
      description: |-
        Create a user helm repository.
        **Access policy**: authenticated
      operationId: HelmUserRepositoryCreate
      parameters:
        - name: id
          in: path
          description: User identifier
          required: true
          schema:
            type: integer
      requestBody:
        description: Helm Repository
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/users.addHelmRepoUrlPayload"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.HelmUserRepository"
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: payload
  "/users/{id}/helm/repositories/{repositoryID}":
    delete:
      tags:
        - helm
      summary: Delete a users helm repositoryies
      description: "**Access policy**: authenticated"
      operationId: HelmUserRepositoryDelete
      parameters:
        - name: id
          in: path
          description: User identifier
          required: true
          schema:
            type: integer
        - name: repositoryID
          in: path
          description: Repository identifier
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/users/{id}/memberships":
    get:
      tags:
        - users
      summary: Inspect a user memberships
      description: |-
        Inspect a user memberships.
        **Access policy**: restricted
      operationId: UserMembershipsInspect
      parameters:
        - name: id
          in: path
          description: User identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.TeamMembership"
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/users/{id}/passwd":
    put:
      tags:
        - users
      summary: Update password for a user
      description: |-
        Update password for the specified user.
        **Access policy**: authenticated
      operationId: UserUpdatePassword
      parameters:
        - name: id
          in: path
          description: identifier
          required: true
          schema:
            type: integer
      requestBody:
        description: details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/users.userUpdatePasswordPayload"
        required: true
      responses:
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: User not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/users/{id}/tokens":
    get:
      tags:
        - users
      summary: Get all API keys for a user
      description: |-
        Gets all API keys for a user.
        Only the calling user or admin can retrieve api-keys.
        **Access policy**: authenticated
      operationId: UserGetAPIKeys
      parameters:
        - name: id
          in: path
          description: User identifier
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/portainer.APIKey"
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: User not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    post:
      tags:
        - users
      summary: Generate an API key for a user
      description: |-
        Generates an API key for a user.
        Only the calling user can generate a token for themselves.
        Password is required only for internal authentication.
        **Access policy**: restricted
      operationId: UserGenerateAPIKey
      parameters:
        - name: id
          in: path
          description: User identifier
          required: true
          schema:
            type: integer
      requestBody:
        description: details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/users.userAccessTokenCreatePayload"
        required: true
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/users.accessTokenResponse"
        '400':
          description: Invalid request
          content: {}
        '401':
          description: Unauthorized
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: User not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - jwt: []
      x-codegen-request-body-name: body
  "/users/{id}/tokens/{keyID}":
    delete:
      tags:
        - users
      summary: Remove an api-key associated to a user
      description: |-
        Remove an api-key associated to a user..
        Only the calling user or admin can remove api-key.
        **Access policy**: authenticated
      operationId: UserRemoveAPIKey
      parameters:
        - name: id
          in: path
          description: User identifier
          required: true
          schema:
            type: integer
        - name: keyID
          in: path
          description: Api Key identifier
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: Not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/users/admin/check":
    get:
      tags:
        - users
      summary: Check administrator account existence
      description: |-
        Check if an administrator account exists in the database.
        **Access policy**: public
      operationId: UserAdminCheck
      responses:
        '204':
          description: Success
          content: {}
        '404':
          description: User not found
          content: {}
  "/users/admin/init":
    post:
      tags:
        - users
      summary: Initialize administrator account
      description: |-
        Initialize the 'admin' user account.
        **Access policy**: public
      operationId: UserAdminInit
      requestBody:
        description: User details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/users.adminInitPayload"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.User"
        '400':
          description: Invalid request
          content: {}
        '409':
          description: Admin user already initialized
          content: {}
        '500':
          description: Server error
          content: {}
      x-codegen-request-body-name: body
  "/users/me":
    get:
      tags:
        - users
      summary: Inspect the current user user
      description: |-
        Retrieve details about the current  user.
        User passwords are filtered out, and should never be accessible.
        **Access policy**: authenticated
      operationId: CurrentUserInspect
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.User"
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '404':
          description: User not found
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/webhooks":
    get:
      tags:
        - webhooks
      summary: List webhooks
      description: "**Access policy**: authenticated"
      parameters:
        - name: filters
          in: query
          description: Filters (json-string)
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/portainer.Webhook"
        '400':
          description: Bad Request
          content: {}
        '500':
          description: Internal Server Error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
    post:
      tags:
        - webhooks
      summary: Create a webhook
      description: "**Access policy**: authenticated"
      requestBody:
        description: Webhook data
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/webhooks.webhookCreatePayload"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.Webhook"
        '400':
          description: Bad Request
          content: {}
        '409':
          description: Conflict
          content: {}
        '500':
          description: Internal Server Error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
  "/webhooks/{id}":
    put:
      tags:
        - webhooks
      summary: Update a webhook
      description: "**Access policy**: authenticated"
      parameters:
        - name: id
          in: path
          description: Webhook id
          required: true
          schema:
            type: integer
      requestBody:
        description: Webhook data
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/webhooks.webhookUpdatePayload"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/portainer.Webhook"
        '400':
          description: Bad Request
          content: {}
        '409':
          description: Conflict
          content: {}
        '500':
          description: Internal Server Error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
      x-codegen-request-body-name: body
    post:
      tags:
        - webhooks
      summary: Execute a webhook
      description: |-
        Acts on a passed in token UUID to restart the docker service
        **Access policy**: public
      parameters:
        - name: id
          in: path
          description: Webhook token
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Webhook executed
          content: {}
        '400':
          description: Bad Request
          content: {}
        '500':
          description: Internal Server Error
          content: {}
    delete:
      tags:
        - webhooks
      summary: Delete a webhook
      description: "**Access policy**: authenticated"
      parameters:
        - name: id
          in: path
          description: Webhook id
          required: true
          schema:
            type: integer
      responses:
        '202':
          description: Webhook deleted
          content: {}
        '400':
          description: Bad Request
          content: {}
        '500':
          description: Internal Server Error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/websocket/attach":
    get:
      tags:
        - websocket
      summary: Attach a websocket
      description: |-
        If the nodeName query parameter is present, the request will be proxied to the underlying agent environment(endpoint).
        If the nodeName query parameter is not specified, the request will be upgraded to the websocket protocol and
        an AttachStart operation HTTP request will be created and hijacked.
        **Access policy**: authenticated
      parameters:
        - name: endpointId
          in: query
          description: environment(endpoint) ID of the environment(endpoint) where the
            resource is located
          required: true
          schema:
            type: integer
        - name: nodeName
          in: query
          description: node name
          schema:
            type: string
        - name: token
          in: query
          description: JWT token used for authentication against this environment(endpoint)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content: {}
        '400':
          description: Bad Request
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
        '500':
          description: Internal Server Error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/websocket/exec":
    get:
      tags:
        - websocket
      summary: Execute a websocket
      description: |-
        If the nodeName query parameter is present, the request will be proxied to the underlying agent environment(endpoint).
        If the nodeName query parameter is not specified, the request will be upgraded to the websocket protocol and
        an ExecStart operation HTTP request will be created and hijacked.
      parameters:
        - name: endpointId
          in: query
          description: environment(endpoint) ID of the environment(endpoint) where the
            resource is located
          required: true
          schema:
            type: integer
        - name: nodeName
          in: query
          description: node name
          schema:
            type: string
        - name: token
          in: query
          description: JWT token used for authentication against this environment(endpoint)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content: {}
        '400':
          description: Bad Request
          content: {}
        '409':
          description: Conflict
          content: {}
        '500':
          description: Internal Server Error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/websocket/kubernetes-shell":
    get:
      tags:
        - websocket
      summary: Execute a websocket on kubectl shell pod
      description: |-
        The request will be upgraded to the websocket protocol. The request will proxy input from the client to the pod via long-lived websocket connection.
        **Access policy**: authenticated
      parameters:
        - name: endpointId
          in: query
          description: environment(endpoint) ID of the environment(endpoint) where the
            resource is located
          required: true
          schema:
            type: integer
        - name: token
          in: query
          description: JWT token used for authentication against this environment(endpoint)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content: {}
        '400':
          description: Invalid request
          content: {}
        '403':
          description: Permission denied
          content: {}
        '500':
          description: Server error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
  "/websocket/pod":
    get:
      tags:
        - websocket
      summary: Execute a websocket on pod
      description: |-
        The request will be upgraded to the websocket protocol.
        **Access policy**: authenticated
      parameters:
        - name: endpointId
          in: query
          description: environment(endpoint) ID of the environment(endpoint) where the
            resource is located
          required: true
          schema:
            type: integer
        - name: namespace
          in: query
          description: namespace where the container is located
          required: true
          schema:
            type: string
        - name: podName
          in: query
          description: name of the pod containing the container
          required: true
          schema:
            type: string
        - name: containerName
          in: query
          description: name of the container
          required: true
          schema:
            type: string
        - name: command
          in: query
          description: command to execute in the container
          required: true
          schema:
            type: string
        - name: token
          in: query
          description: JWT token used for authentication against this environment(endpoint)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content: {}
        '400':
          description: Bad Request
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: Not Found
          content: {}
        '500':
          description: Internal Server Error
          content: {}
      security:
        - ApiKeyAuth: []
        - jwt: []
components:
  schemas:
    auth.authenticatePayload:
      required:
        - password
        - username
      type: object
      properties:
        password:
          type: string
          description: Password
          example: mypassword
        username:
          type: string
          description: Username
          example: admin
    auth.authenticateResponse:
      type: object
      properties:
        jwt:
          type: string
          description: JWT token used to authenticate against the API
          example: abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyzAB
    auth.oauthPayload:
      type: object
      properties:
        code:
          type: string
          description: OAuth code returned from OAuth Provided
    backup.backupPayload:
      type: object
      properties:
        password:
          type: string
    backup.restorePayload:
      type: object
      properties:
        fileContent:
          type: array
          items:
            type: integer
        fileName:
          type: string
        password:
          type: string
    containers.containerGpusResponse:
      type: object
      properties:
        gpus:
          type: string
    customtemplates.customTemplateFromFileContentPayload:
      required:
        - description
        - fileContent
        - title
        - type
      type: object
      properties:
        description:
          type: string
          description: Description of the template
          example: High performance web server
        edgeTemplate:
          type: boolean
          description: EdgeTemplate indicates if this template purpose for Edge Stack
          example: false
        fileContent:
          type: string
          description: Content of stack file
        logo:
          type: string
          description: URL of the template's logo
          example: https://portainer.io/img/logo.svg
        note:
          type: string
          description: A note that will be displayed in the UI. Supports HTML content
          example: This is my <b>custom</b> template
        platform:
          type: integer
          description: |-
            Platform associated to the template.
            Valid values are: 1 - 'linux', 2 - 'windows'
            Required for Docker stacks
          example: 1
        title:
          type: string
          description: Title of the template
          example: Nginx
        type:
          type: integer
          description: |-
            Type of created stack:
            * 1 - swarm
            * 2 - compose
            * 3 - kubernetes
          example: 1
        variables:
          type: array
          description: Definitions of variables in the stack file
          items:
            "$ref": "#/components/schemas/portainer.CustomTemplateVariableDefinition"
    customtemplates.customTemplateFromGitRepositoryPayload:
      required:
        - description
        - repositoryURL
        - title
        - type
      type: object
      properties:
        composeFilePathInRepository:
          type: string
          description: Path to the Stack file inside the Git repository
          example: docker-compose.yml
          default: docker-compose.yml
        description:
          type: string
          description: Description of the template
          example: High performance web server
        edgeTemplate:
          type: boolean
          description: EdgeTemplate indicates if this template purpose for Edge Stack
          example: false
        isComposeFormat:
          type: boolean
          description: IsComposeFormat indicates if the Kubernetes template is created
            from a Docker Compose file
          example: false
        logo:
          type: string
          description: URL of the template's logo
          example: https://portainer.io/img/logo.svg
        note:
          type: string
          description: A note that will be displayed in the UI. Supports HTML content
          example: This is my <b>custom</b> template
        platform:
          type: integer
          description: |-
            Platform associated to the template.
            Valid values are: 1 - 'linux', 2 - 'windows'
            Required for Docker stacks
          example: 1
        repositoryAuthentication:
          type: boolean
          description: Use basic authentication to clone the Git repository
          example: true
        repositoryPassword:
          type: string
          description: Password used in basic authentication. Required when RepositoryAuthentication
            is true.
          example: myGitPassword
        repositoryReferenceName:
          type: string
          description: Reference name of a Git repository hosting the Stack file
          example: refs/heads/master
        repositoryURL:
          type: string
          description: URL of a Git repository hosting the Stack file
          example: https://github.com/openfaas/faas
        repositoryUsername:
          type: string
          description: Username used in basic authentication. Required when RepositoryAuthentication
            is true.
          example: myGitUsername
        title:
          type: string
          description: Title of the template
          example: Nginx
        tlsskipVerify:
          type: boolean
          description: TLSSkipVerify skips SSL verification when cloning the Git repository
          example: false
        type:
          type: integer
          description: |-
            Type of created stack:
            * 1 - swarm
            * 2 - compose
            * 3 - kubernetes
          example: 1
        variables:
          type: array
          description: Definitions of variables in the stack file
          items:
            "$ref": "#/components/schemas/portainer.CustomTemplateVariableDefinition"
    customtemplates.customTemplateUpdatePayload:
      required:
        - description
        - fileContent
        - repositoryURL
        - title
        - type
      type: object
      properties:
        composeFilePathInRepository:
          type: string
          description: Path to the Stack file inside the Git repository
          example: docker-compose.yml
          default: docker-compose.yml
        description:
          type: string
          description: Description of the template
          example: High performance web server
        edgeTemplate:
          type: boolean
          description: EdgeTemplate indicates if this template purpose for Edge Stack
          example: false
        fileContent:
          type: string
          description: Content of stack file
        isComposeFormat:
          type: boolean
          description: IsComposeFormat indicates if the Kubernetes template is created
            from a Docker Compose file
          example: false
        logo:
          type: string
          description: URL of the template's logo
          example: https://portainer.io/img/logo.svg
        note:
          type: string
          description: A note that will be displayed in the UI. Supports HTML content
          example: This is my <b>custom</b> template
        platform:
          type: integer
          description: |-
            Platform associated to the template.
            Valid values are: 1 - 'linux', 2 - 'windows'
            Required for Docker stacks
          example: 1
        repositoryAuthentication:
          type: boolean
          description: Use basic authentication to clone the Git repository
          example: true
        repositoryGitCredentialID:
          type: integer
          description: |-
            GitCredentialID used to identify the bound git credential. Required when RepositoryAuthentication
            is true and RepositoryUsername/RepositoryPassword are not provided
          example: 0
        repositoryPassword:
          type: string
          description: |-
            Password used in basic authentication. Required when RepositoryAuthentication is true
            and RepositoryGitCredentialID is 0
          example: myGitPassword
        repositoryReferenceName:
          type: string
          description: Reference name of a Git repository hosting the Stack file
          example: refs/heads/master
        repositoryURL:
          type: string
          description: URL of a Git repository hosting the Stack file
          example: https://github.com/openfaas/faas
        repositoryUsername:
          type: string
          description: |-
            Username used in basic authentication. Required when RepositoryAuthentication is true
            and RepositoryGitCredentialID is 0
          example: myGitUsername
        title:
          type: string
          description: Title of the template
          example: Nginx
        tlsskipVerify:
          type: boolean
          description: TLSSkipVerify skips SSL verification when cloning the Git repository
          example: false
        type:
          type: integer
          description: Type of created stack (1 - swarm, 2 - compose, 3 - kubernetes)
          example: 1
        variables:
          type: array
          description: Definitions of variables in the stack file
          items:
            "$ref": "#/components/schemas/portainer.CustomTemplateVariableDefinition"
    customtemplates.fileResponse:
      type: object
      properties:
        fileContent:
          type: string
    demo.EnvironmentDetails:
      type: object
      properties:
        enabled:
          type: boolean
        environments:
          type: array
          items:
            type: integer
            description: Environment(Endpoint) identifier. Reference the environment(endpoint)
              that will be used for deployment
        users:
          type: array
          items:
            type: integer
            description: User Identifier
            example: 1
    edge.RegistryCredentials:
      type: object
      properties:
        secret:
          type: string
        serverURL:
          type: string
        username:
          type: string
    edge.StackPayload:
      type: object
      properties:
        dirEntries:
          type: array
          description: Content of stack folder
          items:
            "$ref": "#/components/schemas/filesystem.DirEntry"
        edgeUpdateID:
          type: integer
          description: |-
            EdgeUpdateID is the ID of the edge update related to this stack.
            Used only for EE
        entryFileName:
          type: string
          description: Name of the stack entry file
        envVars:
          type: array
          description: |-
            Used only for EE
            EnvVars is a list of environment variables to inject into the stack
          items:
            "$ref": "#/components/schemas/portainer.Pair"
        filesystemPath:
          type: string
          description: Mount point for relative path
        id:
          type: integer
          description: ID of the stack
        name:
          type: string
          description: Name of the stack
        namespace:
          type: string
          description: Namespace to use for kubernetes stack. Keep empty to use the
            manifest namespace.
        prePullImage:
          type: boolean
          description: |-
            PrePullImage is a flag indicating if the agent should pull the image before deploying the stack.
            Used only for EE
        rePullImage:
          type: boolean
          description: |-
            RePullImage is a flag indicating if the agent should pull the image if it is already present on the node.
            Used only for EE
        readyRePullImage:
          type: boolean
          description: |-
            Used only for EE async edge agent
            ReadyRePullImage is a flag to indicate whether the auto update is trigger to re-pull image
        registryCredentials:
          type: array
          description: |-
            RegistryCredentials holds the credentials for a Docker registry.
            Used only for EE
          items:
            "$ref": "#/components/schemas/edge.RegistryCredentials"
        retryDeploy:
          type: boolean
          description: |-
            RetryDeploy is a flag indicating if the agent should retry to deploy the stack if it fails.
            Used only for EE
        rollbackTo:
          type: integer
          description: RollbackTo specifies the stack file version to rollback to
            (only support to rollback to the last version currently)
        stackFileContent:
          type: string
          description: Content of the stack file (for compatibility to agent version
            less than 2.19.0)
        supportRelativePath:
          type: boolean
          description: Is relative path supported
        version:
          type: integer
          description: Version of the stack file
    edgegroups.decoratedEdgeGroup:
      type: object
      properties:
        Dynamic:
          type: boolean
        Endpoints:
          type: array
          items:
            type: integer
            description: Environment(Endpoint) identifier. Reference the environment(endpoint)
              that will be used for deployment
        HasEdgeJob:
          type: boolean
        HasEdgeStack:
          type: boolean
        Id:
          type: integer
          description: EdgeGroup Identifier
          example: 1
        Name:
          type: string
        PartialMatch:
          type: boolean
        TagIds:
          type: array
          items:
            type: integer
            description: Tag identifier
            example: 1
        TrustedEndpoints:
          type: array
          items:
            type: integer
            description: Environment(Endpoint) identifier. Reference the environment(endpoint)
              that will be used for deployment
        endpointTypes:
          type: array
          items:
            type: integer
            description: Environment(Endpoint) environment(endpoint) type. 1 for a
              Docker environment(endpoint), 2 for an agent on Docker environment(endpoint)
              or 3 for an Azure environment(endpoint).
            example: 1
    edgegroups.edgeGroupCreatePayload:
      type: object
      properties:
        dynamic:
          type: boolean
        endpoints:
          type: array
          items:
            type: integer
            description: Environment(Endpoint) identifier. Reference the environment(endpoint)
              that will be used for deployment
        name:
          type: string
        partialMatch:
          type: boolean
        tagIDs:
          type: array
          items:
            type: integer
            description: Tag identifier
            example: 1
    edgegroups.edgeGroupUpdatePayload:
      type: object
      properties:
        dynamic:
          type: boolean
        endpoints:
          type: array
          items:
            type: integer
            description: Environment(Endpoint) identifier. Reference the environment(endpoint)
              that will be used for deployment
        name:
          type: string
        partialMatch:
          type: boolean
        tagIDs:
          type: array
          items:
            type: integer
            description: Tag identifier
            example: 1
    edgejobs.edgeJobCreateFromFileContentPayload:
      type: object
      properties:
        cronExpression:
          type: string
        edgeGroups:
          type: array
          items:
            type: integer
            description: EdgeGroup Identifier
            example: 1
        endpoints:
          type: array
          items:
            type: integer
            description: Environment(Endpoint) identifier. Reference the environment(endpoint)
              that will be used for deployment
        fileContent:
          type: string
        name:
          type: string
        recurring:
          type: boolean
    edgejobs.edgeJobFileResponse:
      type: object
      properties:
        FileContent:
          type: string
    edgejobs.edgeJobUpdatePayload:
      type: object
      properties:
        cronExpression:
          type: string
        edgeGroups:
          type: array
          items:
            type: integer
            description: EdgeGroup Identifier
            example: 1
        endpoints:
          type: array
          items:
            type: integer
            description: Environment(Endpoint) identifier. Reference the environment(endpoint)
              that will be used for deployment
        fileContent:
          type: string
        name:
          type: string
        recurring:
          type: boolean
    edgejobs.fileResponse:
      type: object
      properties:
        FileContent:
          type: string
    edgejobs.taskContainer:
      type: object
      properties:
        EndpointId:
          type: integer
        Id:
          type: string
        LogsStatus:
          type: integer
    edgestacks.edgeStackFromGitRepositoryPayload:
      required:
        - edgeGroups
        - name
        - repositoryURL
      type: object
      properties:
        deploymentType:
          type: integer
          description: |-
            Deployment type to deploy this stack
            Valid values are: 0 - 'compose', 1 - 'kubernetes'
            compose is enabled only for docker environments
            kubernetes is enabled only for kubernetes environments
          example: 0
        edgeGroups:
          type: array
          description: List of identifiers of EdgeGroups
          example:
            - 1
          items:
            type: integer
            description: EdgeGroup Identifier
            example: 1
        filePathInRepository:
          type: string
          description: Path to the Stack file inside the Git repository
          example: docker-compose.yml
          default: docker-compose.yml
        name:
          type: string
          description: Name of the stack
          example: myStack
        registries:
          type: array
          description: List of Registries to use for this stack
          items:
            type: integer
            description: Registry Identifier
        repositoryAuthentication:
          type: boolean
          description: Use basic authentication to clone the Git repository
          example: true
        repositoryPassword:
          type: string
          description: Password used in basic authentication. Required when RepositoryAuthentication
            is true.
          example: myGitPassword
        repositoryReferenceName:
          type: string
          description: Reference name of a Git repository hosting the Stack file
          example: refs/heads/master
        repositoryURL:
          type: string
          description: URL of a Git repository hosting the Stack file
          example: https://github.com/openfaas/faas
        repositoryUsername:
          type: string
          description: Username used in basic authentication. Required when RepositoryAuthentication
            is true.
          example: myGitUsername
        tlsskipVerify:
          type: boolean
          description: TLSSkipVerify skips SSL verification when cloning the Git repository
          example: false
        useManifestNamespaces:
          type: boolean
          description: Uses the manifest's namespaces instead of the default one
    edgestacks.edgeStackFromStringPayload:
      required:
        - name
        - stackFileContent
      type: object
      properties:
        deploymentType:
          type: integer
          description: |-
            Deployment type to deploy this stack
            Valid values are: 0 - 'compose', 1 - 'kubernetes'
            compose is enabled only for docker environments
            kubernetes is enabled only for kubernetes environments
          example: 0
        edgeGroups:
          type: array
          description: List of identifiers of EdgeGroups
          example:
            - 1
          items:
            type: integer
            description: EdgeGroup Identifier
            example: 1
        name:
          type: string
          description: Name of the stack
          example: myStack
        registries:
          type: array
          description: List of Registries to use for this stack
          items:
            type: integer
            description: Registry Identifier
        stackFileContent:
          type: string
          description: Content of the Stack file
          example: |-
            version: 3
             services:
             web:
             image:nginx
        useManifestNamespaces:
          type: boolean
          description: Uses the manifest's namespaces instead of the default one
    edgestacks.stackFileResponse:
      type: object
      properties:
        StackFileContent:
          type: string
    edgestacks.updateEdgeStackPayload:
      type: object
      properties:
        deploymentType:
          type: integer
          description: |-
            Deployment type to deploy this stack
            Valid values are: 0 - 'compose', 1 - 'kubernetes'
            compose is enabled only for docker environments
            kubernetes is enabled only for kubernetes environments
          example: 0
        edgeGroups:
          type: array
          items:
            type: integer
            description: EdgeGroup Identifier
            example: 1
        stackFileContent:
          type: string
        updateVersion:
          type: boolean
        useManifestNamespaces:
          type: boolean
          description: Uses the manifest's namespaces instead of the default one
    edgestacks.updateStatusPayload:
      type: object
      properties:
        endpointID:
          type: integer
        error:
          type: string
        status:
          type: integer
          description: Deprecated
        time:
          type: integer
    endpointedge.edgeJobResponse:
      type: object
      properties:
        CollectLogs:
          type: boolean
          description: Whether to collect logs
          example: true
        CronExpression:
          type: string
          description: A cron expression to schedule this job
          example: "* * * * *"
        Id:
          type: integer
          description: EdgeJob Identifier
          example: 2
        Script:
          type: string
          description: Script to run
          example: echo hello
        Version:
          type: integer
          description: Version of this EdgeJob
          example: 2
    endpointedge.endpointEdgeStatusInspectResponse:
      type: object
      properties:
        checkin:
          type: integer
          description: The current value of CheckinInterval
          example: 5
        credentials:
          type: string
        port:
          type: integer
          description: The tunnel port
          example: 8732
        schedules:
          type: array
          description: List of requests for jobs to run on the environment(endpoint)
          items:
            "$ref": "#/components/schemas/endpointedge.edgeJobResponse"
        stacks:
          type: array
          description: List of stacks to be deployed on the environments(endpoints)
          items:
            "$ref": "#/components/schemas/endpointedge.stackStatusResponse"
        status:
          type: string
          description: Status represents the environment(endpoint) status
          example: REQUIRED
    endpointedge.stackStatusResponse:
      type: object
      properties:
        id:
          type: integer
          description: EdgeStack Identifier
          example: 1
        version:
          type: integer
          description: Version of this stack
          example: 3
    endpointgroups.endpointGroupCreatePayload:
      required:
        - name
      type: object
      properties:
        associatedEndpoints:
          type: array
          description: List of environment(endpoint) identifiers that will be part
            of this group
          example:
            - 1
            - 3
          items:
            type: integer
            description: Environment(Endpoint) identifier. Reference the environment(endpoint)
              that will be used for deployment
        description:
          type: string
          description: Environment(Endpoint) group description
          example: description
        name:
          type: string
          description: Environment(Endpoint) group name
          example: my-environment-group
        tagIDs:
          type: array
          description: List of tag identifiers to which this environment(endpoint)
            group is associated
          example:
            - 1
            - 2
          items:
            type: integer
            description: Tag identifier
            example: 1
    endpointgroups.endpointGroupUpdatePayload:
      type: object
      properties:
        description:
          type: string
          description: Environment(Endpoint) group description
          example: description
        name:
          type: string
          description: Environment(Endpoint) group name
          example: my-environment-group
        tagIDs:
          type: array
          description: List of tag identifiers associated to the environment(endpoint)
            group
          example:
            - 3
            - 4
          items:
            type: integer
            description: Tag identifier
            example: 1
        teamAccessPolicies:
          "$ref": "#/components/schemas/portainer.TeamAccessPolicies"
        userAccessPolicies:
          "$ref": "#/components/schemas/portainer.UserAccessPolicies"
    endpoints.dockerhubStatusResponse:
      type: object
      properties:
        limit:
          type: integer
          description: Daily limit
        remaining:
          type: integer
          description: Remaiming images to pull
    endpoints.endpointCreateGlobalKeyResponse:
      type: object
      properties:
        endpointID:
          type: integer
          description: Environment(Endpoint) Identifier
    endpoints.endpointSettingsUpdatePayload:
      type: object
      properties:
        allowBindMountsForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to use bind mounts
            when creating containers
          example: false
        allowContainerCapabilitiesForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to use container capabilities
          example: true
        allowDeviceMappingForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to use device mapping
          example: true
        allowHostNamespaceForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to use the host pid
          example: true
        allowPrivilegedModeForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to use privileged
            mode when creating containers
          example: false
        allowStackManagementForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to manage stacks
          example: true
        allowSysctlSettingForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to use sysctl settings
          example: true
        allowVolumeBrowserForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to browse volumes
          example: true
        enableGPUManagement:
          type: boolean
          example: false
        enableHostManagementFeatures:
          type: boolean
          description: Whether host management features are enabled
          example: true
        gpus:
          type: array
          items:
            "$ref": "#/components/schemas/portainer.Pair"
    endpoints.endpointUpdatePayload:
      type: object
      properties:
        azureApplicationID:
          type: string
          description: Azure application ID
          example: eag7cdo9-o09l-9i83-9dO9-f0b23oe78db4
        azureAuthenticationKey:
          type: string
          description: Azure authentication key
          example: cOrXoK/1D35w8YQ8nH1/8ZGwzz45JIYD5jxHKXEQknk=
        azureTenantID:
          type: string
          description: Azure tenant ID
          example: 34ddc78d-4fel-2358-8cc1-df84c8o839f5
        edgeCheckinInterval:
          type: integer
          description: The check in interval for edge agent (in seconds)
          example: 5
        gpus:
          type: array
          description: GPUs information
          items:
            "$ref": "#/components/schemas/portainer.Pair"
        groupID:
          type: integer
          description: Group identifier
          example: 1
        kubernetes:
          "$ref": "#/components/schemas/portainer.KubernetesData"
        name:
          type: string
          description: Name that will be used to identify this environment(endpoint)
          example: my-environment
        publicURL:
          type: string
          description: |-
            URL or IP address where exposed containers will be reachable.\
            Defaults to URL if not specified
          example: docker.mydomain.tld:2375
        status:
          type: integer
          description: The status of the environment(endpoint) (1 - up, 2 - down)
          example: 1
        tagIDs:
          type: array
          description: List of tag identifiers to which this environment(endpoint)
            is associated
          example:
            - 1
            - 2
          items:
            type: integer
            description: Tag identifier
            example: 1
        teamAccessPolicies:
          "$ref": "#/components/schemas/portainer.TeamAccessPolicies"
        tls:
          type: boolean
          description: Require TLS to connect against this environment(endpoint)
          example: true
        tlsskipClientVerify:
          type: boolean
          description: Skip client verification when using TLS
          example: false
        tlsskipVerify:
          type: boolean
          description: Skip server verification when using TLS
          example: false
        url:
          type: string
          description: URL or IP address of a Docker host
          example: docker.mydomain.tld:2375
        userAccessPolicies:
          "$ref": "#/components/schemas/portainer.UserAccessPolicies"
    endpoints.endpointUpdateRelationsPayload:
      type: object
      properties:
        relations:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/endpoints.endpointUpdateRelationsPayload_relations"
    endpoints.forceUpdateServicePayload:
      type: object
      properties:
        pullImage:
          type: boolean
          description: PullImage if true will pull the image
        serviceID:
          type: string
          description: ServiceId to update
    endpoints.registryAccessPayload:
      type: object
      properties:
        namespaces:
          type: array
          items:
            type: string
        teamAccessPolicies:
          "$ref": "#/components/schemas/portainer.TeamAccessPolicies"
        userAccessPolicies:
          "$ref": "#/components/schemas/portainer.UserAccessPolicies"
    fdo.deviceConfigurePayload:
      type: object
      properties:
        edgeID:
          type: string
        edgeKey:
          type: string
        name:
          type: string
        profile:
          type: integer
    fdo.fdoConfigurePayload:
      type: object
      properties:
        enabled:
          type: boolean
        ownerPassword:
          type: string
        ownerURL:
          type: string
        ownerUsername:
          type: string
    filesystem.DirEntry:
      type: object
      properties:
        content:
          type: string
        isFile:
          type: boolean
        name:
          type: string
        permissions:
          type: integer
    gitops.fileResponse:
      type: object
      properties:
        fileContent:
          type: string
    gitops.repositoryFilePreviewPayload:
      required:
        - repository
      type: object
      properties:
        password:
          type: string
          example: myGitPassword
        reference:
          type: string
          example: refs/heads/master
        repository:
          type: string
          example: https://github.com/openfaas/faas
        targetFile:
          type: string
          description: Path to file whose content will be read
          example: docker-compose.yml
        tlsskipVerify:
          type: boolean
          description: TLSSkipVerify skips SSL verification when cloning the Git repository
          example: false
        username:
          type: string
          example: myGitUsername
    gittypes.GitAuthentication:
      type: object
      properties:
        gitCredentialID:
          type: integer
          description: |-
            Git credentials identifier when the value is not 0
            When the value is 0, Username and Password are set without using saved credential
            This is introduced since 2.15.0
          example: 0
        password:
          type: string
        username:
          type: string
    gittypes.RepoConfig:
      type: object
      properties:
        authentication:
          "$ref": "#/components/schemas/gittypes.GitAuthentication"
        configFilePath:
          type: string
          description: Path to where the config file is in this url/refName
          example: docker-compose.yml
        configHash:
          type: string
          description: Repository hash
          example: bc4c183d756879ea4d173315338110b31004b8e0
        referenceName:
          type: string
          description: The reference name
          example: refs/heads/branch_name
        tlsskipVerify:
          type: boolean
          description: TLSSkipVerify skips SSL verification when cloning the Git repository
          example: false
        url:
          type: string
          description: The repo url
          example: https://github.com/portainer/portainer.git
    helm.addHelmRepoUrlPayload:
      type: object
      properties:
        url:
          type: string
    helm.helmUserRepositoryResponse:
      type: object
      properties:
        GlobalRepository:
          type: string
        UserRepositories:
          type: array
          items:
            "$ref": "#/components/schemas/portainer.HelmUserRepository"
    helm.installChartPayload:
      type: object
      properties:
        chart:
          type: string
        name:
          type: string
        namespace:
          type: string
        repo:
          type: string
        values:
          type: string
    images.ImageResponse:
      type: object
      properties:
        created:
          type: integer
        id:
          type: string
        nodeName:
          type: string
        size:
          type: integer
        tags:
          type: array
          items:
            type: string
        used:
          type: boolean
          description: |-
            Used is true if the image is used by at least one container
            supplied only when withUsage is true
    kubernetes.K8sApplication:
      type: object
      properties:
        kind:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        name:
          type: string
        namespace:
          type: string
        uid:
          type: string
    kubernetes.K8sConfigMapOrSecret:
      type: object
      properties:
        Annotations:
          type: object
          additionalProperties:
            type: string
        Applications:
          type: array
          items:
            type: string
        CreationDate:
          type: string
        Data:
          type: object
          additionalProperties:
            type: string
        IsSecret:
          type: boolean
        Name:
          type: string
        Namespace:
          type: string
        SecretType:
          type: string
          description: SecretType will be an empty string for config maps.
        UID:
          type: string
    kubernetes.K8sIngressController:
      type: object
      properties:
        Availability:
          type: boolean
        ClassName:
          type: string
        Name:
          type: string
        New:
          type: boolean
        Type:
          type: string
        Used:
          type: boolean
    kubernetes.K8sIngressDeleteRequests:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
    kubernetes.K8sIngressInfo:
      type: object
      properties:
        Annotations:
          type: object
          additionalProperties:
            type: string
        ClassName:
          type: string
        CreationDate:
          type: string
        Hosts:
          type: array
          items:
            type: string
        Labels:
          type: object
          additionalProperties:
            type: string
        Name:
          type: string
        Namespace:
          type: string
        Paths:
          type: array
          items:
            "$ref": "#/components/schemas/kubernetes.K8sIngressPath"
        TLS:
          type: array
          items:
            "$ref": "#/components/schemas/kubernetes.K8sIngressTLS"
        Type:
          type: string
        UID:
          type: string
    kubernetes.K8sIngressPath:
      type: object
      properties:
        Host:
          type: string
        IngressName:
          type: string
        Path:
          type: string
        PathType:
          type: string
        Port:
          type: integer
        ServiceName:
          type: string
    kubernetes.K8sIngressTLS:
      type: object
      properties:
        Hosts:
          type: array
          items:
            type: string
        SecretName:
          type: string
    kubernetes.K8sNamespaceDetails:
      type: object
      properties:
        Annotations:
          type: object
          additionalProperties:
            type: string
        Name:
          type: string
        Owner:
          type: string
        ResourceQuota:
          "$ref": "#/components/schemas/kubernetes.K8sResourceQuota"
    kubernetes.K8sResourceQuota:
      type: object
      properties:
        cpu:
          type: string
        enabled:
          type: boolean
        memory:
          type: string
    kubernetes.K8sServiceDeleteRequests:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
    kubernetes.K8sServiceInfo:
      type: object
      properties:
        allocateLoadBalancerNodePorts:
          type: boolean
        annotations:
          type: object
          additionalProperties:
            type: string
        applications:
          type: array
          description: serviceList screen
          items:
            "$ref": "#/components/schemas/kubernetes.K8sApplication"
        clusterIPs:
          type: array
          items:
            type: string
        creationTimestamp:
          type: string
        externalIPs:
          type: array
          items:
            type: string
        externalName:
          type: string
        ingressStatus:
          type: array
          items:
            "$ref": "#/components/schemas/kubernetes.K8sServiceIngress"
        labels:
          type: object
          additionalProperties:
            type: string
        name:
          type: string
        namespace:
          type: string
        ports:
          type: array
          items:
            "$ref": "#/components/schemas/kubernetes.K8sServicePort"
        selector:
          type: object
          additionalProperties:
            type: string
        type:
          type: string
        uid:
          type: string
    kubernetes.K8sServiceIngress:
      type: object
      properties:
        Host:
          type: string
        IP:
          type: string
    kubernetes.K8sServicePort:
      type: object
      properties:
        Name:
          type: string
        NodePort:
          type: integer
        Port:
          type: integer
        Protocol:
          type: string
        TargetPort:
          type: string
    kubernetes.namespacesToggleSystemPayload:
      type: object
      properties:
        system:
          type: boolean
          description: Toggle the system state of this namespace to true or false
          example: true
    ldap.checkPayload:
      type: object
      properties:
        ldapsettings:
          "$ref": "#/components/schemas/portainer.LDAPSettings"
    motd.motdResponse:
      type: object
      properties:
        ContentLayout:
          type: object
          additionalProperties:
            type: string
        Hash:
          type: array
          items:
            type: integer
        Message:
          type: string
        Style:
          type: string
        Title:
          type: string
    openamt.deviceActionPayload:
      type: object
      properties:
        action:
          type: string
    openamt.deviceFeaturesPayload:
      type: object
      properties:
        features:
          "$ref": "#/components/schemas/portainer.OpenAMTDeviceEnabledFeatures"
    openamt.openAMTConfigurePayload:
      type: object
      properties:
        certFileContent:
          type: string
        certFileName:
          type: string
        certFilePassword:
          type: string
        domainName:
          type: string
        enabled:
          type: boolean
        mpspassword:
          type: string
        mpsserver:
          type: string
        mpsuser:
          type: string
    portainer.APIKey:
      type: object
      properties:
        dateCreated:
          type: integer
          description: Unix timestamp (UTC) when the API key was created
        description:
          type: string
          example: portainer-api-key
        digest:
          type: string
          description: Digest represents SHA256 hash of the raw API key
        id:
          type: integer
          example: 1
        lastUsed:
          type: integer
          description: Unix timestamp (UTC) when the API key was last used
        prefix:
          type: string
          description: API key identifier (7 char prefix)
        userId:
          type: integer
          description: User Identifier
          example: 1
    portainer.AccessPolicy:
      type: object
      properties:
        RoleId:
          type: integer
          description: Role identifier. Reference the role that will be associated
            to this access policy
          example: 1
    portainer.Authorizations:
      type: object
      additionalProperties:
        type: boolean
    portainer.AutoUpdateSettings:
      type: object
      properties:
        forcePullImage:
          type: boolean
          description: Pull latest image
          example: false
        forceUpdate:
          type: boolean
          description: Force update ignores repo changes
          example: false
        interval:
          type: string
          description: Auto update interval
          example: 1m30s
        jobID:
          type: string
          description: Autoupdate job id
          example: '15'
        webhook:
          type: string
          description: A UUID generated from client
          example: 05de31a2-79fa-4644-9c12-faa67e5c49f0
    portainer.AzureCredentials:
      type: object
      properties:
        ApplicationID:
          type: string
          description: Azure application ID
          example: eag7cdo9-o09l-9i83-9dO9-f0b23oe78db4
        AuthenticationKey:
          type: string
          description: Azure authentication key
          example: cOrXoK/1D35w8YQ8nH1/8ZGwzz45JIYD5jxHKXEQknk=
        TenantID:
          type: string
          description: Azure tenant ID
          example: 34ddc78d-4fel-2358-8cc1-df84c8o839f5
    portainer.CustomTemplate:
      type: object
      properties:
        CreatedByUserId:
          type: integer
          description: User identifier who created this template
          example: 3
        Description:
          type: string
          description: Description of the template
          example: High performance web server
        EntryPoint:
          type: string
          description: Path to the Stack file
          example: docker-compose.yml
        GitConfig:
          "$ref": "#/components/schemas/gittypes.RepoConfig"
        Id:
          type: integer
          description: CustomTemplate Identifier
          example: 1
        Logo:
          type: string
          description: URL of the template's logo
          example: https://portainer.io/img/logo.svg
        Note:
          type: string
          description: A note that will be displayed in the UI. Supports HTML content
          example: This is my <b>custom</b> template
        Platform:
          type: integer
          description: |-
            Platform associated to the template.
            Valid values are: 1 - 'linux', 2 - 'windows'
          example: 1
        ProjectPath:
          type: string
          description: Path on disk to the repository hosting the Stack file
          example: "/data/custom_template/3"
        ResourceControl:
          "$ref": "#/components/schemas/portainer.ResourceControl"
        Title:
          type: string
          description: Title of the template
          example: Nginx
        Type:
          type: integer
          description: |-
            Type of created stack:
            * 1 - swarm
            * 2 - compose
            * 3 - kubernetes
          example: 1
        edgeTemplate:
          type: boolean
          description: EdgeTemplate indicates if this template purpose for Edge Stack
          example: false
        isComposeFormat:
          type: boolean
          description: IsComposeFormat indicates if the Kubernetes template is created
            from a Docker Compose file
          example: false
        variables:
          type: array
          items:
            "$ref": "#/components/schemas/portainer.CustomTemplateVariableDefinition"
    portainer.CustomTemplateVariableDefinition:
      type: object
      properties:
        defaultValue:
          type: string
          example: default value
        description:
          type: string
          example: Description
        label:
          type: string
          example: My Variable
        name:
          type: string
          example: MY_VAR
    portainer.DockerSnapshot:
      type: object
      properties:
        ContainerCount:
          type: integer
        DockerSnapshotRaw:
          "$ref": "#/components/schemas/portainer.DockerSnapshotRaw"
        DockerVersion:
          type: string
        GpuUseAll:
          type: boolean
        GpuUseList:
          type: array
          items:
            type: string
        HealthyContainerCount:
          type: integer
        ImageCount:
          type: integer
        NodeCount:
          type: integer
        RunningContainerCount:
          type: integer
        ServiceCount:
          type: integer
        StackCount:
          type: integer
        StoppedContainerCount:
          type: integer
        Swarm:
          type: boolean
        Time:
          type: integer
        TotalCPU:
          type: integer
        TotalMemory:
          type: integer
        UnhealthyContainerCount:
          type: integer
        VolumeCount:
          type: integer
    portainer.DockerSnapshotRaw:
      type: object
    portainer.EcrData:
      type: object
      properties:
        Region:
          type: string
          example: ap-southeast-2
    portainer.EdgeGroup:
      type: object
      properties:
        Dynamic:
          type: boolean
        Endpoints:
          type: array
          items:
            type: integer
            description: Environment(Endpoint) identifier. Reference the environment(endpoint)
              that will be used for deployment
        Id:
          type: integer
          description: EdgeGroup Identifier
          example: 1
        Name:
          type: string
        PartialMatch:
          type: boolean
        TagIds:
          type: array
          items:
            type: integer
            description: Tag identifier
            example: 1
    portainer.EdgeJob:
      type: object
      properties:
        Created:
          type: integer
        CronExpression:
          type: string
        EdgeGroups:
          type: array
          items:
            type: integer
            description: EdgeGroup Identifier
            example: 1
        Endpoints:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/portainer.EdgeJobEndpointMeta"
        Id:
          type: integer
          description: EdgeJob Identifier
          example: 1
        Name:
          type: string
        Recurring:
          type: boolean
        ScriptPath:
          type: string
        Version:
          type: integer
        groupLogsCollection:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/portainer.EdgeJobEndpointMeta"
          description: Field used for log collection of Endpoints belonging to EdgeGroups
    portainer.EdgeJobEndpointMeta:
      type: object
      properties:
        collectLogs:
          type: boolean
        logsStatus:
          type: integer
    portainer.EdgeStack:
      type: object
      properties:
        CreationDate:
          type: integer
          description: StatusArray    map[EndpointID][]EdgeStackStatus `json:"StatusArray"`
        EdgeGroups:
          type: array
          items:
            type: integer
            description: EdgeGroup Identifier
            example: 1
        EntryPoint:
          type: string
        Id:
          type: integer
          description: EdgeStack Identifier
          example: 1
        Name:
          type: string
        NumDeployments:
          type: integer
        ProjectPath:
          type: string
        Prune:
          type: boolean
          description: Deprecated
        Status:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/portainer.EdgeStackStatus"
        Version:
          type: integer
        deploymentType:
          type: integer
        manifestPath:
          type: string
        useManifestNamespaces:
          type: boolean
          description: Uses the manifest's namespaces instead of the default one
    portainer.EdgeStackDeploymentStatus:
      type: object
      properties:
        error:
          type: string
        rollbackTo:
          type: integer
          description: EE only feature
        time:
          type: integer
        type:
          type: integer
    portainer.EdgeStackStatus:
      type: object
      properties:
        Type:
          type: integer
          description: Deprecated
        deploymentInfo:
          "$ref": "#/components/schemas/portainer.StackDeploymentInfo"
        details:
          "$ref": "#/components/schemas/portainer.EdgeStackStatusDetails"
        endpointID:
          type: integer
        error:
          type: string
          description: Deprecated
        readyRePullImage:
          type: boolean
          description: ReadyRePullImage is a flag to indicate whether the auto update
            is trigger to re-pull image
        status:
          type: array
          items:
            "$ref": "#/components/schemas/portainer.EdgeStackDeploymentStatus"
    portainer.EdgeStackStatusDetails:
      type: object
      properties:
        acknowledged:
          type: boolean
        error:
          type: boolean
        imagesPulled:
          type: boolean
        ok:
          type: boolean
        pending:
          type: boolean
        remoteUpdateSuccess:
          type: boolean
        remove:
          type: boolean
    portainer.Endpoint:
      type: object
      properties:
        AMTDeviceGUID:
          type: string
          description: The identifier of the AMT Device associated with this environment(endpoint)
          example: 4c4c4544-004b-3910-8037-b6c04f504633
        AuthorizedTeams:
          type: array
          items:
            type: integer
            description: Team Identifier
            example: 1
        AuthorizedUsers:
          type: array
          description: Deprecated in DBVersion == 18
          items:
            type: integer
            description: User Identifier
            example: 1
        AzureCredentials:
          "$ref": "#/components/schemas/portainer.AzureCredentials"
        ComposeSyntaxMaxVersion:
          type: string
          description: Maximum version of docker-compose
          example: '3.8'
        EdgeCheckinInterval:
          type: integer
          description: The check in interval for edge agent (in seconds)
          example: 5
        EdgeID:
          type: string
          description: The identifier of the edge agent associated with this environment(endpoint)
        EdgeKey:
          type: string
          description: The key which is used to map the agent to Portainer
        EnableGPUManagement:
          type: boolean
        Gpus:
          type: array
          items:
            "$ref": "#/components/schemas/portainer.Pair"
        GroupId:
          type: integer
          description: Environment(Endpoint) group identifier
          example: 1
        Heartbeat:
          type: boolean
          description: Heartbeat indicates the heartbeat status of an edge environment
          example: true
        Id:
          type: integer
          description: Environment(Endpoint) Identifier
          example: 1
        IsEdgeDevice:
          type: boolean
          description: Deprecated v2.18
        Kubernetes:
          "$ref": "#/components/schemas/portainer.KubernetesData"
        Name:
          type: string
          description: Environment(Endpoint) name
          example: my-environment
        PostInitMigrations:
          "$ref": "#/components/schemas/portainer.EndpointPostInitMigrations"
        PublicURL:
          type: string
          description: URL or IP address where exposed containers will be reachable
          example: docker.mydomain.tld:2375
        Snapshots:
          type: array
          description: List of snapshots
          items:
            "$ref": "#/components/schemas/portainer.DockerSnapshot"
        Status:
          type: integer
          description: The status of the environment(endpoint) (1 - up, 2 - down)
          example: 1
        TLS:
          type: boolean
          description: |-
            Deprecated fields
            Deprecated in DBVersion == 4
        TLSCACert:
          type: string
        TLSCert:
          type: string
        TLSConfig:
          "$ref": "#/components/schemas/portainer.TLSConfiguration"
        TLSKey:
          type: string
        TagIds:
          type: array
          description: List of tag identifiers to which this environment(endpoint)
            is associated
          items:
            type: integer
            description: Tag identifier
            example: 1
        Tags:
          type: array
          description: Deprecated in DBVersion == 22
          items:
            type: string
        TeamAccessPolicies:
          "$ref": "#/components/schemas/portainer.TeamAccessPolicies"
        Type:
          type: integer
          description: Environment(Endpoint) environment(endpoint) type. 1 for a Docker
            environment(endpoint), 2 for an agent on Docker environment(endpoint)
            or 3 for an Azure environment(endpoint).
          example: 1
        URL:
          type: string
          description: URL or IP address of the Docker host associated to this environment(endpoint)
          example: docker.mydomain.tld:2375
        UserAccessPolicies:
          "$ref": "#/components/schemas/portainer.UserAccessPolicies"
        UserTrusted:
          type: boolean
          description: Whether the device has been trusted or not by the user
        agent:
          "$ref": "#/components/schemas/portainer.Endpoint_agent"
        edge:
          "$ref": "#/components/schemas/portainer.EnvironmentEdgeSettings"
        lastCheckInDate:
          type: integer
          description: LastCheckInDate mark last check-in date on checkin
        queryDate:
          type: integer
          description: QueryDate of each query with the endpoints list
        securitySettings:
          "$ref": "#/components/schemas/portainer.EndpointSecuritySettings"
    portainer.EndpointAuthorizations:
      type: object
      additionalProperties:
        "$ref": "#/components/schemas/portainer.Authorizations"
    portainer.EndpointGroup:
      type: object
      properties:
        AuthorizedTeams:
          type: array
          items:
            type: integer
            description: Team Identifier
            example: 1
        AuthorizedUsers:
          type: array
          description: Deprecated in DBVersion == 18
          items:
            type: integer
            description: User Identifier
            example: 1
        Description:
          type: string
          description: Description associated to the environment(endpoint) group
          example: Environment(Endpoint) group description
        Id:
          type: integer
          description: Environment(Endpoint) group Identifier
          example: 1
        Labels:
          type: array
          description: Deprecated fields
          items:
            "$ref": "#/components/schemas/portainer.Pair"
        Name:
          type: string
          description: Environment(Endpoint) group name
          example: my-environment-group
        TagIds:
          type: array
          description: List of tags associated to this environment(endpoint) group
          items:
            type: integer
            description: Tag identifier
            example: 1
        Tags:
          type: array
          description: Deprecated in DBVersion == 22
          items:
            type: string
        TeamAccessPolicies:
          "$ref": "#/components/schemas/portainer.TeamAccessPolicies"
        UserAccessPolicies:
          "$ref": "#/components/schemas/portainer.UserAccessPolicies"
    portainer.EndpointPostInitMigrations:
      type: object
      properties:
        MigrateGPUs:
          type: boolean
        MigrateIngresses:
          type: boolean
    portainer.EndpointSecuritySettings:
      type: object
      properties:
        allowBindMountsForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to use bind mounts
            when creating containers
          example: false
        allowContainerCapabilitiesForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to use container capabilities
          example: true
        allowDeviceMappingForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to use device mapping
          example: true
        allowHostNamespaceForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to use the host pid
          example: true
        allowPrivilegedModeForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to use privileged
            mode when creating containers
          example: false
        allowStackManagementForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to manage stacks
          example: true
        allowSysctlSettingForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to use sysctl settings
          example: true
        allowVolumeBrowserForRegularUsers:
          type: boolean
          description: Whether non-administrator should be able to browse volumes
          example: true
        enableHostManagementFeatures:
          type: boolean
          description: Whether host management features are enabled
          example: true
    portainer.EnvironmentEdgeSettings:
      type: object
      properties:
        CommandInterval:
          type: integer
          description: The command list interval for edge agent - used in edge async
            mode [seconds]
          example: 60
        PingInterval:
          type: integer
          description: The ping interval for edge agent - used in edge async mode
            [seconds]
          example: 60
        SnapshotInterval:
          type: integer
          description: The snapshot interval for edge agent - used in edge async mode
            [seconds]
          example: 60
        asyncMode:
          type: boolean
          description: Whether the device has been started in edge async mode
    portainer.FDOConfiguration:
      type: object
      properties:
        enabled:
          type: boolean
        ownerPassword:
          type: string
        ownerURL:
          type: string
        ownerUsername:
          type: string
    portainer.GitlabRegistryData:
      type: object
      properties:
        InstanceURL:
          type: string
        ProjectId:
          type: integer
        ProjectPath:
          type: string
    portainer.GlobalDeploymentOptions:
      type: object
      properties:
        hideStacksFunctionality:
          type: boolean
          example: false
    portainer.HelmUserRepository:
      type: object
      properties:
        Id:
          type: integer
          description: Membership Identifier
          example: 1
        URL:
          type: string
          description: Helm repository URL
          example: https://charts.bitnami.com/bitnami
        UserId:
          type: integer
          description: User identifier
          example: 1
    portainer.InternalAuthSettings:
      type: object
      properties:
        requiredPasswordLength:
          type: integer
    portainer.K8sNamespaceInfo:
      type: object
      properties:
        IsDefault:
          type: boolean
        IsSystem:
          type: boolean
    portainer.K8sNodeLimits:
      type: object
      properties:
        CPU:
          type: integer
        Memory:
          type: integer
    portainer.K8sNodesLimits:
      type: object
      additionalProperties:
        "$ref": "#/components/schemas/portainer.K8sNodeLimits"
    portainer.KubernetesConfiguration:
      type: object
      properties:
        AllowNoneIngressClass:
          type: boolean
        EnableResourceOverCommit:
          type: boolean
        IngressAvailabilityPerNamespace:
          type: boolean
        IngressClasses:
          type: array
          items:
            "$ref": "#/components/schemas/portainer.KubernetesIngressClassConfig"
        ResourceOverCommitPercentage:
          type: integer
        RestrictDefaultNamespace:
          type: boolean
        StorageClasses:
          type: array
          items:
            "$ref": "#/components/schemas/portainer.KubernetesStorageClassConfig"
        UseLoadBalancer:
          type: boolean
        UseServerMetrics:
          type: boolean
    portainer.KubernetesData:
      type: object
      properties:
        Configuration:
          "$ref": "#/components/schemas/portainer.KubernetesConfiguration"
        Flags:
          "$ref": "#/components/schemas/portainer.KubernetesFlags"
        Snapshots:
          type: array
          items:
            "$ref": "#/components/schemas/portainer.KubernetesSnapshot"
    portainer.KubernetesFlags:
      type: object
      properties:
        IsServerIngressClassDetected:
          type: boolean
        IsServerMetricsDetected:
          type: boolean
        IsServerStorageDetected:
          type: boolean
    portainer.KubernetesIngressClassConfig:
      type: object
      properties:
        Blocked:
          type: boolean
        BlockedNamespaces:
          type: array
          items:
            type: string
        Name:
          type: string
        Type:
          type: string
    portainer.KubernetesSnapshot:
      type: object
      properties:
        KubernetesVersion:
          type: string
        NodeCount:
          type: integer
        Time:
          type: integer
        TotalCPU:
          type: integer
        TotalMemory:
          type: integer
    portainer.KubernetesStorageClassConfig:
      type: object
      properties:
        AccessModes:
          type: array
          items:
            type: string
        AllowVolumeExpansion:
          type: boolean
        Name:
          type: string
        Provisioner:
          type: string
    portainer.LDAPGroupSearchSettings:
      type: object
      properties:
        GroupAttribute:
          type: string
          description: LDAP attribute which denotes the group membership
          example: member
        GroupBaseDN:
          type: string
          description: The distinguished name of the element from which the LDAP server
            will search for groups
          example: dc=ldap,dc=domain,dc=tld
        GroupFilter:
          type: string
          description: The LDAP search filter used to select group elements, optional
          example: "(objectClass=account"
    portainer.LDAPSearchSettings:
      type: object
      properties:
        BaseDN:
          type: string
          description: The distinguished name of the element from which the LDAP server
            will search for users
          example: dc=ldap,dc=domain,dc=tld
        Filter:
          type: string
          description: Optional LDAP search filter used to select user elements
          example: "(objectClass=account)"
        UserNameAttribute:
          type: string
          description: LDAP attribute which denotes the username
          example: uid
    portainer.LDAPSettings:
      type: object
      properties:
        AnonymousMode:
          type: boolean
          description: Enable this option if the server is configured for Anonymous
            access. When enabled, ReaderDN and Password will not be used
          example: true
        AutoCreateUsers:
          type: boolean
          description: Automatically provision users and assign them to matching LDAP
            group names
          example: true
        GroupSearchSettings:
          type: array
          items:
            "$ref": "#/components/schemas/portainer.LDAPGroupSearchSettings"
        Password:
          type: string
          description: Password of the account that will be used to search users
          example: readonly-password
        ReaderDN:
          type: string
          description: Account that will be used to search for users
          example: cn=readonly-account,dc=ldap,dc=domain,dc=tld
        SearchSettings:
          type: array
          items:
            "$ref": "#/components/schemas/portainer.LDAPSearchSettings"
        StartTLS:
          type: boolean
          description: Whether LDAP connection should use StartTLS
          example: true
        TLSConfig:
          "$ref": "#/components/schemas/portainer.TLSConfiguration"
        URL:
          type: string
          description: URL or IP address of the LDAP server
          example: myldap.domain.tld:389
    portainer.OAuthSettings:
      type: object
      properties:
        AccessTokenURI:
          type: string
        AuthStyle:
          type: integer
        AuthorizationURI:
          type: string
        ClientID:
          type: string
        ClientSecret:
          type: string
        DefaultTeamID:
          type: integer
        KubeSecretKey:
          type: array
          items:
            type: integer
        LogoutURI:
          type: string
        OAuthAutoCreateUsers:
          type: boolean
        RedirectURI:
          type: string
        ResourceURI:
          type: string
        SSO:
          type: boolean
        Scopes:
          type: string
        UserIdentifier:
          type: string
    portainer.OpenAMTConfiguration:
      type: object
      properties:
        certFileContent:
          type: string
        certFileName:
          type: string
        certFilePassword:
          type: string
        domainName:
          type: string
        enabled:
          type: boolean
        mpsPassword:
          type: string
        mpsServer:
          type: string
        mpsToken:
          type: string
          description: retrieved from API
        mpsUser:
          type: string
    portainer.OpenAMTDeviceEnabledFeatures:
      type: object
      properties:
        IDER:
          type: boolean
        KVM:
          type: boolean
        SOL:
          type: boolean
        redirection:
          type: boolean
        userConsent:
          type: string
    portainer.Pair:
      type: object
      properties:
        name:
          type: string
          example: name
        value:
          type: string
          example: value
    portainer.QuayRegistryData:
      type: object
      properties:
        OrganisationName:
          type: string
        UseOrganisation:
          type: boolean
    portainer.Registry:
      type: object
      properties:
        AccessToken:
          type: string
          description: Stores temporary access token
        AccessTokenExpiry:
          type: integer
        Authentication:
          type: boolean
          description: Is authentication against this registry enabled
          example: true
        AuthorizedTeams:
          type: array
          description: Deprecated in DBVersion == 18
          items:
            type: integer
            description: Team Identifier
            example: 1
        AuthorizedUsers:
          type: array
          description: Deprecated in DBVersion == 18
          items:
            type: integer
            description: User Identifier
            example: 1
        BaseURL:
          type: string
          description: Base URL, introduced for ProGet registry
          example: registry.mydomain.tld:2375
        Ecr:
          "$ref": "#/components/schemas/portainer.EcrData"
        Gitlab:
          "$ref": "#/components/schemas/portainer.GitlabRegistryData"
        Id:
          type: integer
          description: Registry Identifier
          example: 1
        ManagementConfiguration:
          "$ref": "#/components/schemas/portainer.RegistryManagementConfiguration"
        Name:
          type: string
          description: Registry Name
          example: my-registry
        Password:
          type: string
          description: Password or SecretAccessKey used to authenticate against this
            registry
          example: registry_password
        Quay:
          "$ref": "#/components/schemas/portainer.QuayRegistryData"
        RegistryAccesses:
          "$ref": "#/components/schemas/portainer.RegistryAccesses"
        TeamAccessPolicies:
          "$ref": "#/components/schemas/portainer.TeamAccessPolicies"
        Type:
          type: integer
          description: Registry Type (1 - Quay, 2 - Azure, 3 - Custom, 4 - Gitlab,
            5 - ProGet, 6 - DockerHub, 7 - ECR)
        URL:
          type: string
          description: URL or IP address of the Docker registry
          example: registry.mydomain.tld:2375
        UserAccessPolicies:
          "$ref": "#/components/schemas/portainer.UserAccessPolicies"
        Username:
          type: string
          description: Username or AccessKeyID used to authenticate against this registry
          example: registry user
    portainer.RegistryAccessPolicies:
      type: object
      properties:
        Namespaces:
          type: array
          items:
            type: string
        TeamAccessPolicies:
          "$ref": "#/components/schemas/portainer.TeamAccessPolicies"
        UserAccessPolicies:
          "$ref": "#/components/schemas/portainer.UserAccessPolicies"
    portainer.RegistryAccesses:
      type: object
      additionalProperties:
        "$ref": "#/components/schemas/portainer.RegistryAccessPolicies"
    portainer.RegistryManagementConfiguration:
      type: object
      properties:
        AccessToken:
          type: string
        AccessTokenExpiry:
          type: integer
        Authentication:
          type: boolean
        Ecr:
          "$ref": "#/components/schemas/portainer.EcrData"
        Password:
          type: string
        TLSConfig:
          "$ref": "#/components/schemas/portainer.TLSConfiguration"
        Type:
          type: integer
          description: Registry Type (1 - Quay, 2 - Azure, 3 - Custom, 4 - Gitlab,
            5 - ProGet, 6 - DockerHub, 7 - ECR)
        Username:
          type: string
    portainer.ResourceControl:
      type: object
      properties:
        AccessLevel:
          type: integer
        AdministratorsOnly:
          type: boolean
          description: Permit access to resource only to admins
          example: true
        Id:
          type: integer
          description: ResourceControl Identifier
          example: 1
        OwnerId:
          type: integer
          description: |-
            Deprecated fields
            Deprecated in DBVersion == 2
        Public:
          type: boolean
          description: Permit access to the associated resource to any user
          example: true
        ResourceId:
          type: string
          description: |-
            Docker resource identifier on which access control will be applied.\
            In the case of a resource control applied to a stack, use the stack name as identifier
          example: 617c5f22bb9b023d6daab7cba43a57576f83492867bc767d1c59416b065e5f08
        SubResourceIds:
          type: array
          description: List of Docker resources that will inherit this access control
          example:
            - 617c5f22bb9b023d6daab7cba43a57576f83492867bc767d1c59416b065e5f08
          items:
            type: string
        System:
          type: boolean
        TeamAccesses:
          type: array
          items:
            "$ref": "#/components/schemas/portainer.TeamResourceAccess"
        Type:
          type: integer
          description: |-
            Type of Docker resource. Valid values are: 1- container, 2 -service
            3 - volume, 4 - secret, 5 - stack, 6 - config or 7 - custom template
          example: 1
        UserAccesses:
          type: array
          items:
            "$ref": "#/components/schemas/portainer.UserResourceAccess"
    portainer.Role:
      type: object
      properties:
        Authorizations:
          "$ref": "#/components/schemas/portainer.Authorizations"
        Description:
          type: string
          description: Role description
          example: Read-only access of all resources in an environment(endpoint)
        Id:
          type: integer
          description: Role Identifier
          example: 1
        Name:
          type: string
          description: Role name
          example: HelpDesk
        Priority:
          type: integer
    portainer.SSLSettings:
      type: object
      properties:
        certPath:
          type: string
        httpEnabled:
          type: boolean
        keyPath:
          type: string
        selfSigned:
          type: boolean
    portainer.Settings:
      type: object
      properties:
        AgentSecret:
          type: string
          description: Container environment parameter AGENT_SECRET
        AllowBindMountsForRegularUsers:
          type: boolean
        AllowContainerCapabilitiesForRegularUsers:
          type: boolean
        AllowDeviceMappingForRegularUsers:
          type: boolean
        AllowHostNamespaceForRegularUsers:
          type: boolean
        AllowPrivilegedModeForRegularUsers:
          type: boolean
        AllowStackManagementForRegularUsers:
          type: boolean
        AllowVolumeBrowserForRegularUsers:
          type: boolean
        AuthenticationMethod:
          type: integer
          description: 'Active authentication method for the Portainer instance. Valid
            values are: 1 for internal, 2 for LDAP, or 3 for oauth'
          example: 1
        BlackListedLabels:
          type: array
          description: A list of label name & value that will be used to hide containers
            when querying containers
          items:
            "$ref": "#/components/schemas/portainer.Pair"
        DisplayDonationHeader:
          type: boolean
          description: Deprecated fields
        DisplayExternalContributors:
          type: boolean
        EdgeAgentCheckinInterval:
          type: integer
          description: The default check in interval for edge agent (in seconds)
          example: 5
        EdgePortainerUrl:
          type: string
          description: EdgePortainerURL is the URL that is exposed to edge agents
        EnableEdgeComputeFeatures:
          type: boolean
          description: Whether edge compute features are enabled
        EnableHostManagementFeatures:
          type: boolean
          description: Deprecated fields v26
        EnableTelemetry:
          type: boolean
          description: Whether telemetry is enabled
          example: false
        EnforceEdgeID:
          type: boolean
          description: EnforceEdgeID makes Portainer store the Edge ID instead of
            accepting anyone
          example: false
        FeatureFlagSettings:
          type: object
          additionalProperties:
            type: boolean
        GlobalDeploymentOptions:
          "$ref": "#/components/schemas/portainer.GlobalDeploymentOptions"
        HelmRepositoryURL:
          type: string
          description: Helm repository URL, defaults to "https://charts.bitnami.com/bitnami"
          example: https://charts.bitnami.com/bitnami
        InternalAuthSettings:
          "$ref": "#/components/schemas/portainer.InternalAuthSettings"
        IsDockerDesktopExtension:
          type: boolean
        KubeconfigExpiry:
          type: string
          description: The expiry of a Kubeconfig
          example: 24h
        KubectlShellImage:
          type: string
          description: KubectlImage, defaults to portainer/kubectl-shell
          example: portainer/kubectl-shell
        LDAPSettings:
          "$ref": "#/components/schemas/portainer.LDAPSettings"
        LogoURL:
          type: string
          description: URL to a logo that will be displayed on the login page as well
            as on top of the sidebar. Will use default Portainer logo when value is
            empty string
          example: https://mycompany.mydomain.tld/logo.png
        OAuthSettings:
          "$ref": "#/components/schemas/portainer.OAuthSettings"
        ShowKomposeBuildOption:
          type: boolean
          description: Show the Kompose build option (discontinued in 2.18)
          example: false
        SnapshotInterval:
          type: string
          description: The interval in which environment(endpoint) snapshots are created
          example: 5m
        TemplatesURL:
          type: string
          description: URL to the templates that will be displayed in the UI when
            navigating to App Templates
          example: https://raw.githubusercontent.com/portainer/templates/master/templates.json
        TrustOnFirstConnect:
          type: boolean
          description: TrustOnFirstConnect makes Portainer accepting edge agent connection
            by default
          example: false
        UserSessionTimeout:
          type: string
          description: The duration of a user session
          example: 5m
        edge:
          "$ref": "#/components/schemas/portainer.Settings_edge"
        fdoConfiguration:
          "$ref": "#/components/schemas/portainer.FDOConfiguration"
        openAMTConfiguration:
          "$ref": "#/components/schemas/portainer.OpenAMTConfiguration"
    portainer.Stack:
      type: object
      properties:
        AdditionalFiles:
          type: array
          description: Only applies when deploying stack with multiple files
          items:
            type: string
        AutoUpdate:
          "$ref": "#/components/schemas/portainer.AutoUpdateSettings"
        EndpointId:
          type: integer
          description: Environment(Endpoint) identifier. Reference the environment(endpoint)
            that will be used for deployment
          example: 1
        EntryPoint:
          type: string
          description: Path to the Stack file
          example: docker-compose.yml
        Env:
          type: array
          description: A list of environment(endpoint) variables used during stack
            deployment
          items:
            "$ref": "#/components/schemas/portainer.Pair"
        Id:
          type: integer
          description: Stack Identifier
          example: 1
        Name:
          type: string
          description: Stack name
          example: myStack
        Option:
          "$ref": "#/components/schemas/portainer.StackOption"
        ResourceControl:
          "$ref": "#/components/schemas/portainer.ResourceControl"
        Status:
          type: integer
          description: Stack status (1 - active, 2 - inactive)
          example: 1
        SwarmId:
          type: string
          description: Cluster identifier of the Swarm cluster where the stack is
            deployed
          example: jpofkc0i9uo9wtx1zesuk649w
        Type:
          type: integer
          description: Stack type. 1 for a Swarm stack, 2 for a Compose stack
          example: 2
        createdBy:
          type: string
          description: The username which created this stack
          example: admin
        creationDate:
          type: integer
          description: The date in unix time when stack was created
          example: 1587399600
        fromAppTemplate:
          type: boolean
          description: Whether the stack is from a app template
          example: false
        gitConfig:
          "$ref": "#/components/schemas/gittypes.RepoConfig"
        isComposeFormat:
          type: boolean
          description: IsComposeFormat indicates if the Kubernetes stack is created
            from a Docker Compose file
          example: false
        namespace:
          type: string
          description: Kubernetes namespace if stack is a kube application
          example: default
        projectPath:
          type: string
          description: Path on disk to the repository hosting the Stack file
          example: "/data/compose/myStack_jpofkc0i9uo9wtx1zesuk649w"
        updateDate:
          type: integer
          description: The date in unix time when stack was last updated
          example: 1587399600
        updatedBy:
          type: string
          description: The username which last updated this stack
          example: bob
    portainer.StackDeploymentInfo:
      type: object
      properties:
        ConfigHash:
          type: string
          description: ConfigHash is the commit hash of the git repository used for
            deploying the stack
        FileVersion:
          type: integer
          description: FileVersion is the version of the stack file, used to detect
            changes
        Version:
          type: integer
          description: Version is the version of the stack and also is the deployed
            version in edge agent
    portainer.StackOption:
      type: object
      properties:
        prune:
          type: boolean
          description: Prune services that are no longer referenced
          example: false
    portainer.TLSConfiguration:
      type: object
      properties:
        TLS:
          type: boolean
          description: Use TLS
          example: true
        TLSCACert:
          type: string
          description: Path to the TLS CA certificate file
          example: "/data/tls/ca.pem"
        TLSCert:
          type: string
          description: Path to the TLS client certificate file
          example: "/data/tls/cert.pem"
        TLSKey:
          type: string
          description: Path to the TLS client key file
          example: "/data/tls/key.pem"
        TLSSkipVerify:
          type: boolean
          description: Skip the verification of the server TLS certificate
          example: false
    portainer.Tag:
      type: object
      properties:
        EndpointGroups:
          type: object
          additionalProperties:
            type: boolean
          description: A set of environment(endpoint) group ids that have this tag
        Endpoints:
          type: object
          additionalProperties:
            type: boolean
          description: A set of environment(endpoint) ids that have this tag
        Name:
          type: string
          description: Tag name
          example: org/acme
        id:
          type: integer
          description: Tag identifier
          example: 1
    portainer.Team:
      type: object
      properties:
        Id:
          type: integer
          description: Team Identifier
          example: 1
        Name:
          type: string
          description: Team name
          example: developers
    portainer.TeamAccessPolicies:
      type: object
      additionalProperties:
        "$ref": "#/components/schemas/portainer.AccessPolicy"
    portainer.TeamMembership:
      type: object
      properties:
        Id:
          type: integer
          description: Membership Identifier
          example: 1
        Role:
          type: integer
          description: Team role (1 for team leader and 2 for team member)
          example: 1
        TeamID:
          type: integer
          description: Team identifier
          example: 1
        UserID:
          type: integer
          description: User identifier
          example: 1
    portainer.TeamResourceAccess:
      type: object
      properties:
        AccessLevel:
          type: integer
        TeamId:
          type: integer
    portainer.Template:
      type: object
      properties:
        administrator_only:
          type: boolean
          description: Whether the template should be available to administrators
            only
          example: true
        categories:
          type: array
          description: A list of categories associated to the template
          example:
            - database
          items:
            type: string
        command:
          type: string
          description: The command that will be executed in a container template
          example: ls -lah
        description:
          type: string
          description: Description of the template
          example: High performance web server
        env:
          type: array
          description: A list of environment(endpoint) variables used during the template
            deployment
          items:
            "$ref": "#/components/schemas/portainer.TemplateEnv"
        hostname:
          type: string
          description: Container hostname
          example: mycontainer
        id:
          type: integer
          description: |-
            Mandatory container/stack fields
            Template Identifier
          example: 1
        image:
          type: string
          description: |-
            Mandatory container fields
            Image associated to a container template. Mandatory for a container template
          example: nginx:latest
        interactive:
          type: boolean
          description: |-
            Whether the container should be started in
            interactive mode (-i -t equivalent on the CLI)
          example: true
        labels:
          type: array
          description: Container labels
          items:
            "$ref": "#/components/schemas/portainer.Pair"
        logo:
          type: string
          description: URL of the template's logo
          example: https://portainer.io/img/logo.svg
        name:
          type: string
          description: |-
            Optional stack/container fields
            Default name for the stack/container to be used on deployment
          example: mystackname
        network:
          type: string
          description: Name of a network that will be used on container deployment
            if it exists inside the environment(endpoint)
          example: mynet
        note:
          type: string
          description: A note that will be displayed in the UI. Supports HTML content
          example: This is my <b>custom</b> template
        platform:
          type: string
          description: |-
            Platform associated to the template.
            Valid values are: 'linux', 'windows' or leave empty for multi-platform
          example: linux
        ports:
          type: array
          description: A list of ports exposed by the container
          example:
            - 8080:80/tcp
          items:
            type: string
        privileged:
          type: boolean
          description: Whether the container should be started in privileged mode
          example: true
        registry:
          type: string
          description: |-
            Optional container fields
            The URL of a registry associated to the image for a container template
          example: quay.io
        repository:
          "$ref": "#/components/schemas/portainer.TemplateRepository"
        restart_policy:
          type: string
          description: Container restart policy
          example: on-failure
        stackFile:
          type: string
          description: |-
            Mandatory Edge stack fields
            Stack file used for this template
        title:
          type: string
          description: Title of the template
          example: Nginx
        type:
          type: integer
          description: 'Template type. Valid values are: 1 (container), 2 (Swarm stack),
            3 (Compose stack), 4 (Compose edge stack)'
          example: 1
        volumes:
          type: array
          description: A list of volumes used during the container template deployment
          items:
            "$ref": "#/components/schemas/portainer.TemplateVolume"
    portainer.TemplateEnv:
      type: object
      properties:
        default:
          type: string
          description: Default value that will be set for the variable
          example: default_value
        description:
          type: string
          description: Content of the tooltip that will be generated in the UI
          example: MySQL root account password
        label:
          type: string
          description: Text for the label that will be generated in the UI
          example: Root password
        name:
          type: string
          description: name of the environment(endpoint) variable
          example: MYSQL_ROOT_PASSWORD
        preset:
          type: boolean
          description: If set to true, will not generate any input for this variable
            in the UI
          example: false
        select:
          type: array
          description: A list of name/value that will be used to generate a dropdown
            in the UI
          items:
            "$ref": "#/components/schemas/portainer.TemplateEnvSelect"
    portainer.TemplateEnvSelect:
      type: object
      properties:
        default:
          type: boolean
          description: Will set this choice as the default choice
          example: false
        text:
          type: string
          description: Some text that will displayed as a choice
          example: text value
        value:
          type: string
          description: A value that will be associated to the choice
          example: value
    portainer.TemplateRepository:
      type: object
      properties:
        stackfile:
          type: string
          description: Path to the stack file inside the git repository
          example: "./subfolder/docker-compose.yml"
        url:
          type: string
          description: URL of a git repository used to deploy a stack template. Mandatory
            for a Swarm/Compose stack template
          example: https://github.com/portainer/portainer-compose
    portainer.TemplateVolume:
      type: object
      properties:
        bind:
          type: string
          description: Path on the host
          example: "/tmp"
        container:
          type: string
          description: Path inside the container
          example: "/data"
        readonly:
          type: boolean
          description: Whether the volume used should be readonly
          example: true
    portainer.User:
      type: object
      properties:
        Id:
          type: integer
          description: User Identifier
          example: 1
        Role:
          type: integer
          description: User role (1 for administrator account and 2 for regular account)
          example: 1
        ThemeSettings:
          "$ref": "#/components/schemas/portainer.UserThemeSettings"
        TokenIssueAt:
          type: integer
          example: 1
        UseCache:
          type: boolean
          example: true
        UserTheme:
          type: string
          description: Deprecated
          example: dark
        Username:
          type: string
          example: bob
        endpointAuthorizations:
          "$ref": "#/components/schemas/portainer.EndpointAuthorizations"
        portainerAuthorizations:
          "$ref": "#/components/schemas/portainer.Authorizations"
    portainer.UserAccessPolicies:
      type: object
      additionalProperties:
        "$ref": "#/components/schemas/portainer.AccessPolicy"
    portainer.UserResourceAccess:
      type: object
      properties:
        AccessLevel:
          type: integer
        UserId:
          type: integer
          description: User identifier who created this template
    portainer.UserThemeSettings:
      type: object
      properties:
        color:
          type: string
          description: Color represents the color theme of the UI
          example: dark
          enum:
            - dark
            - light
            - highcontrast
            - auto
    portainer.Webhook:
      type: object
      properties:
        EndpointId:
          type: integer
          description: Environment(Endpoint) identifier. Reference the environment(endpoint)
            that will be used for deployment
        Id:
          type: integer
          description: Webhook Identifier
          example: 1
        RegistryId:
          type: integer
          description: Registry Identifier
        ResourceId:
          type: string
        Token:
          type: string
        Type:
          type: integer
          description: Type of webhook (1 - service)
    registries.registryConfigurePayload:
      required:
        - authentication
      type: object
      properties:
        authentication:
          type: boolean
          description: Is authentication against this registry enabled
          example: false
        password:
          type: string
          description: Password used to authenticate against this registry. required
            when Authentication is true
          example: registry_password
        region:
          type: string
          description: ECR region
        tls:
          type: boolean
          description: Use TLS
          example: true
        tlscacertFile:
          type: array
          description: The TLS CA certificate file
          items:
            type: integer
        tlscertFile:
          type: array
          description: The TLS client certificate file
          items:
            type: integer
        tlskeyFile:
          type: array
          description: The TLS client key file
          items:
            type: integer
        tlsskipVerify:
          type: boolean
          description: Skip the verification of the server TLS certificate
          example: false
        username:
          type: string
          description: Username used to authenticate against this registry. Required
            when Authentication is true
          example: registry_user
    registries.registryCreatePayload:
      required:
        - authentication
        - name
        - type
        - url
      type: object
      properties:
        authentication:
          type: boolean
          description: Is authentication against this registry enabled
          example: false
        baseURL:
          type: string
          description: BaseURL required for ProGet registry
          example: registry.mydomain.tld:2375
        ecr:
          "$ref": "#/components/schemas/portainer.EcrData"
        gitlab:
          "$ref": "#/components/schemas/portainer.GitlabRegistryData"
        name:
          type: string
          description: Name that will be used to identify this registry
          example: my-registry
        password:
          type: string
          description: Password used to authenticate against this registry. required
            when Authentication is true
          example: registry_password
        quay:
          "$ref": "#/components/schemas/portainer.QuayRegistryData"
        type:
          type: integer
          description: "Registry Type. Valid values are:\n\t1 (Quay.io),\n\t2 (Azure
            container registry),\n\t3 (custom registry),\n\t4 (Gitlab registry),\n\t5
            (ProGet registry),\n\t6 (DockerHub)\n\t7 (ECR)"
          example: 1
        url:
          type: string
          description: URL or IP address of the Docker registry
          example: registry.mydomain.tld:2375/feed
        username:
          type: string
          description: Username used to authenticate against this registry. Required
            when Authentication is true
          example: registry_user
    registries.registryUpdatePayload:
      required:
        - authentication
        - name
        - url
      type: object
      properties:
        authentication:
          type: boolean
          description: Is authentication against this registry enabled
          example: false
        baseURL:
          type: string
          description: BaseURL is used for quay registry
          example: registry.mydomain.tld:2375
        ecr:
          "$ref": "#/components/schemas/portainer.EcrData"
        name:
          type: string
          description: Name that will be used to identify this registry
          example: my-registry
        password:
          type: string
          description: Password used to authenticate against this registry. required
            when Authentication is true
          example: registry_password
        quay:
          "$ref": "#/components/schemas/portainer.QuayRegistryData"
        registryAccesses:
          "$ref": "#/components/schemas/portainer.RegistryAccesses"
        url:
          type: string
          description: URL or IP address of the Docker registry
          example: registry.mydomain.tld:2375
        username:
          type: string
          description: Username used to authenticate against this registry. Required
            when Authentication is true
          example: registry_user
    release.Chart:
      type: object
      properties:
        files:
          type: array
          description: |-
            Files are miscellaneous files in a chart archive,
            e.g. README, LICENSE, etc.
          items:
            "$ref": "#/components/schemas/release.File"
        lock:
          "$ref": "#/components/schemas/release.Lock"
        metadata:
          "$ref": "#/components/schemas/release.Metadata"
        schema:
          type: array
          description: Schema is an optional JSON schema for imposing structure on
            Values
          items:
            type: integer
        templates:
          type: array
          description: Templates for this chart.
          items:
            "$ref": "#/components/schemas/release.File"
        values:
          type: object
          additionalProperties: true
          description: Values are default config for this chart.
    release.Dependency:
      type: object
      properties:
        alias:
          type: string
          description: Alias usable alias to be used for the chart
        condition:
          type: string
          description: A yaml path that resolves to a boolean, used for enabling/disabling
            charts (e.g. subchart1.enabled )
        enabled:
          type: boolean
          description: Enabled bool determines if chart should be loaded
        import-values:
          type: array
          description: |-
            ImportValues holds the mapping of source values to parent key to be imported. Each item can be a
            string or pair of child/parent sublist items.
          items:
            type: object
        name:
          type: string
          description: |-
            Name is the name of the dependency.

            This must mach the name in the dependency's Chart.yaml.
        repository:
          type: string
          description: |-
            The URL to the repository.

            Appending `index.yaml` to this string should result in a URL that can be
            used to fetch the repository index.
        tags:
          type: array
          description: Tags can be used to group charts for enabling/disabling together
          items:
            type: string
        version:
          type: string
          description: |-
            Version is the version (range) of this chart.

            A lock file will always produce a single version, while a dependency
            may contain a semantic version range.
    release.File:
      type: object
      properties:
        data:
          type: array
          description: Data is the template as byte data.
          items:
            type: integer
        name:
          type: string
          description: Name is the path-like name of the template.
    release.Hook:
      type: object
      properties:
        delete_policies:
          type: array
          description: DeletePolicies are the policies that indicate when to delete
            the hook
          items:
            type: string
        events:
          type: array
          description: Events are the events that this hook fires on.
          items:
            type: string
        kind:
          type: string
          description: Kind is the Kubernetes kind.
        last_run:
          "$ref": "#/components/schemas/release.HookExecution"
        manifest:
          type: string
          description: Manifest is the manifest contents.
        name:
          type: string
        path:
          type: string
          description: Path is the chart-relative path to the template.
        weight:
          type: integer
          description: Weight indicates the sort order for execution among similar
            Hook type
    release.HookExecution:
      type: object
      properties:
        completed_at:
          type: string
          description: CompletedAt indicates the date/time this hook was completed.
        phase:
          type: string
          description: Phase indicates whether the hook completed successfully
        started_at:
          type: string
          description: StartedAt indicates the date/time this hook was started
    release.Lock:
      type: object
      properties:
        dependencies:
          type: array
          description: Dependencies is the list of dependencies that this lock file
            has locked.
          items:
            "$ref": "#/components/schemas/release.Dependency"
        digest:
          type: string
          description: Digest is a hash of the dependencies in Chart.yaml.
        generated:
          type: string
          description: Generated is the date the lock file was last generated.
    release.Maintainer:
      type: object
      properties:
        email:
          type: string
          description: Email is an optional email address to contact the named maintainer
        name:
          type: string
          description: Name is a user name or organization name
        url:
          type: string
          description: URL is an optional URL to an address for the named maintainer
    release.Metadata:
      type: object
      properties:
        annotations:
          type: object
          additionalProperties:
            type: string
          description: |-
            Annotations are additional mappings uninterpreted by Helm,
            made available for inspection by other applications.
        apiVersion:
          type: string
          description: The API Version of this chart. Required.
        appVersion:
          type: string
          description: The version of the application enclosed inside of this chart.
        condition:
          type: string
          description: The condition to check to enable chart
        dependencies:
          type: array
          description: Dependencies are a list of dependencies for a chart.
          items:
            "$ref": "#/components/schemas/release.Dependency"
        deprecated:
          type: boolean
          description: Whether or not this chart is deprecated
        description:
          type: string
          description: A one-sentence description of the chart
        home:
          type: string
          description: The URL to a relevant project page, git repo, or contact person
        icon:
          type: string
          description: The URL to an icon file.
        keywords:
          type: array
          description: A list of string keywords
          items:
            type: string
        kubeVersion:
          type: string
          description: KubeVersion is a SemVer constraint specifying the version of
            Kubernetes required.
        maintainers:
          type: array
          description: A list of name and URL/email address combinations for the maintainer(s)
          items:
            "$ref": "#/components/schemas/release.Maintainer"
        name:
          type: string
          description: The name of the chart. Required.
        sources:
          type: array
          description: Source is the URL to the source code of this chart
          items:
            type: string
        tags:
          type: string
          description: The tags to check to enable chart
        type:
          type: string
          description: 'Specifies the chart type: application or library'
        version:
          type: string
          description: A SemVer 2 conformant version string of the chart. Required.
    release.Release:
      type: object
      properties:
        chart:
          "$ref": "#/components/schemas/release.Chart"
        config:
          type: object
          additionalProperties: true
          description: |-
            Config is the set of extra Values added to the chart.
            These values override the default values inside of the chart.
        hooks:
          type: array
          description: Hooks are all of the hooks declared for this release.
          items:
            "$ref": "#/components/schemas/release.Hook"
        manifest:
          type: string
          description: Manifest is the string representation of the rendered template.
        name:
          type: string
          description: Name is the name of the release
        namespace:
          type: string
          description: Namespace is the kubernetes namespace of the release.
        version:
          type: integer
          description: Version is an int which represents the revision of the release.
    release.ReleaseElement:
      type: object
      properties:
        app_version:
          type: string
        chart:
          type: string
        name:
          type: string
        namespace:
          type: string
        revision:
          type: string
        status:
          type: string
        updated:
          type: string
    resource.Quantity:
      type: object
      properties:
        Format:
          type: string
    resourcecontrols.resourceControlCreatePayload:
      required:
        - resourceID
        - type
      type: object
      properties:
        administratorsOnly:
          type: boolean
          description: Permit access to resource only to admins
          example: true
        public:
          type: boolean
          description: Permit access to the associated resource to any user
          example: true
        resourceID:
          type: string
          example: 617c5f22bb9b023d6daab7cba43a57576f83492867bc767d1c59416b065e5f08
        subResourceIDs:
          type: array
          description: List of Docker resources that will inherit this access control
          example:
            - 617c5f22bb9b023d6daab7cba43a57576f83492867bc767d1c59416b065e5f08
          items:
            type: string
        teams:
          type: array
          description: List of team identifiers with access to the associated resource
          example:
            - 56
            - 7
          items:
            type: integer
        type:
          type: integer
          description: |-
            Type of Resource. Valid values are: 1 - container, 2 - service
            3 - volume, 4 - network, 5 - secret, 6 - stack, 7 - config, 8 - custom template, 9 - azure-container-group
          example: 1
        users:
          type: array
          description: List of user identifiers with access to the associated resource
          example:
            - 1
            - 4
          items:
            type: integer
    resourcecontrols.resourceControlUpdatePayload:
      type: object
      properties:
        administratorsOnly:
          type: boolean
          description: Permit access to resource only to admins
          example: true
        public:
          type: boolean
          description: Permit access to the associated resource to any user
          example: true
        teams:
          type: array
          description: List of team identifiers with access to the associated resource
          example:
            - 7
          items:
            type: integer
        users:
          type: array
          description: List of user identifiers with access to the associated resource
          example:
            - 4
          items:
            type: integer
    settings.publicSettingsResponse:
      type: object
      properties:
        AuthenticationMethod:
          type: integer
          description: 'Active authentication method for the Portainer instance. Valid
            values are: 1 for internal, 2 for LDAP, or 3 for oauth'
          example: 1
        EnableEdgeComputeFeatures:
          type: boolean
          description: Whether edge compute features are enabled
          example: true
        EnableTelemetry:
          type: boolean
          description: Whether telemetry is enabled
          example: true
        Features:
          type: object
          additionalProperties:
            type: boolean
          description: Supported feature flags
        GlobalDeploymentOptions:
          "$ref": "#/components/schemas/portainer.GlobalDeploymentOptions"
        IsDockerDesktopExtension:
          type: boolean
          example: false
        LogoURL:
          type: string
          description: URL to a logo that will be displayed on the login page as well
            as on top of the sidebar. Will use default Portainer logo when value is
            empty string
          example: https://mycompany.mydomain.tld/logo.png
        OAuthLoginURI:
          type: string
          description: The URL used for oauth login
          example: https://gitlab.com/oauth
        OAuthLogoutURI:
          type: string
          description: The URL used for oauth logout
          example: https://gitlab.com/oauth/logout
        RequiredPasswordLength:
          type: integer
          description: The minimum required length for a password of any user when
            using internal auth mode
          example: 1
        ShowKomposeBuildOption:
          type: boolean
          description: Show the Kompose build option (discontinued in 2.18)
          example: false
        TeamSync:
          type: boolean
          description: Whether team sync is enabled
          example: true
        edge:
          "$ref": "#/components/schemas/settings.publicSettingsResponse_edge"
        isAMTEnabled:
          type: boolean
          description: Whether AMT is enabled
        isFDOEnabled:
          type: boolean
          description: Whether FDO is enabled
        kubeconfigExpiry:
          type: string
          description: The expiry of a Kubeconfig
          example: 24h
          default: '0'
    settings.settingsUpdatePayload:
      type: object
      properties:
        EdgePortainerURL:
          type: string
          description: EdgePortainerURL is the URL that is exposed to edge agents
        ShowKomposeBuildOption:
          type: boolean
          description: Show the Kompose build option (discontinued in 2.18)
          example: false
        authenticationMethod:
          type: integer
          description: 'Active authentication method for the Portainer instance. Valid
            values are: 1 for internal, 2 for LDAP, or 3 for oauth'
          example: 1
        blackListedLabels:
          type: array
          description: A list of label name & value that will be used to hide containers
            when querying containers
          items:
            "$ref": "#/components/schemas/portainer.Pair"
        edgeAgentCheckinInterval:
          type: integer
          example: 5
        enableEdgeComputeFeatures:
          type: boolean
          description: Whether edge compute features are enabled
          example: true
        enableTelemetry:
          type: boolean
          description: Whether telemetry is enabled
          example: false
        enforceEdgeID:
          type: boolean
          description: EnforceEdgeID makes Portainer store the Edge ID instead of
            accepting anyone
          example: false
        globalDeploymentOptions:
          "$ref": "#/components/schemas/portainer.GlobalDeploymentOptions"
        helmRepositoryURL:
          type: string
          description: Helm repository URL
          example: https://charts.bitnami.com/bitnami
        internalAuthSettings:
          "$ref": "#/components/schemas/portainer.InternalAuthSettings"
        kubeconfigExpiry:
          type: string
          description: The expiry of a Kubeconfig
          example: 24h
          default: '0'
        kubectlShellImage:
          type: string
          description: Kubectl Shell Image
          example: portainer/kubectl-shell:latest
        ldapsettings:
          "$ref": "#/components/schemas/portainer.LDAPSettings"
        logoURL:
          type: string
          description: URL to a logo that will be displayed on the login page as well
            as on top of the sidebar. Will use default Portainer logo when value is
            empty string
          example: https://mycompany.mydomain.tld/logo.png
        oauthSettings:
          "$ref": "#/components/schemas/portainer.OAuthSettings"
        snapshotInterval:
          type: string
          description: The interval in which environment(endpoint) snapshots are created
          example: 5m
        templatesURL:
          type: string
          description: URL to the templates that will be displayed in the UI when
            navigating to App Templates
          example: https://raw.githubusercontent.com/portainer/templates/master/templates.json
        trustOnFirstConnect:
          type: boolean
          description: TrustOnFirstConnect makes Portainer accepting edge agent connection
            by default
          example: false
        userSessionTimeout:
          type: string
          description: The duration of a user session
          example: 5m
    ssl.sslUpdatePayload:
      type: object
      properties:
        cert:
          type: string
          description: SSL Certificates
        httpenabled:
          type: boolean
        key:
          type: string
    stacks.composeStackFromFileContentPayload:
      required:
        - name
        - stackFileContent
      type: object
      properties:
        env:
          type: array
          description: A list of environment variables used during stack deployment
          items:
            "$ref": "#/components/schemas/portainer.Pair"
        fromAppTemplate:
          type: boolean
          description: Whether the stack is from a app template
          example: false
        name:
          type: string
          description: Name of the stack
          example: myStack
        stackFileContent:
          type: string
          description: Content of the Stack file
          example: |-
            version: 3
             services:
             web:
             image:nginx
    stacks.composeStackFromGitRepositoryPayload:
      required:
        - name
        - repositoryURL
      type: object
      properties:
        additionalFiles:
          type: array
          description: Applicable when deploying with multiple stack files
          example:
            - "[nz.compose.yml"
            - " uat.compose.yml]"
          items:
            type: string
        autoUpdate:
          "$ref": "#/components/schemas/portainer.AutoUpdateSettings"
        composeFile:
          type: string
          description: Path to the Stack file inside the Git repository
          example: docker-compose.yml
          default: docker-compose.yml
        env:
          type: array
          description: A list of environment variables used during stack deployment
          items:
            "$ref": "#/components/schemas/portainer.Pair"
        fromAppTemplate:
          type: boolean
          description: Whether the stack is from a app template
          example: false
        name:
          type: string
          description: Name of the stack
          example: myStack
        repositoryAuthentication:
          type: boolean
          description: Use basic authentication to clone the Git repository
          example: true
        repositoryPassword:
          type: string
          description: Password used in basic authentication. Required when RepositoryAuthentication
            is true.
          example: myGitPassword
        repositoryReferenceName:
          type: string
          description: Reference name of a Git repository hosting the Stack file
          example: refs/heads/master
        repositoryURL:
          type: string
          description: URL of a Git repository hosting the Stack file
          example: https://github.com/openfaas/faas
        repositoryUsername:
          type: string
          description: Username used in basic authentication. Required when RepositoryAuthentication
            is true.
          example: myGitUsername
        tlsskipVerify:
          type: boolean
          description: TLSSkipVerify skips SSL verification when cloning the Git repository
          example: false
    stacks.kubernetesGitDeploymentPayload:
      type: object
      properties:
        additionalFiles:
          type: array
          items:
            type: string
        autoUpdate:
          "$ref": "#/components/schemas/portainer.AutoUpdateSettings"
        composeFormat:
          type: boolean
        manifestFile:
          type: string
        namespace:
          type: string
        repositoryAuthentication:
          type: boolean
        repositoryPassword:
          type: string
        repositoryReferenceName:
          type: string
        repositoryURL:
          type: string
        repositoryUsername:
          type: string
        stackName:
          type: string
        tlsskipVerify:
          type: boolean
          description: TLSSkipVerify skips SSL verification when cloning the Git repository
          example: false
    stacks.kubernetesManifestURLDeploymentPayload:
      type: object
      properties:
        composeFormat:
          type: boolean
        manifestURL:
          type: string
        namespace:
          type: string
        stackName:
          type: string
    stacks.kubernetesStringDeploymentPayload:
      type: object
      properties:
        composeFormat:
          type: boolean
        fromAppTemplate:
          type: boolean
          description: Whether the stack is from a app template
          example: false
        namespace:
          type: string
        stackFileContent:
          type: string
        stackName:
          type: string
    stacks.stackFileResponse:
      type: object
      properties:
        StackFileContent:
          type: string
          description: Content of the Stack file
          example: |-
            version: 3
             services:
             web:
             image:nginx
    stacks.stackGitRedployPayload:
      type: object
      properties:
        env:
          type: array
          items:
            "$ref": "#/components/schemas/portainer.Pair"
        prune:
          type: boolean
        pullImage:
          type: boolean
          description: Force a pulling to current image with the original tag though
            the image is already the latest
          example: false
        repositoryAuthentication:
          type: boolean
        repositoryPassword:
          type: string
        repositoryReferenceName:
          type: string
        repositoryUsername:
          type: string
        stackName:
          type: string
    stacks.stackGitUpdatePayload:
      type: object
      properties:
        autoUpdate:
          "$ref": "#/components/schemas/portainer.AutoUpdateSettings"
        env:
          type: array
          items:
            "$ref": "#/components/schemas/portainer.Pair"
        prune:
          type: boolean
        repositoryAuthentication:
          type: boolean
        repositoryPassword:
          type: string
        repositoryReferenceName:
          type: string
        repositoryUsername:
          type: string
        tlsskipVerify:
          type: boolean
    stacks.stackMigratePayload:
      required:
        - endpointID
      type: object
      properties:
        endpointID:
          type: integer
          description: Environment(Endpoint) identifier of the target environment(endpoint)
            where the stack will be relocated
          example: 2
        name:
          type: string
          description: If provided will rename the migrated stack
          example: new-stack
        swarmID:
          type: string
          description: Swarm cluster identifier, must match the identifier of the
            cluster where the stack will be relocated
          example: jpofkc0i9uo9wtx1zesuk649w
    stacks.swarmStackFromFileContentPayload:
      required:
        - name
        - stackFileContent
        - swarmID
      type: object
      properties:
        env:
          type: array
          description: A list of environment variables used during stack deployment
          items:
            "$ref": "#/components/schemas/portainer.Pair"
        fromAppTemplate:
          type: boolean
          description: Whether the stack is from a app template
          example: false
        name:
          type: string
          description: Name of the stack
          example: myStack
        stackFileContent:
          type: string
          description: Content of the Stack file
          example: |-
            version: 3
             services:
             web:
             image:nginx
        swarmID:
          type: string
          description: Swarm cluster identifier
          example: jpofkc0i9uo9wtx1zesuk649w
    stacks.swarmStackFromGitRepositoryPayload:
      required:
        - name
        - repositoryURL
        - swarmID
      type: object
      properties:
        additionalFiles:
          type: array
          description: Applicable when deploying with multiple stack files
          example:
            - "[nz.compose.yml"
            - " uat.compose.yml]"
          items:
            type: string
        autoUpdate:
          "$ref": "#/components/schemas/portainer.AutoUpdateSettings"
        composeFile:
          type: string
          description: Path to the Stack file inside the Git repository
          example: docker-compose.yml
          default: docker-compose.yml
        env:
          type: array
          description: A list of environment variables used during stack deployment
          items:
            "$ref": "#/components/schemas/portainer.Pair"
        fromAppTemplate:
          type: boolean
          description: Whether the stack is from a app template
          example: false
        name:
          type: string
          description: Name of the stack
          example: myStack
        repositoryAuthentication:
          type: boolean
          description: Use basic authentication to clone the Git repository
          example: true
        repositoryPassword:
          type: string
          description: Password used in basic authentication. Required when RepositoryAuthentication
            is true.
          example: myGitPassword
        repositoryReferenceName:
          type: string
          description: Reference name of a Git repository hosting the Stack file
          example: refs/heads/master
        repositoryURL:
          type: string
          description: URL of a Git repository hosting the Stack file
          example: https://github.com/openfaas/faas
        repositoryUsername:
          type: string
          description: Username used in basic authentication. Required when RepositoryAuthentication
            is true.
          example: myGitUsername
        swarmID:
          type: string
          description: Swarm cluster identifier
          example: jpofkc0i9uo9wtx1zesuk649w
        tlsskipVerify:
          type: boolean
          description: TLSSkipVerify skips SSL verification when cloning the Git repository
          example: false
    stacks.updateSwarmStackPayload:
      type: object
      properties:
        env:
          type: array
          description: A list of environment(endpoint) variables used during stack
            deployment
          items:
            "$ref": "#/components/schemas/portainer.Pair"
        prune:
          type: boolean
          description: Prune services that are no longer referenced (only available
            for Swarm stacks)
          example: true
        pullImage:
          type: boolean
          description: Force a pulling to current image with the original tag though
            the image is already the latest
          example: false
        stackFileContent:
          type: string
          description: New content of the Stack file
          example: |-
            version: 3
             services:
             web:
             image:nginx
    swarm.ServiceUpdateResponse:
      type: object
      properties:
        Warnings:
          type: array
          description: Optional warning messages
          items:
            type: string
    system.BuildInfo:
      type: object
      properties:
        buildNumber:
          type: string
        env:
          type: array
          items:
            type: string
        gitCommit:
          type: string
        goVersion:
          type: string
        imageTag:
          type: string
        nodejsVersion:
          type: string
        webpackVersion:
          type: string
        yarnVersion:
          type: string
    system.nodesCountResponse:
      type: object
      properties:
        nodes:
          type: integer
    system.status:
      type: object
      properties:
        Version:
          type: string
          description: Portainer API version
          example: 2.0.0
        demoEnvironment:
          "$ref": "#/components/schemas/demo.EnvironmentDetails"
        instanceID:
          type: string
          description: Server Instance ID
          example: 299ab403-70a8-4c05-92f7-bf7a994d50df
    system.systemInfoResponse:
      type: object
      properties:
        agents:
          type: integer
        edgeAgents:
          type: integer
        platform:
          type: string
    system.versionResponse:
      type: object
      properties:
        LatestVersion:
          type: string
          description: The latest version available
          example: 2.0.0
        ServerEdition:
          type: string
          example: CE/EE
        UpdateAvailable:
          type: boolean
          description: Whether portainer has an update available
          example: false
        build:
          "$ref": "#/components/schemas/system.BuildInfo"
        databaseVersion:
          type: string
        serverVersion:
          type: string
    tags.tagCreatePayload:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          example: org/acme
    teammemberships.teamMembershipCreatePayload:
      required:
        - role
        - teamID
        - userID
      type: object
      properties:
        role:
          type: integer
          description: Role for the user inside the team (1 for leader and 2 for regular
            member)
          example: 1
        teamID:
          type: integer
          description: Team identifier
          example: 1
        userID:
          type: integer
          description: User identifier
          example: 1
    teammemberships.teamMembershipUpdatePayload:
      required:
        - role
        - teamID
        - userID
      type: object
      properties:
        role:
          type: integer
          description: Role for the user inside the team (1 for leader and 2 for regular
            member)
          example: 1
        teamID:
          type: integer
          description: Team identifier
          example: 1
        userID:
          type: integer
          description: User identifier
          example: 1
    teams.teamCreatePayload:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: Name
          example: developers
        teamLeaders:
          type: array
          description: TeamLeaders
          example:
            - 3
            - 5
          items:
            type: integer
            description: User Identifier
            example: 1
    teams.teamUpdatePayload:
      type: object
      properties:
        name:
          type: string
          description: Name
          example: developers
    templates.filePayload:
      required:
        - composeFilePathInRepository
        - repositoryURL
      type: object
      properties:
        composeFilePathInRepository:
          type: string
          description: Path to the file inside the git repository
          example: "./subfolder/docker-compose.yml"
        repositoryURL:
          type: string
          description: URL of a git repository where the file is stored
          example: https://github.com/portainer/portainer-compose
    templates.fileResponse:
      type: object
      properties:
        fileContent:
          type: string
          description: The requested file content
          example: version:2
    templates.listResponse:
      type: object
      properties:
        templates:
          type: array
          items:
            "$ref": "#/components/schemas/portainer.Template"
        version:
          type: string
    users.accessTokenResponse:
      type: object
      properties:
        apiKey:
          "$ref": "#/components/schemas/portainer.APIKey"
        rawAPIKey:
          type: string
    users.addHelmRepoUrlPayload:
      type: object
      properties:
        url:
          type: string
    users.adminInitPayload:
      required:
        - password
        - username
      type: object
      properties:
        password:
          type: string
          description: Password for the admin user
          example: admin-password
        username:
          type: string
          description: Username for the admin user
          example: admin
    users.helmUserRepositoryResponse:
      type: object
      properties:
        GlobalRepository:
          type: string
        UserRepositories:
          type: array
          items:
            "$ref": "#/components/schemas/portainer.HelmUserRepository"
    users.themePayload:
      type: object
      properties:
        color:
          type: string
          description: Color represents the color theme of the UI
          example: dark
          enum:
            - dark
            - light
            - highcontrast
            - auto
    users.userAccessTokenCreatePayload:
      required:
        - description
        - password
      type: object
      properties:
        description:
          type: string
          example: github-api-key
        password:
          type: string
          example: password
    users.userCreatePayload:
      required:
        - password
        - role
        - username
      type: object
      properties:
        password:
          type: string
          example: cg9Wgky3
        role:
          type: integer
          description: User role (1 for administrator account and 2 for regular account)
          example: 2
        username:
          type: string
          example: bob
    users.userUpdatePasswordPayload:
      required:
        - newPassword
        - password
      type: object
      properties:
        newPassword:
          type: string
          description: New Password
          example: new_passwd
        password:
          type: string
          description: Current Password
          example: passwd
    users.userUpdatePayload:
      required:
        - newPassword
        - password
        - role
        - useCache
        - username
      type: object
      properties:
        newPassword:
          type: string
          example: asfj2emv
        password:
          type: string
          example: cg9Wgky3
        role:
          type: integer
          description: User role (1 for administrator account and 2 for regular account)
          example: 2
        theme:
          "$ref": "#/components/schemas/users.themePayload"
        useCache:
          type: boolean
          example: true
        username:
          type: string
          example: bob
    v1.Duration:
      type: object
      properties:
        time.Duration:
          type: integer
    v1.FieldsV1:
      type: object
    v1.ManagedFieldsEntry:
      type: object
      properties:
        apiVersion:
          type: string
          description: |-
            APIVersion defines the version of this resource that this field set
            applies to. The format is "group/version" just like the top-level
            APIVersion field. It is necessary to track the version of a field
            set because it cannot be automatically converted.
        fieldsType:
          type: string
          description: |-
            FieldsType is the discriminator for the different fields format and version.
            There is currently only one possible value: "FieldsV1"
        fieldsV1:
          "$ref": "#/components/schemas/v1.FieldsV1"
        manager:
          type: string
          description: Manager is an identifier of the workflow managing these fields.
        operation:
          type: string
          description: |-
            Operation is the type of operation which lead to this ManagedFieldsEntry being created.
            The only valid values for this field are 'Apply' and 'Update'.
        subresource:
          type: string
          description: |-
            Subresource is the name of the subresource used to update that object, or
            empty string if the object was updated through the main resource. The
            value of this field is used to distinguish between managers, even if they
            share the same name. For example, a status update will be distinct from a
            regular update using the same manager name.
            Note that the APIVersion field is not related to the Subresource field and
            it always corresponds to the version of the main resource.
        time:
          type: string
          description: |-
            Time is the timestamp of when the ManagedFields entry was added. The
            timestamp will also be updated if a field is added, the manager
            changes any of the owned fields value or removes a field. The
            timestamp does not update when a field is removed from the entry
            because another manager took it over.
            +optional
    v1.OwnerReference:
      type: object
      properties:
        apiVersion:
          type: string
          description: API version of the referent.
        blockOwnerDeletion:
          type: boolean
          description: |-
            If true, AND if the owner has the "foregroundDeletion" finalizer, then
            the owner cannot be deleted from the key-value store until this
            reference is removed.
            See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion
            for how the garbage collector interacts with this field and enforces the foreground deletion.
            Defaults to false.
            To set this field, a user needs "delete" permission of the owner,
            otherwise 422 (Unprocessable Entity) will be returned.
            +optional
        controller:
          type: boolean
          description: |-
            If true, this reference points to the managing controller.
            +optional
        kind:
          type: string
          description: |-
            Kind of the referent.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
        name:
          type: string
          description: |-
            Name of the referent.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
        uid:
          type: string
          description: |-
            UID of the referent.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
    v1.ResourceList:
      type: object
      additionalProperties:
        "$ref": "#/components/schemas/resource.Quantity"
    v1beta1.ContainerMetrics:
      type: object
      properties:
        name:
          type: string
          description: Container name corresponding to the one from pod.spec.containers.
        usage:
          "$ref": "#/components/schemas/v1.ResourceList"
    v1beta1.NodeMetrics:
      type: object
      properties:
        annotations:
          type: object
          additionalProperties:
            type: string
          description: |-
            Annotations is an unstructured key value map stored with a resource that may be
            set by external tools to store and retrieve arbitrary metadata. They are not
            queryable and should be preserved when modifying objects.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
            +optional
        apiVersion:
          type: string
          description: |-
            APIVersion defines the versioned schema of this representation of an object.
            Servers should convert recognized schemas to the latest internal value, and
            may reject unrecognized values.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            +optional
        creationTimestamp:
          type: string
          description: |-
            CreationTimestamp is a timestamp representing the server time when this object was
            created. It is not guaranteed to be set in happens-before order across separate operations.
            Clients may not set this value. It is represented in RFC3339 form and is in UTC.

            Populated by the system.
            Read-only.
            Null for lists.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
            +optional
        deletionGracePeriodSeconds:
          type: integer
          description: |-
            Number of seconds allowed for this object to gracefully terminate before
            it will be removed from the system. Only set when deletionTimestamp is also set.
            May only be shortened.
            Read-only.
            +optional
        deletionTimestamp:
          type: string
          description: |-
            DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
            field is set by the server when a graceful deletion is requested by the user, and is not
            directly settable by a client. The resource is expected to be deleted (no longer visible
            from resource lists, and not reachable by name) after the time in this field, once the
            finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
            Once the deletionTimestamp is set, this value may not be unset or be set further into the
            future, although it may be shortened or the resource may be deleted prior to this time.
            For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
            by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
            the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
            remove the pod from the API. In the presence of network partitions, this object may still
            exist after this timestamp, until an administrator or automated process can determine the
            resource is fully terminated.
            If not set, graceful deletion of the object has not been requested.

            Populated by the system when a graceful deletion is requested.
            Read-only.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
            +optional
        finalizers:
          type: array
          description: |-
            Must be empty before the object is deleted from the registry. Each entry
            is an identifier for the responsible component that will remove the entry
            from the list. If the deletionTimestamp of the object is non-nil, entries
            in this list can only be removed.
            Finalizers may be processed and removed in any order.  Order is NOT enforced
            because it introduces significant risk of stuck finalizers.
            finalizers is a shared field, any actor with permission can reorder it.
            If the finalizer list is processed in order, then this can lead to a situation
            in which the component responsible for the first finalizer in the list is
            waiting for a signal (field value, external system, or other) produced by a
            component responsible for a finalizer later in the list, resulting in a deadlock.
            Without enforced ordering finalizers are free to order amongst themselves and
            are not vulnerable to ordering changes in the list.
            +optional
            +patchStrategy=merge
          items:
            type: string
        generateName:
          type: string
          description: |-
            GenerateName is an optional prefix, used by the server, to generate a unique
            name ONLY IF the Name field has not been provided.
            If this field is used, the name returned to the client will be different
            than the name passed. This value will also be combined with a unique suffix.
            The provided value has the same validation rules as the Name field,
            and may be truncated by the length of the suffix required to make the value
            unique on the server.

            If this field is specified and the generated name exists, the server will return a 409.

            Applied only if Name is not specified.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
            +optional
        generation:
          type: integer
          description: |-
            A sequence number representing a specific generation of the desired state.
            Populated by the system. Read-only.
            +optional
        kind:
          type: string
          description: |-
            Kind is a string value representing the REST resource this object represents.
            Servers may infer this from the endpoint the client submits requests to.
            Cannot be updated.
            In CamelCase.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            +optional
        labels:
          type: object
          additionalProperties:
            type: string
          description: |-
            Map of string keys and values that can be used to organize and categorize
            (scope and select) objects. May match selectors of replication controllers
            and services.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
            +optional
        managedFields:
          type: array
          description: |-
            ManagedFields maps workflow-id and version to the set of fields
            that are managed by that workflow. This is mostly for internal
            housekeeping, and users typically shouldn't need to set or
            understand this field. A workflow can be the user's name, a
            controller's name, or the name of a specific apply path like
            "ci-cd". The set of fields is always in the version that the
            workflow used when modifying the object.

            +optional
          items:
            "$ref": "#/components/schemas/v1.ManagedFieldsEntry"
        name:
          type: string
          description: |-
            Name must be unique within a namespace. Is required when creating resources, although
            some resources may allow a client to request the generation of an appropriate name
            automatically. Name is primarily intended for creation idempotence and configuration
            definition.
            Cannot be updated.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
            +optional
        namespace:
          type: string
          description: |-
            Namespace defines the space within which each name must be unique. An empty namespace is
            equivalent to the "default" namespace, but "default" is the canonical representation.
            Not all objects are required to be scoped to a namespace - the value of this field for
            those objects will be empty.

            Must be a DNS_LABEL.
            Cannot be updated.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces
            +optional
        ownerReferences:
          type: array
          description: |-
            List of objects depended by this object. If ALL objects in the list have
            been deleted, this object will be garbage collected. If this object is managed by a controller,
            then an entry in this list will point to this controller, with the controller field set to true.
            There cannot be more than one managing controller.
            +optional
            +patchMergeKey=uid
            +patchStrategy=merge
          items:
            "$ref": "#/components/schemas/v1.OwnerReference"
        resourceVersion:
          type: string
          description: |-
            An opaque value that represents the internal version of this object that can
            be used by clients to determine when objects have changed. May be used for optimistic
            concurrency, change detection, and the watch operation on a resource or set of resources.
            Clients must treat these values as opaque and passed unmodified back to the server.
            They may only be valid for a particular resource or set of resources.

            Populated by the system.
            Read-only.
            Value must be treated as opaque by clients and .
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
            +optional
        selfLink:
          type: string
          description: |-
            Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.
            +optional
        timestamp:
          type: string
          description: |-
            The following fields define time interval from which metrics were
            collected from the interval [Timestamp-Window, Timestamp].
        uid:
          type: string
          description: |-
            UID is the unique in time and space value for this object. It is typically generated by
            the server on successful creation of a resource and is not allowed to change on PUT
            operations.

            Populated by the system.
            Read-only.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
            +optional
        usage:
          "$ref": "#/components/schemas/v1.ResourceList"
        window:
          "$ref": "#/components/schemas/v1.Duration"
    v1beta1.NodeMetricsList:
      type: object
      properties:
        apiVersion:
          type: string
          description: |-
            APIVersion defines the versioned schema of this representation of an object.
            Servers should convert recognized schemas to the latest internal value, and
            may reject unrecognized values.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            +optional
        continue:
          type: string
          description: |-
            continue may be set if the user set a limit on the number of items returned, and indicates that
            the server has more data available. The value is opaque and may be used to issue another request
            to the endpoint that served this list to retrieve the next set of available objects. Continuing a
            consistent list may not be possible if the server configuration has changed or more than a few
            minutes have passed. The resourceVersion field returned when using this continue value will be
            identical to the value in the first response, unless you have received this token from an error
            message.
        items:
          type: array
          description: List of node metrics.
          items:
            "$ref": "#/components/schemas/v1beta1.NodeMetrics"
        kind:
          type: string
          description: |-
            Kind is a string value representing the REST resource this object represents.
            Servers may infer this from the endpoint the client submits requests to.
            Cannot be updated.
            In CamelCase.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            +optional
        remainingItemCount:
          type: integer
          description: |-
            remainingItemCount is the number of subsequent items in the list which are not included in this
            list response. If the list request contained label or field selectors, then the number of
            remaining items is unknown and the field will be left unset and omitted during serialization.
            If the list is complete (either because it is not chunking or because this is the last chunk),
            then there are no more remaining items and this field will be left unset and omitted during
            serialization.
            Servers older than v1.15 do not set this field.
            The intended use of the remainingItemCount is *estimating* the size of a collection. Clients
            should not rely on the remainingItemCount to be set or to be exact.
            +optional
        resourceVersion:
          type: string
          description: |-
            String that identifies the server's internal version of this object that
            can be used by clients to determine when objects have changed.
            Value must be treated as opaque by clients and passed unmodified back to the server.
            Populated by the system.
            Read-only.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
            +optional
        selfLink:
          type: string
          description: |-
            Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.
            +optional
    v1beta1.PodMetrics:
      type: object
      properties:
        annotations:
          type: object
          additionalProperties:
            type: string
          description: |-
            Annotations is an unstructured key value map stored with a resource that may be
            set by external tools to store and retrieve arbitrary metadata. They are not
            queryable and should be preserved when modifying objects.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
            +optional
        apiVersion:
          type: string
          description: |-
            APIVersion defines the versioned schema of this representation of an object.
            Servers should convert recognized schemas to the latest internal value, and
            may reject unrecognized values.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            +optional
        containers:
          type: array
          description: Metrics for all containers are collected within the same time
            window.
          items:
            "$ref": "#/components/schemas/v1beta1.ContainerMetrics"
        creationTimestamp:
          type: string
          description: |-
            CreationTimestamp is a timestamp representing the server time when this object was
            created. It is not guaranteed to be set in happens-before order across separate operations.
            Clients may not set this value. It is represented in RFC3339 form and is in UTC.

            Populated by the system.
            Read-only.
            Null for lists.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
            +optional
        deletionGracePeriodSeconds:
          type: integer
          description: |-
            Number of seconds allowed for this object to gracefully terminate before
            it will be removed from the system. Only set when deletionTimestamp is also set.
            May only be shortened.
            Read-only.
            +optional
        deletionTimestamp:
          type: string
          description: |-
            DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
            field is set by the server when a graceful deletion is requested by the user, and is not
            directly settable by a client. The resource is expected to be deleted (no longer visible
            from resource lists, and not reachable by name) after the time in this field, once the
            finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
            Once the deletionTimestamp is set, this value may not be unset or be set further into the
            future, although it may be shortened or the resource may be deleted prior to this time.
            For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
            by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
            the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
            remove the pod from the API. In the presence of network partitions, this object may still
            exist after this timestamp, until an administrator or automated process can determine the
            resource is fully terminated.
            If not set, graceful deletion of the object has not been requested.

            Populated by the system when a graceful deletion is requested.
            Read-only.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
            +optional
        finalizers:
          type: array
          description: |-
            Must be empty before the object is deleted from the registry. Each entry
            is an identifier for the responsible component that will remove the entry
            from the list. If the deletionTimestamp of the object is non-nil, entries
            in this list can only be removed.
            Finalizers may be processed and removed in any order.  Order is NOT enforced
            because it introduces significant risk of stuck finalizers.
            finalizers is a shared field, any actor with permission can reorder it.
            If the finalizer list is processed in order, then this can lead to a situation
            in which the component responsible for the first finalizer in the list is
            waiting for a signal (field value, external system, or other) produced by a
            component responsible for a finalizer later in the list, resulting in a deadlock.
            Without enforced ordering finalizers are free to order amongst themselves and
            are not vulnerable to ordering changes in the list.
            +optional
            +patchStrategy=merge
          items:
            type: string
        generateName:
          type: string
          description: |-
            GenerateName is an optional prefix, used by the server, to generate a unique
            name ONLY IF the Name field has not been provided.
            If this field is used, the name returned to the client will be different
            than the name passed. This value will also be combined with a unique suffix.
            The provided value has the same validation rules as the Name field,
            and may be truncated by the length of the suffix required to make the value
            unique on the server.

            If this field is specified and the generated name exists, the server will return a 409.

            Applied only if Name is not specified.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
            +optional
        generation:
          type: integer
          description: |-
            A sequence number representing a specific generation of the desired state.
            Populated by the system. Read-only.
            +optional
        kind:
          type: string
          description: |-
            Kind is a string value representing the REST resource this object represents.
            Servers may infer this from the endpoint the client submits requests to.
            Cannot be updated.
            In CamelCase.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            +optional
        labels:
          type: object
          additionalProperties:
            type: string
          description: |-
            Map of string keys and values that can be used to organize and categorize
            (scope and select) objects. May match selectors of replication controllers
            and services.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
            +optional
        managedFields:
          type: array
          description: |-
            ManagedFields maps workflow-id and version to the set of fields
            that are managed by that workflow. This is mostly for internal
            housekeeping, and users typically shouldn't need to set or
            understand this field. A workflow can be the user's name, a
            controller's name, or the name of a specific apply path like
            "ci-cd". The set of fields is always in the version that the
            workflow used when modifying the object.

            +optional
          items:
            "$ref": "#/components/schemas/v1.ManagedFieldsEntry"
        name:
          type: string
          description: |-
            Name must be unique within a namespace. Is required when creating resources, although
            some resources may allow a client to request the generation of an appropriate name
            automatically. Name is primarily intended for creation idempotence and configuration
            definition.
            Cannot be updated.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
            +optional
        namespace:
          type: string
          description: |-
            Namespace defines the space within which each name must be unique. An empty namespace is
            equivalent to the "default" namespace, but "default" is the canonical representation.
            Not all objects are required to be scoped to a namespace - the value of this field for
            those objects will be empty.

            Must be a DNS_LABEL.
            Cannot be updated.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces
            +optional
        ownerReferences:
          type: array
          description: |-
            List of objects depended by this object. If ALL objects in the list have
            been deleted, this object will be garbage collected. If this object is managed by a controller,
            then an entry in this list will point to this controller, with the controller field set to true.
            There cannot be more than one managing controller.
            +optional
            +patchMergeKey=uid
            +patchStrategy=merge
          items:
            "$ref": "#/components/schemas/v1.OwnerReference"
        resourceVersion:
          type: string
          description: |-
            An opaque value that represents the internal version of this object that can
            be used by clients to determine when objects have changed. May be used for optimistic
            concurrency, change detection, and the watch operation on a resource or set of resources.
            Clients must treat these values as opaque and passed unmodified back to the server.
            They may only be valid for a particular resource or set of resources.

            Populated by the system.
            Read-only.
            Value must be treated as opaque by clients and .
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
            +optional
        selfLink:
          type: string
          description: |-
            Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.
            +optional
        timestamp:
          type: string
          description: |-
            The following fields define time interval from which metrics were
            collected from the interval [Timestamp-Window, Timestamp].
        uid:
          type: string
          description: |-
            UID is the unique in time and space value for this object. It is typically generated by
            the server on successful creation of a resource and is not allowed to change on PUT
            operations.

            Populated by the system.
            Read-only.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
            +optional
        window:
          "$ref": "#/components/schemas/v1.Duration"
    v1beta1.PodMetricsList:
      type: object
      properties:
        apiVersion:
          type: string
          description: |-
            APIVersion defines the versioned schema of this representation of an object.
            Servers should convert recognized schemas to the latest internal value, and
            may reject unrecognized values.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            +optional
        continue:
          type: string
          description: |-
            continue may be set if the user set a limit on the number of items returned, and indicates that
            the server has more data available. The value is opaque and may be used to issue another request
            to the endpoint that served this list to retrieve the next set of available objects. Continuing a
            consistent list may not be possible if the server configuration has changed or more than a few
            minutes have passed. The resourceVersion field returned when using this continue value will be
            identical to the value in the first response, unless you have received this token from an error
            message.
        items:
          type: array
          description: List of pod metrics.
          items:
            "$ref": "#/components/schemas/v1beta1.PodMetrics"
        kind:
          type: string
          description: |-
            Kind is a string value representing the REST resource this object represents.
            Servers may infer this from the endpoint the client submits requests to.
            Cannot be updated.
            In CamelCase.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            +optional
        remainingItemCount:
          type: integer
          description: |-
            remainingItemCount is the number of subsequent items in the list which are not included in this
            list response. If the list request contained label or field selectors, then the number of
            remaining items is unknown and the field will be left unset and omitted during serialization.
            If the list is complete (either because it is not chunking or because this is the last chunk),
            then there are no more remaining items and this field will be left unset and omitted during
            serialization.
            Servers older than v1.15 do not set this field.
            The intended use of the remainingItemCount is *estimating* the size of a collection. Clients
            should not rely on the remainingItemCount to be set or to be exact.
            +optional
        resourceVersion:
          type: string
          description: |-
            String that identifies the server's internal version of this object that
            can be used by clients to determine when objects have changed.
            Value must be treated as opaque by clients and passed unmodified back to the server.
            Populated by the system.
            Read-only.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
            +optional
        selfLink:
          type: string
          description: |-
            Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.
            +optional
    webhooks.webhookCreatePayload:
      type: object
      properties:
        endpointID:
          type: integer
          description: Environment(Endpoint) identifier. Reference the environment(endpoint)
            that will be used for deployment
          example: 1
        registryID:
          type: integer
          description: Registry Identifier
          example: 1
        resourceID:
          type: string
        webhookType:
          type: integer
          description: Type of webhook (1 - service)
    webhooks.webhookUpdatePayload:
      type: object
      properties:
        registryID:
          type: integer
          description: Registry Identifier
    endpoints.endpointUpdateRelationsPayload_relations:
      type: object
      properties:
        edgeGroups:
          type: array
          items:
            type: integer
            description: EdgeGroup Identifier
            example: 1
        group:
          type: integer
          description: Environment(Endpoint) group identifier
          example: 1
        tags:
          type: array
          items:
            type: integer
            description: Tag identifier
            example: 1
    portainer.Endpoint_agent:
      type: object
      properties:
        version:
          type: string
          example: 1.0.0
    portainer.Settings_edge:
      type: object
      properties:
        CommandInterval:
          type: integer
          description: The command list interval for edge agent - used in edge async
            mode (in seconds)
          example: 5
        PingInterval:
          type: integer
          description: The ping interval for edge agent - used in edge async mode
            (in seconds)
          example: 5
        SnapshotInterval:
          type: integer
          description: The snapshot interval for edge agent - used in edge async mode
            (in seconds)
          example: 5
        asyncMode:
          type: boolean
          description: Deprecated 2.18
    settings.publicSettingsResponse_edge:
      type: object
      properties:
        CommandInterval:
          type: integer
          description: The command list interval for edge agent - used in edge async
            mode [seconds]
          example: 60
        PingInterval:
          type: integer
          description: The ping interval for edge agent - used in edge async mode
            [seconds]
          example: 60
        SnapshotInterval:
          type: integer
          description: The snapshot interval for edge agent - used in edge async mode
            [seconds]
          example: 60
        checkinInterval:
          type: integer
          description: The check in interval for edge agent (in seconds) - used in
            non async mode [seconds]
          example: 60
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: X-API-KEY
      in: header
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
x-original-swagger-version: '2.0'
